{"version":3,"file":"OrderListPage-ChohWBih.js","sources":["../../../client/src/pages/admin/order/OrderListPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-page-container\">\r\n    <!-- 🔹 좌측 패널: 주문 목록 -->\r\n    <div class=\"order-list-panel\">\r\n      <h1 class=\"page-title\">주문 조회</h1>\r\n      \r\n      <!-- 🔹 검색 영역 -->\r\n      <div class=\"search-filter-area\">\r\n        <!-- 검색창 -->\r\n        <div class=\"search-bar\">\r\n          <!-- v-model: 입력값과 searchText 변수를 양방향으로 연결 -->\r\n          <va-input \r\n            v-model=\"searchText\" \r\n            placeholder=\"주문번호, 거래처명으로 검색...\"\r\n            class=\"search-input\"\r\n          >\r\n            <!-- 검색 아이콘을 입력창 앞에 추가 -->\r\n            <template #prepend>\r\n              <va-icon name=\"search\" />\r\n            </template>\r\n          </va-input>\r\n          <!-- @click: 버튼 클릭 시 handleSearch 함수 실행 -->\r\n          <va-button @click=\"handleSearch\">조회</va-button>\r\n        </div>\r\n        \r\n        <!-- 🔹 필터 드롭다운 영역 -->\r\n        <div class=\"filter-row\">\r\n          <!-- 거래처명 필터 -->\r\n          <div class=\"filter-item\">\r\n            <label>거래처명</label>\r\n            <!-- v-model로 선택값을 filters.customer에 저장 -->\r\n            <va-select\r\n              v-model=\"filters.customer\"\r\n              :options=\"customerOptions\"\r\n              placeholder=\"전체\"\r\n              clearable\r\n            />\r\n          </div>\r\n          \r\n          <!-- 사업자번호 필터 -->\r\n          <div class=\"filter-item\">\r\n            <label>사업자번호</label>\r\n            <va-select\r\n              v-model=\"filters.businessNo\"\r\n              :options=\"businessNoOptions\"\r\n              placeholder=\"전체\"\r\n              clearable\r\n            />\r\n          </div>\r\n          \r\n          <!-- 담당자 필터 -->\r\n          <div class=\"filter-item\">\r\n            <label>담당자</label>\r\n            <va-select\r\n              v-model=\"filters.manager\"\r\n              :options=\"managerOptions\"\r\n              placeholder=\"전체\"\r\n              clearable\r\n            />\r\n          </div>\r\n          \r\n          <!-- 상태 필터 -->\r\n          <div class=\"filter-item\">\r\n            <label>상태</label>\r\n            <va-select\r\n              v-model=\"filters.status\"\r\n              :options=\"statusOptions\"\r\n              placeholder=\"전체\"\r\n              clearable\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 🔹 주문 목록 테이블 -->\r\n      <div class=\"table-container\">\r\n        <table class=\"order-table\">\r\n          <thead>\r\n            <tr>\r\n              <th width=\"40\">\r\n                <!-- 전체 선택 체크박스 -->\r\n                <va-checkbox v-model=\"selectAll\" @update:model-value=\"handleSelectAll\" />\r\n              </th>\r\n              <th>주문번호</th>\r\n              <th>거래처명</th>\r\n              <th>주문일</th>\r\n              <th>상태</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <!-- v-for: 배열을 순회하며 각 항목을 표시 -->\r\n            <tr \r\n              v-for=\"order in paginatedOrders\" \r\n              :key=\"order.order_id\"\r\n              @click=\"selectOrder(order)\"\r\n              :class=\"{ 'selected': selectedOrder?.order_id === order.order_id }\"\r\n            >\r\n              <!-- @click.stop: 이벤트 전파 중지 (tr의 클릭 이벤트가 실행되지 않음) -->\r\n              <td @click.stop>\r\n                <va-checkbox v-model=\"selectedIds\" :array-value=\"order.order_id\" />\r\n              </td>\r\n              <td>{{ order.order_id }}</td>\r\n              <td>{{ order.customer_name }}</td>\r\n              <td>{{ formatDate(order.order_date) }}</td>\r\n              <td>\r\n                <!-- 상태별 색상 표시 -->\r\n                <va-chip :color=\"getStatusColor(order.status)\" size=\"small\">\r\n                  {{ order.status }}\r\n                </va-chip>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        \r\n        <!-- 데이터 없을 때 표시 -->\r\n        <div v-if=\"filteredOrders.length === 0\" class=\"no-data\">\r\n          검색 결과가 없습니다.\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 🔹 페이지네이션 -->\r\n      <div class=\"pagination-area\">\r\n        <div class=\"page-info\">\r\n          {{ startIndex + 1 }}-{{ Math.min(currentPage * itemsPerPage, filteredOrders.length) }} of {{ filteredOrders.length }}\r\n        </div>\r\n        <div class=\"page-controls\">\r\n          <span>Rows per page: </span>\r\n          <va-select\r\n            v-model=\"itemsPerPage\"\r\n            :options=\"[10, 20, 50]\"\r\n            class=\"rows-select\"\r\n          />\r\n          <va-pagination\r\n            v-model=\"currentPage\"\r\n            :pages=\"totalPages\"\r\n            :visible-pages=\"5\"\r\n            buttons-preset=\"secondary\"\r\n            rounded\r\n            gapped\r\n            border-color=\"primary\"\r\n            class=\"ml-3\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 🔹 우측 패널: 주문 상세 정보 -->\r\n    <div class=\"order-detail-panel\" v-if=\"selectedOrder\">\r\n      <h2 class=\"detail-title\">주문 상세 조회</h2>\r\n      \r\n      <!-- 주문 기본 정보 -->\r\n      <div class=\"order-detail-section\">\r\n        <h4>[주문 기본 정보]</h4>\r\n        <div class=\"order-detail-info\">\r\n          <div class=\"info-row\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">주문번호:</span>\r\n              <span class=\"value\">{{ selectedOrder.order_id }}</span>\r\n              <va-chip :color=\"getStatusColor(selectedOrder.status)\" size=\"small\" class=\"ml-2\">\r\n                {{ selectedOrder.status }}\r\n              </va-chip>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">주문일:</span>\r\n              <span class=\"value\">{{ formatDate(selectedOrder.order_date) }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">거래처:</span>\r\n              <span class=\"value\">{{ selectedOrder.customer_name }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">납기일:</span>\r\n              <span class=\"value\">{{ formatDate(selectedOrder.delivery_date) }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">연락처:</span>\r\n              <span class=\"value\">{{ selectedOrder.phone }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">작성자:</span>\r\n              <span class=\"value\">{{ selectedOrder.created_by }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">담당자:</span>\r\n              <span class=\"value\">{{ selectedOrder.manager_name }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row full-width\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">주소:</span>\r\n              <span class=\"value\">{{ selectedOrder.address }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 주문 품목 정보 -->\r\n      <div class=\"order-detail-section\">\r\n        <h4>[주문 품목 정보]</h4>\r\n        <div class=\"item-table-wrapper\">\r\n          <table class=\"item-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>제품명</th>\r\n                <th>규격</th>\r\n                <th>제품코드</th>\r\n                <th>출하 필요량</th>\r\n                <th>현재 재고</th>\r\n                <th>비고</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"item in orderItems\" :key=\"item.product_id\">\r\n                <td>{{ item.product_name }}</td>\r\n                <td>{{ item.spec }}</td>\r\n                <td>{{ item.product_code }}</td>\r\n                <td>{{ item.order_qty }}</td>\r\n                <td>{{ item.stock_qty }}</td>\r\n                <td>{{ item.note || '-' }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 선택된 주문이 없을 때 -->\r\n    <div class=\"order-detail-panel\" v-else>\r\n      <div class=\"empty-state\">\r\n        <va-icon name=\"inventory_2\" size=\"48px\" color=\"secondary\" />\r\n        <p>주문을 선택하면 상세 정보가 표시됩니다.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n// 🔹 Vue 3 Composition API 함수들을 가져옵니다\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\n// 🔹 HTTP 요청을 위한 axios 라이브러리\r\nimport axios from 'axios'\r\n\r\n// 🔹 TypeScript 인터페이스: 데이터의 구조를 정의합니다\r\ninterface Order {\r\n  order_id: string          // 주문번호\r\n  customer_name: string     // 거래처명\r\n  customer_id: string       // 거래처 ID\r\n  order_date: string        // 주문일\r\n  delivery_date: string     // 납기일\r\n  status: string           // 상태\r\n  phone: string            // 연락처\r\n  address: string          // 주소\r\n  manager_name: string     // 담당자명\r\n  created_by: string       // 작성자\r\n}\r\n\r\ninterface OrderItem {\r\n  product_id: string       // 제품 ID\r\n  product_name: string     // 제품명\r\n  product_code: string     // 제품코드\r\n  spec: string            // 규격\r\n  order_qty: number       // 주문수량\r\n  stock_qty: number       // 재고수량\r\n  note: string            // 비고\r\n}\r\n\r\n// 🔹 ref(): Vue의 반응형 데이터를 만듭니다\r\n// 값이 변경되면 화면이 자동으로 업데이트됩니다\r\nconst searchText = ref('')                    // 검색어\r\nconst selectedIds = ref<string[]>([])         // 선택된 주문 ID들\r\nconst selectAll = ref(false)                  // 전체 선택 여부\r\nconst currentPage = ref(1)                    // 현재 페이지\r\nconst itemsPerPage = ref(10)                  // 페이지당 항목 수\r\nconst orders = ref<Order[]>([])               // 전체 주문 목록\r\nconst selectedOrder = ref<Order | null>(null) // 선택된 주문\r\nconst orderItems = ref<OrderItem[]>([])       // 선택된 주문의 품목들\r\nconst loading = ref(false)                    // 로딩 상태\r\n\r\n// 🔹 필터 상태\r\nconst filters = ref({\r\n  customer: '',      // 거래처명 필터\r\n  businessNo: '',    // 사업자번호 필터\r\n  manager: '',       // 담당자 필터\r\n  status: ''        // 상태 필터\r\n})\r\n\r\n// 🔹 필터 옵션들 (DB에서 가져온 고유값들)\r\nconst customerOptions = ref<string[]>([])\r\nconst businessNoOptions = ref<string[]>([])\r\nconst managerOptions = ref<string[]>([])\r\nconst statusOptions = ref(['진행중', '완료', '지연', '대기', '취소'])\r\n\r\n// 🔹 computed: 다른 데이터를 기반으로 계산되는 속성\r\n// 의존하는 데이터가 변경되면 자동으로 재계산됩니다\r\nconst filteredOrders = computed(() => {\r\n  return orders.value.filter(order => {\r\n    // 검색어 필터\r\n    const matchesSearch = !searchText.value || \r\n      order.order_id.includes(searchText.value) ||\r\n      order.customer_name.toLowerCase().includes(searchText.value.toLowerCase())\r\n    \r\n    // 드롭다운 필터\r\n    const matchesFilters = \r\n      (!filters.value.customer || order.customer_name === filters.value.customer) &&\r\n      (!filters.value.status || order.status === filters.value.status) &&\r\n      (!filters.value.manager || order.manager_name === filters.value.manager)\r\n    \r\n    return matchesSearch && matchesFilters\r\n  })\r\n})\r\n\r\n// 🔹 총 페이지 수 계산\r\nconst totalPages = computed(() => \r\n  Math.ceil(filteredOrders.value.length / itemsPerPage.value)\r\n)\r\n\r\n// 🔹 현재 페이지의 시작 인덱스\r\nconst startIndex = computed(() => \r\n  (currentPage.value - 1) * itemsPerPage.value\r\n)\r\n\r\n// 🔹 현재 페이지에 표시할 주문들\r\nconst paginatedOrders = computed(() => {\r\n  const start = startIndex.value\r\n  const end = start + itemsPerPage.value\r\n  return filteredOrders.value.slice(start, end)\r\n})\r\n\r\n// 🔹 onMounted: 컴포넌트가 화면에 표시될 때 실행됩니다\r\nonMounted(async () => {\r\n  await fetchOrders()      // 주문 목록 가져오기\r\n  await fetchFilterOptions() // 필터 옵션 가져오기\r\n})\r\n\r\n// 🔸 Mock 데이터 함수 (개발용)\r\nfunction useMockData() {\r\n  // 주문 목록 설정\r\n  orders.value = [\r\n    {\r\n      order_id: 'ORD001',\r\n      customer_name: '셀트리온',\r\n      customer_id: 'CUS001',\r\n      order_date: '2024-01-15',\r\n      delivery_date: '2024-01-20',\r\n      status: '진행중',\r\n      phone: '02-1234-5678',\r\n      address: '인천광역시 연수구 아카데미로 23',\r\n      manager_name: '홍길동',\r\n      created_by: '김철수'\r\n    },\r\n    {\r\n      order_id: 'ORD002',\r\n      customer_name: '한미약품',\r\n      customer_id: 'CUS002',\r\n      order_date: '2024-01-16',\r\n      delivery_date: '2024-01-22',\r\n      status: '완료',\r\n      phone: '02-9876-5432',\r\n      address: '서울특별시 송파구 위례성대로 14',\r\n      manager_name: '이영희',\r\n      created_by: '박지민'\r\n    },\r\n    {\r\n      order_id: 'ORD003',\r\n      customer_name: '종근당',\r\n      customer_id: 'CUS003',\r\n      order_date: '2024-01-17',\r\n      delivery_date: '2024-01-25',\r\n      status: '지연',\r\n      phone: '02-5555-1234',\r\n      address: '서울특별시 용산구 청파로 383',\r\n      manager_name: '홍길동',\r\n      created_by: '김철수'\r\n    },\r\n    {\r\n      order_id: 'ORD004',\r\n      customer_name: '대웅제약',\r\n      customer_id: 'CUS004',\r\n      order_date: '2024-01-18',\r\n      delivery_date: '2024-01-28',\r\n      status: '대기',\r\n      phone: '02-3333-4444',\r\n      address: '서울시 강남구 봉은사로 114길 12',\r\n      manager_name: '박지민',\r\n      created_by: '이영희'\r\n    }\r\n  ]\r\n  \r\n  // 필터 옵션 설정\r\n  customerOptions.value = ['셀트리온', '한미약품', '종근당', '대웅제약', '유한양행']\r\n  managerOptions.value = ['홍길동', '김철수', '이영희', '박지민']\r\n  businessNoOptions.value = ['111-11-11111', '222-22-22222', '333-33-33333']\r\n  \r\n  // 첫 번째 주문 자동 선택\r\n  if (orders.value.length > 0) {\r\n    selectOrder(orders.value[0])\r\n  }\r\n}\r\n\r\n// 🔹 API 함수들\r\n// async/await: 비동기 작업을 동기적으로 처리합니다\r\nasync function fetchOrders() {\r\n  try {\r\n    loading.value = true\r\n    // GET 요청: 서버에서 주문 목록을 가져옵니다\r\n    const response = await axios.get('/api/orders')\r\n    \r\n    // 🔸 디버깅: 받은 데이터 확인\r\n    console.log('API 응답 데이터:', response.data)\r\n    \r\n    // 🔸 데이터가 배열인지 확인하고 처리\r\n    if (Array.isArray(response.data)) {\r\n      orders.value = response.data\r\n    } else if (response.data && Array.isArray(response.data.data)) {\r\n      // 만약 { data: [...] } 형태로 왔다면\r\n      orders.value = response.data.data\r\n    } else if (response.data && Array.isArray(response.data.orders)) {\r\n      // 만약 { orders: [...] } 형태로 왔다면\r\n      orders.value = response.data.orders\r\n    } else {\r\n      console.error('예상치 못한 데이터 형식:', response.data)\r\n      orders.value = []\r\n    }\r\n    \r\n    // 첫 주문 자동 선택\r\n    if (orders.value.length > 0) {\r\n      await selectOrder(orders.value[0])\r\n    }\r\n  } catch (error) {\r\n    console.error('주문 목록 로드 실패:', error)\r\n    // API가 아직 없으면 임시 데이터 사용\r\n    orders.value = [\r\n      {\r\n        order_id: 'ORD001',\r\n        customer_name: '셀트리온',\r\n        customer_id: 'CUS001',\r\n        order_date: '2024-01-15',\r\n        delivery_date: '2024-01-20',\r\n        status: '진행중',\r\n        phone: '02-1234-5678',\r\n        address: '인천광역시 연수구 아카데미로 23',\r\n        manager_name: '홍길동',\r\n        created_by: '김철수'\r\n      },\r\n      {\r\n        order_id: 'ORD002',\r\n        customer_name: '한미약품',\r\n        customer_id: 'CUS002',\r\n        order_date: '2024-01-16',\r\n        delivery_date: '2024-01-22',\r\n        status: '완료',\r\n        phone: '02-9876-5432',\r\n        address: '서울특별시 송파구 위례성대로 14',\r\n        manager_name: '이영희',\r\n        created_by: '박지민'\r\n      }\r\n    ]\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 🔹 필터 옵션 가져오기\r\nasync function fetchFilterOptions() {\r\n  try {\r\n    // 거래처명 목록 가져오기\r\n    const customersRes = await axios.get('/api/customers/names')\r\n    customerOptions.value = customersRes.data\r\n    \r\n    // 담당자 목록 가져오기\r\n    const managersRes = await axios.get('/api/employees/managers')\r\n    managerOptions.value = managersRes.data\r\n  } catch (error) {\r\n    console.error('필터 옵션 로드 실패:', error)\r\n    \r\n    // 🔸 API가 없을 때 임시 데이터 사용\r\n    customerOptions.value = ['셀트리온', '한미약품', '종근당', '대웅제약', '유한양행']\r\n    managerOptions.value = ['홍길동', '김철수', '이영희', '박지민']\r\n    businessNoOptions.value = ['111-11-11111', '222-22-22222', '333-33-33333']\r\n  }\r\n}\r\n\r\n// 🔹 주문 선택 시 상세 정보 가져오기\r\nasync function selectOrder(order: Order) {\r\n  try {\r\n    selectedOrder.value = order\r\n    \r\n    // 🔸 백엔드 API 경로에 맞게 수정 (/details)\r\n    const response = await axios.get(`/api/orders/${order.order_id}/details`)\r\n    console.log('주문 상세 응답:', response.data)\r\n    \r\n    // 🔸 백엔드 응답 구조에 맞게 데이터 처리\r\n    if (response.data) {\r\n      // order와 items가 분리되어 있을 경우\r\n      if (response.data.items) {\r\n        orderItems.value = response.data.items\r\n      } \r\n      // 또는 다른 구조일 경우 (백엔드 응답 확인 필요)\r\n      else if (Array.isArray(response.data)) {\r\n        orderItems.value = response.data\r\n      } else {\r\n        console.log('예상치 못한 상세 데이터 구조:', response.data)\r\n        orderItems.value = []\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('주문 상세 정보 로드 실패:', error)\r\n    \r\n    // 🔸 임시 데이터 사용\r\n    orderItems.value = [\r\n      {\r\n        product_id: 'PRD001',\r\n        product_name: '타이레놀 500mg',\r\n        product_code: 'TYL-500',\r\n        spec: '500mg x 10정',\r\n        order_qty: 100,\r\n        stock_qty: 50,\r\n        note: '긴급 배송 요청'\r\n      },\r\n      {\r\n        product_id: 'PRD002',\r\n        product_name: '아스피린 100mg',\r\n        product_code: 'ASP-100',\r\n        spec: '100mg x 30정',\r\n        order_qty: 200,\r\n        stock_qty: 150,\r\n        note: ''\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n// 🔹 검색 실행\r\nfunction handleSearch() {\r\n  currentPage.value = 1  // 검색 시 첫 페이지로 이동\r\n}\r\n\r\n// 🔹 전체 선택/해제\r\nfunction handleSelectAll(value: boolean) {\r\n  if (value) {\r\n    // 현재 페이지의 모든 주문 선택\r\n    selectedIds.value = paginatedOrders.value.map(order => order.order_id)\r\n  } else {\r\n    // 모두 선택 해제\r\n    selectedIds.value = []\r\n  }\r\n}\r\n\r\n// 🔹 날짜 포맷팅 함수\r\nfunction formatDate(dateString: string) {\r\n  if (!dateString) return '-'\r\n  // YYYY-MM-DD 형식으로 변환\r\n  const date = new Date(dateString)\r\n  return date.toLocaleDateString('ko-KR').replace(/\\. /g, '-').replace(/\\./g, '')\r\n}\r\n\r\n// 🔹 상태별 색상 반환\r\nfunction getStatusColor(status: string) {\r\n  const colorMap: Record<string, string> = {\r\n    '진행중': 'info',\r\n    '완료': 'success',\r\n    '지연': 'danger',\r\n    '대기': 'warning',\r\n    '취소': 'secondary'\r\n  }\r\n  return colorMap[status] || 'secondary'\r\n}\r\n\r\n// 🔹 watch: 특정 데이터의 변경을 감지합니다\r\nwatch(filters, () => {\r\n  // 필터가 변경되면 첫 페이지로 이동\r\n  currentPage.value = 1\r\n}, { deep: true })  // deep: 객체 내부의 변경도 감지\r\n\r\n// 🔹 페이지당 항목 수 변경 시\r\nwatch(itemsPerPage, () => {\r\n  currentPage.value = 1\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n/* 🔹 scoped: 이 컴포넌트에만 적용되는 스타일 */\r\n\r\n/* 전체 컨테이너 */\r\n.order-page-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1.5fr; /* 좌 40%, 우 60% */\r\n  gap: 20px;\r\n  padding: 20px;\r\n  height: calc(100vh - 100px);\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n/* 좌측 패널 */\r\n.order-list-panel {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 24px;\r\n  display: flex;\r\n  width: 500px;\r\n  flex-direction: column;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.page-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 검색 영역 */\r\n.search-bar {\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;                   /* 남은 공간 모두 차지 */\r\n}\r\n\r\n/* 필터 행 */\r\n.filter-row {\r\n  display: grid;             /* 격자 레이아웃 */\r\n  grid-template-columns: repeat(4, 1fr); /* 4개 열, 동일 너비 */\r\n  gap: 12px;\r\n}\r\n\r\n.filter-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.filter-item label {\r\n  font-size: 12px;\r\n  color: #666;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 테이블 컨테이너 */\r\n.table-container {\r\n  flex: 1;                   /* 남은 공간 모두 차지 */\r\n  overflow-y: auto;          /* 세로 스크롤 */\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.order-table {\r\n  width: 100%;\r\n  border-collapse: collapse;  /* 테이블 경계선 합치기 */\r\n}\r\n\r\n.order-table th {\r\n  background-color: #f5f5f5;\r\n  padding: 12px 8px;\r\n  text-align: left;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  position: sticky;          /* 스크롤 시 고정 */\r\n  top: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.order-table td {\r\n  padding: 12px 8px;\r\n  font-size: 14px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.order-table tbody tr {\r\n  cursor: pointer;\r\n  transition: background-color 0.2s; /* 부드러운 색상 전환 */\r\n}\r\n\r\n.order-table tbody tr:hover {\r\n  background-color: #f8f8f8;\r\n}\r\n\r\n.order-table tbody tr.selected {\r\n  background-color: #e3f2fd; /* 선택된 행 강조 */\r\n}\r\n\r\n/* 데이터 없음 */\r\n.no-data {\r\n  text-align: center;\r\n  padding: 40px;\r\n  color: #999;\r\n}\r\n\r\n/* 페이지네이션 */\r\n.pagination-area {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n  padding-top: 16px;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n/* 우측 패널 */\r\n.order-detail-panel {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 24px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  overflow-y: auto;\r\n}\r\n\r\n.detail-title {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n/* 주문 상세 섹션 */\r\n.order-detail-section {\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.order-detail-section h4 {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 16px;\r\n  color: #333;\r\n}\r\n\r\n/* 정보 행 */\r\n.info-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 16px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.info-row.full-width {\r\n  grid-template-columns: 1fr;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.info-item .label {\r\n  font-weight: 500;\r\n  color: #666;\r\n  min-width: 80px;\r\n}\r\n\r\n.info-item .value {\r\n  color: #333;\r\n}\r\n\r\n/* 품목 테이블 */\r\n.item-table-wrapper {\r\n  overflow-x: auto;\r\n}\r\n\r\n.item-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.item-table th {\r\n  background-color: #f8f8f8;\r\n  padding: 10px;\r\n  text-align: left;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  border-bottom: 2px solid #e0e0e0;\r\n}\r\n\r\n.item-table td {\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n/* 빈 상태 */\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #999;\r\n  gap: 16px;\r\n}\r\n\r\n/* 유틸리티 클래스 */\r\n.ml-2 { margin-left: 8px; }\r\n.ml-3 { margin-left: 12px; }\r\n\r\n/* 반응형 디자인 */\r\n@media (max-width: 1200px) {\r\n  .order-page-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .order-list-panel,\r\n  .order-detail-panel {\r\n    flex: 1;\r\n    max-width: none;\r\n  }\r\n}\r\n</style>"],"names":["searchText","ref","selectedIds","selectAll","currentPage","itemsPerPage","orders","selectedOrder","orderItems","loading","filters","customerOptions","businessNoOptions","managerOptions","statusOptions","filteredOrders","computed","order","matchesSearch","matchesFilters","totalPages","startIndex","paginatedOrders","start","end","onMounted","fetchOrders","fetchFilterOptions","response","axios","selectOrder","error","customersRes","managersRes","handleSearch","handleSelectAll","value","formatDate","dateString","getStatusColor","status","watch","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_createVNode","_component_va_input","$event","_component_va_icon","_component_va_button","_hoisted_5","_hoisted_6","_component_va_select","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_component_va_checkbox","_Fragment","_renderList","_a","_toDisplayString","_component_va_chip","_createTextVNode","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_va_pagination","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","item","_hoisted_45","_hoisted_46"],"mappings":"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"}