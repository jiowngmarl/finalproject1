{"version":3,"file":"OrderListPage-BqIitYMr.js","sources":["../../../client/src/pages/admin/order/OrderListPage.vue"],"sourcesContent":["<template>\n  <div class=\"order-page-container\">\n    <!-- 🔹 좌측 패널: 주문 목록 -->\n    <div class=\"order-list-panel\">\n      <h1 class=\"page-title\">주문 조회</h1>\n\n      <!-- 🔹 검색 영역 -->\n      <div class=\"search-filter-area\">\n        <!-- 검색창 -->\n        <div class=\"search-bar\">\n          <!-- v-model: 입력값과 searchText 변수를 양방향으로 연결 -->\n          <va-input\n            v-model=\"searchText\"\n            placeholder=\"주문번호, 거래처명으로 검색...\"\n            class=\"search-input\"\n          >\n            <!-- 검색 아이콘을 입력창 앞에 추가 -->\n            <template #prepend>\n              <va-icon name=\"search\" />\n            </template>\n          </va-input>\n          <!-- @click: 버튼 클릭 시 handleSearch 함수 실행 -->\n          <va-button @click=\"handleSearch\">조회</va-button>\n        </div>\n\n        <!-- 🔹 필터 드롭다운 영역 -->\n        <div class=\"filter-row\">\n          <!-- 거래처명 필터 -->\n          <div class=\"filter-item\">\n            <label>거래처명</label>\n            <!-- v-model로 선택값을 filters.customer에 저장 -->\n            <va-select\n              v-model=\"filters.customer\"\n              :options=\"customerOptions\"\n              placeholder=\"전체\"\n              clearable\n            />\n          </div>\n\n          <!-- 사업자번호 필터 -->\n          <div class=\"filter-item\">\n            <label>사업자번호</label>\n            <va-select\n              v-model=\"filters.businessNo\"\n              :options=\"businessNoOptions\"\n              placeholder=\"전체\"\n              clearable\n            />\n          </div>\n\n          <!-- 담당자 필터 -->\n          <div class=\"filter-item\">\n            <label>담당자</label>\n            <va-select\n              v-model=\"filters.manager\"\n              :options=\"managerOptions\"\n              placeholder=\"전체\"\n              clearable\n            />\n          </div>\n\n          <!-- 상태 필터 -->\n          <div class=\"filter-item\">\n            <label>상태</label>\n            <va-select\n              v-model=\"filters.status\"\n              :options=\"statusOptions\"\n              placeholder=\"전체\"\n              clearable\n            />\n          </div>\n        </div>\n      </div>\n\n      <!-- 🔹 주문 목록 테이블 -->\n      <div class=\"table-container\">\n        <table class=\"order-table\">\n          <thead>\n            <tr>\n              <th width=\"40\">\n                <!-- 전체 선택 체크박스 -->\n                <va-checkbox\n                  v-model=\"selectAll\"\n                  @update:model-value=\"handleSelectAll\"\n                />\n              </th>\n              <th>주문번호</th>\n              <th>거래처명</th>\n              <th>주문일</th>\n              <th>상태</th>\n            </tr>\n          </thead>\n          <tbody>\n            <!-- v-for: 배열을 순회하며 각 항목을 표시 -->\n            <tr\n              v-for=\"order in paginatedOrders\"\n              :key=\"order.order_id\"\n              @click=\"selectOrder(order)\"\n              :class=\"{ selected: selectedOrder?.order_id === order.order_id }\"\n            >\n              <!-- @click.stop: 이벤트 전파 중지 (tr의 클릭 이벤트가 실행되지 않음) -->\n              <td @click.stop>\n                <va-checkbox\n                  v-model=\"selectedIds\"\n                  :array-value=\"order.order_id\"\n                />\n              </td>\n              <td>{{ order.order_id }}</td>\n              <td>{{ order.customer_name }}</td>\n              <td>{{ formatDate(order.order_date) }}</td>\n              <td>\n                <!-- 상태별 색상 표시 -->\n                <va-chip :color=\"getStatusColor(order.status)\" size=\"small\">\n                  {{ order.status }}\n                </va-chip>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <!-- 데이터 없을 때 표시 -->\n        <div v-if=\"filteredOrders.length === 0\" class=\"no-data\">\n          검색 결과가 없습니다.\n        </div>\n      </div>\n\n      <!-- 🔹 페이지네이션 -->\n      <div class=\"pagination-area\">\n        <div class=\"page-info\">\n          {{ startIndex + 1 }}-{{\n            Math.min(currentPage * itemsPerPage, filteredOrders.length)\n          }}\n          of {{ filteredOrders.length }}\n        </div>\n        <div class=\"page-controls\">\n          <span>Rows per page: </span>\n          <va-select\n            v-model=\"itemsPerPage\"\n            :options=\"[10, 20, 50]\"\n            class=\"rows-select\"\n          />\n          <va-pagination\n            v-model=\"currentPage\"\n            :pages=\"totalPages\"\n            :visible-pages=\"5\"\n            buttons-preset=\"secondary\"\n            rounded\n            gapped\n            border-color=\"primary\"\n            class=\"ml-3\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <!-- 🔹 우측 패널: 주문 상세 정보 -->\n    <div class=\"order-detail-panel\" v-if=\"selectedOrder\">\n      <h2 class=\"detail-title\">주문 상세 조회</h2>\n\n      <!-- 주문 기본 정보 -->\n      <div class=\"order-detail-section\">\n        <h4>[주문 기본 정보]</h4>\n        <div class=\"order-detail-info\">\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">주문번호:</span>\n              <span class=\"value\">{{ selectedOrder.order_id }}</span>\n              <va-chip\n                :color=\"getStatusColor(selectedOrder.status)\"\n                size=\"small\"\n                class=\"ml-2\"\n              >\n                {{ selectedOrder.status }}\n              </va-chip>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">주문일:</span>\n              <span class=\"value\">{{\n                formatDate(selectedOrder.order_date)\n              }}</span>\n            </div>\n          </div>\n\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">거래처:</span>\n              <span class=\"value\">{{ selectedOrder.customer_name }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">납기일:</span>\n              <span class=\"value\">{{\n                formatDate(selectedOrder.delivery_date)\n              }}</span>\n            </div>\n          </div>\n\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">연락처:</span>\n              <span class=\"value\">{{ selectedOrder.phone }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">작성자:</span>\n              <span class=\"value\">{{ selectedOrder.created_by }}</span>\n            </div>\n          </div>\n\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">담당자:</span>\n              <span class=\"value\">{{ selectedOrder.manager_name }}</span>\n            </div>\n          </div>\n\n          <div class=\"info-row full-width\">\n            <div class=\"info-item\">\n              <span class=\"label\">주소:</span>\n              <span class=\"value\">{{ selectedOrder.address }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 주문 품목 정보 -->\n      <div class=\"order-detail-section\">\n        <h4>[주문 품목 정보]</h4>\n        <div class=\"item-table-wrapper\">\n          <table class=\"item-table\">\n            <thead>\n              <tr>\n                <th>제품명</th>\n                <th>규격</th>\n                <th>제품코드</th>\n                <th>출하 필요량</th>\n                <th>현재 재고</th>\n                <th>비고</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in orderItems\" :key=\"item.product_id\">\n                <td>{{ item.product_name }}</td>\n                <td>{{ item.spec }}</td>\n                <td>{{ item.product_code }}</td>\n                <td>{{ item.order_qty }}</td>\n                <td>{{ item.stock_qty }}</td>\n                <td>{{ item.note || \"-\" }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <!-- 선택된 주문이 없을 때 -->\n    <div class=\"order-detail-panel\" v-else>\n      <div class=\"empty-state\">\n        <va-icon name=\"inventory_2\" size=\"48px\" color=\"secondary\" />\n        <p>주문을 선택하면 상세 정보가 표시됩니다.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// 🔹 Vue 3 Composition API 함수들을 가져옵니다\nimport { ref, computed, onMounted, watch } from \"vue\";\n// 🔹 HTTP 요청을 위한 axios 라이브러리\nimport axios from \"axios\";\n\n// 🔹 TypeScript 인터페이스: 데이터의 구조를 정의합니다\ninterface Order {\n  order_id: string; // 주문번호\n  customer_name: string; // 거래처명\n  customer_id: string; // 거래처 ID\n  order_date: string; // 주문일\n  delivery_date: string; // 납기일\n  status: string; // 상태\n  phone: string; // 연락처\n  address: string; // 주소\n  manager_name: string; // 담당자명\n  created_by: string; // 작성자\n}\n\ninterface OrderItem {\n  product_id: string; // 제품 ID\n  product_name: string; // 제품명\n  product_code: string; // 제품코드\n  spec: string; // 규격\n  order_qty: number; // 주문수량\n  stock_qty: number; // 재고수량\n  note: string; // 비고\n}\n\n// 🔹 ref(): Vue의 반응형 데이터를 만듭니다\n// 값이 변경되면 화면이 자동으로 업데이트됩니다\nconst searchText = ref(\"\"); // 검색어\nconst selectedIds = ref<string[]>([]); // 선택된 주문 ID들\nconst selectAll = ref(false); // 전체 선택 여부\nconst currentPage = ref(1); // 현재 페이지\nconst itemsPerPage = ref(10); // 페이지당 항목 수\nconst orders = ref<Order[]>([]); // 전체 주문 목록\nconst selectedOrder = ref<Order | null>(null); // 선택된 주문\nconst orderItems = ref<OrderItem[]>([]); // 선택된 주문의 품목들\nconst loading = ref(false); // 로딩 상태\n\n// 🔹 필터 상태\nconst filters = ref({\n  customer: \"\", // 거래처명 필터\n  businessNo: \"\", // 사업자번호 필터\n  manager: \"\", // 담당자 필터\n  status: \"\", // 상태 필터\n});\n\n// 🔹 필터 옵션들 (DB에서 가져온 고유값들)\nconst customerOptions = ref<string[]>([]);\nconst businessNoOptions = ref<string[]>([]);\nconst managerOptions = ref<string[]>([]);\nconst statusOptions = ref([\"진행중\", \"완료\", \"지연\", \"대기\", \"취소\"]);\n\n// 🔹 computed: 다른 데이터를 기반으로 계산되는 속성\n// 의존하는 데이터가 변경되면 자동으로 재계산됩니다\nconst filteredOrders = computed(() => {\n  return orders.value.filter((order) => {\n    // 검색어 필터\n    const matchesSearch =\n      !searchText.value ||\n      order.order_id.includes(searchText.value) ||\n      order.customer_name\n        .toLowerCase()\n        .includes(searchText.value.toLowerCase());\n\n    // 드롭다운 필터\n    const matchesFilters =\n      (!filters.value.customer ||\n        order.customer_name === filters.value.customer) &&\n      (!filters.value.status || order.status === filters.value.status) &&\n      (!filters.value.manager || order.manager_name === filters.value.manager);\n\n    return matchesSearch && matchesFilters;\n  });\n});\n\n// 🔹 총 페이지 수 계산\nconst totalPages = computed(() =>\n  Math.ceil(filteredOrders.value.length / itemsPerPage.value),\n);\n\n// 🔹 현재 페이지의 시작 인덱스\nconst startIndex = computed(() => (currentPage.value - 1) * itemsPerPage.value);\n\n// 🔹 현재 페이지에 표시할 주문들\nconst paginatedOrders = computed(() => {\n  const start = startIndex.value;\n  const end = start + itemsPerPage.value;\n  return filteredOrders.value.slice(start, end);\n});\n\n// 🔹 onMounted: 컴포넌트가 화면에 표시될 때 실행됩니다\nonMounted(async () => {\n  await fetchOrders(); // 주문 목록 가져오기\n  await fetchFilterOptions(); // 필터 옵션 가져오기\n});\n\n// 🔸 Mock 데이터 함수 (개발용)\nfunction useMockData() {\n  // 주문 목록 설정\n  orders.value = [\n    {\n      order_id: \"ORD001\",\n      customer_name: \"셀트리온\",\n      customer_id: \"CUS001\",\n      order_date: \"2024-01-15\",\n      delivery_date: \"2024-01-20\",\n      status: \"진행중\",\n      phone: \"02-1234-5678\",\n      address: \"인천광역시 연수구 아카데미로 23\",\n      manager_name: \"홍길동\",\n      created_by: \"김철수\",\n    },\n    {\n      order_id: \"ORD002\",\n      customer_name: \"한미약품\",\n      customer_id: \"CUS002\",\n      order_date: \"2024-01-16\",\n      delivery_date: \"2024-01-22\",\n      status: \"완료\",\n      phone: \"02-9876-5432\",\n      address: \"서울특별시 송파구 위례성대로 14\",\n      manager_name: \"이영희\",\n      created_by: \"박지민\",\n    },\n    {\n      order_id: \"ORD003\",\n      customer_name: \"종근당\",\n      customer_id: \"CUS003\",\n      order_date: \"2024-01-17\",\n      delivery_date: \"2024-01-25\",\n      status: \"지연\",\n      phone: \"02-5555-1234\",\n      address: \"서울특별시 용산구 청파로 383\",\n      manager_name: \"홍길동\",\n      created_by: \"김철수\",\n    },\n    {\n      order_id: \"ORD004\",\n      customer_name: \"대웅제약\",\n      customer_id: \"CUS004\",\n      order_date: \"2024-01-18\",\n      delivery_date: \"2024-01-28\",\n      status: \"대기\",\n      phone: \"02-3333-4444\",\n      address: \"서울시 강남구 봉은사로 114길 12\",\n      manager_name: \"박지민\",\n      created_by: \"이영희\",\n    },\n  ];\n\n  // 필터 옵션 설정\n  customerOptions.value = [\n    \"셀트리온\",\n    \"한미약품\",\n    \"종근당\",\n    \"대웅제약\",\n    \"유한양행\",\n  ];\n  managerOptions.value = [\"홍길동\", \"김철수\", \"이영희\", \"박지민\"];\n  businessNoOptions.value = [\"111-11-11111\", \"222-22-22222\", \"333-33-33333\"];\n\n  // 첫 번째 주문 자동 선택\n  if (orders.value.length > 0) {\n    selectOrder(orders.value[0]);\n  }\n}\n\n// 🔹 API 함수들\n// async/await: 비동기 작업을 동기적으로 처리합니다\nasync function fetchOrders() {\n  try {\n    loading.value = true;\n    // GET 요청: 서버에서 주문 목록을 가져옵니다\n    const response = await axios.get(\"/api/orders\");\n\n    // 🔸 디버깅: 받은 데이터 확인\n    console.log(\"API 응답 데이터:\", response.data);\n\n    // 🔸 데이터가 배열인지 확인하고 처리\n    if (Array.isArray(response.data)) {\n      orders.value = response.data;\n    } else if (response.data && Array.isArray(response.data.data)) {\n      // 만약 { data: [...] } 형태로 왔다면\n      orders.value = response.data.data;\n    } else if (response.data && Array.isArray(response.data.orders)) {\n      // 만약 { orders: [...] } 형태로 왔다면\n      orders.value = response.data.orders;\n    } else {\n      console.error(\"예상치 못한 데이터 형식:\", response.data);\n      orders.value = [];\n    }\n\n    // 첫 주문 자동 선택\n    if (orders.value.length > 0) {\n      await selectOrder(orders.value[0]);\n    }\n  } catch (error) {\n    console.error(\"주문 목록 로드 실패:\", error);\n    // API가 아직 없으면 임시 데이터 사용\n    orders.value = [\n      {\n        order_id: \"ORD001\",\n        customer_name: \"셀트리온\",\n        customer_id: \"CUS001\",\n        order_date: \"2024-01-15\",\n        delivery_date: \"2024-01-20\",\n        status: \"진행중\",\n        phone: \"02-1234-5678\",\n        address: \"인천광역시 연수구 아카데미로 23\",\n        manager_name: \"홍길동\",\n        created_by: \"김철수\",\n      },\n      {\n        order_id: \"ORD002\",\n        customer_name: \"한미약품\",\n        customer_id: \"CUS002\",\n        order_date: \"2024-01-16\",\n        delivery_date: \"2024-01-22\",\n        status: \"완료\",\n        phone: \"02-9876-5432\",\n        address: \"서울특별시 송파구 위례성대로 14\",\n        manager_name: \"이영희\",\n        created_by: \"박지민\",\n      },\n    ];\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 🔹 필터 옵션 가져오기\nasync function fetchFilterOptions() {\n  try {\n    // 거래처명 목록 가져오기\n    const customersRes = await axios.get(\"/api/customers/names\");\n    customerOptions.value = customersRes.data;\n\n    // 담당자 목록 가져오기\n    const managersRes = await axios.get(\"/api/employees/managers\");\n    managerOptions.value = managersRes.data;\n  } catch (error) {\n    console.error(\"필터 옵션 로드 실패:\", error);\n\n    // 🔸 API가 없을 때 임시 데이터 사용\n    customerOptions.value = [\n      \"셀트리온\",\n      \"한미약품\",\n      \"종근당\",\n      \"대웅제약\",\n      \"유한양행\",\n    ];\n    managerOptions.value = [\"홍길동\", \"김철수\", \"이영희\", \"박지민\"];\n    businessNoOptions.value = [\"111-11-11111\", \"222-22-22222\", \"333-33-33333\"];\n  }\n}\n\n// 🔹 주문 선택 시 상세 정보 가져오기\nasync function selectOrder(order: Order) {\n  try {\n    selectedOrder.value = order;\n\n    // 🔸 백엔드 API 경로에 맞게 수정 (/details)\n    const response = await axios.get(`/api/orders/${order.order_id}/details`);\n    console.log(\"주문 상세 응답:\", response.data);\n\n    // 🔸 백엔드 응답 구조에 맞게 데이터 처리\n    if (response.data) {\n      // order와 items가 분리되어 있을 경우\n      if (response.data.items) {\n        orderItems.value = response.data.items;\n      }\n      // 또는 다른 구조일 경우 (백엔드 응답 확인 필요)\n      else if (Array.isArray(response.data)) {\n        orderItems.value = response.data;\n      } else {\n        console.log(\"예상치 못한 상세 데이터 구조:\", response.data);\n        orderItems.value = [];\n      }\n    }\n  } catch (error) {\n    console.error(\"주문 상세 정보 로드 실패:\", error);\n\n    // 🔸 임시 데이터 사용\n    orderItems.value = [\n      {\n        product_id: \"PRD001\",\n        product_name: \"타이레놀 500mg\",\n        product_code: \"TYL-500\",\n        spec: \"500mg x 10정\",\n        order_qty: 100,\n        stock_qty: 50,\n        note: \"긴급 배송 요청\",\n      },\n      {\n        product_id: \"PRD002\",\n        product_name: \"아스피린 100mg\",\n        product_code: \"ASP-100\",\n        spec: \"100mg x 30정\",\n        order_qty: 200,\n        stock_qty: 150,\n        note: \"\",\n      },\n    ];\n  }\n}\n\n// 🔹 검색 실행\nfunction handleSearch() {\n  currentPage.value = 1; // 검색 시 첫 페이지로 이동\n}\n\n// 🔹 전체 선택/해제\nfunction handleSelectAll(value: boolean) {\n  if (value) {\n    // 현재 페이지의 모든 주문 선택\n    selectedIds.value = paginatedOrders.value.map((order) => order.order_id);\n  } else {\n    // 모두 선택 해제\n    selectedIds.value = [];\n  }\n}\n\n// 🔹 날짜 포맷팅 함수\nfunction formatDate(dateString: string) {\n  if (!dateString) return \"-\";\n  // YYYY-MM-DD 형식으로 변환\n  const date = new Date(dateString);\n  return date\n    .toLocaleDateString(\"ko-KR\")\n    .replace(/\\. /g, \"-\")\n    .replace(/\\./g, \"\");\n}\n\n// 🔹 상태별 색상 반환\nfunction getStatusColor(status: string) {\n  const colorMap: Record<string, string> = {\n    진행중: \"info\",\n    완료: \"success\",\n    지연: \"danger\",\n    대기: \"warning\",\n    취소: \"secondary\",\n  };\n  return colorMap[status] || \"secondary\";\n}\n\n// 🔹 watch: 특정 데이터의 변경을 감지합니다\nwatch(\n  filters,\n  () => {\n    // 필터가 변경되면 첫 페이지로 이동\n    currentPage.value = 1;\n  },\n  { deep: true },\n); // deep: 객체 내부의 변경도 감지\n\n// 🔹 페이지당 항목 수 변경 시\nwatch(itemsPerPage, () => {\n  currentPage.value = 1;\n});\n</script>\n\n<style scoped>\n/* 🔹 scoped: 이 컴포넌트에만 적용되는 스타일 */\n\n/* 전체 컨테이너 */\n.order-page-container {\n  display: grid;\n  grid-template-columns: 1fr 1.5fr; /* 좌 40%, 우 60% */\n  gap: 20px;\n  padding: 20px;\n  height: calc(100vh - 100px);\n  background-color: #f5f5f5;\n}\n\n/* 좌측 패널 */\n.order-list-panel {\n  background: white;\n  border-radius: 8px;\n  padding: 24px;\n  display: flex;\n  width: 500px;\n  flex-direction: column;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 20px;\n}\n\n/* 검색 영역 */\n.search-bar {\n  display: flex;\n  gap: 8px;\n  margin-bottom: 16px;\n}\n\n.search-input {\n  flex: 1; /* 남은 공간 모두 차지 */\n}\n\n/* 필터 행 */\n.filter-row {\n  display: grid; /* 격자 레이아웃 */\n  grid-template-columns: repeat(4, 1fr); /* 4개 열, 동일 너비 */\n  gap: 12px;\n}\n\n.filter-item {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.filter-item label {\n  font-size: 12px;\n  color: #666;\n  font-weight: 500;\n}\n\n/* 테이블 컨테이너 */\n.table-container {\n  flex: 1; /* 남은 공간 모두 차지 */\n  overflow-y: auto; /* 세로 스크롤 */\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n}\n\n/* 테이블 스타일 */\n.order-table {\n  width: 100%;\n  border-collapse: collapse; /* 테이블 경계선 합치기 */\n}\n\n.order-table th {\n  background-color: #f5f5f5;\n  padding: 12px 8px;\n  text-align: left;\n  font-weight: 500;\n  font-size: 14px;\n  border-bottom: 1px solid #e0e0e0;\n  position: sticky; /* 스크롤 시 고정 */\n  top: 0;\n  z-index: 1;\n}\n\n.order-table td {\n  padding: 12px 8px;\n  font-size: 14px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.order-table tbody tr {\n  cursor: pointer;\n  transition: background-color 0.2s; /* 부드러운 색상 전환 */\n}\n\n.order-table tbody tr:hover {\n  background-color: #f8f8f8;\n}\n\n.order-table tbody tr.selected {\n  background-color: #e3f2fd; /* 선택된 행 강조 */\n}\n\n/* 데이터 없음 */\n.no-data {\n  text-align: center;\n  padding: 40px;\n  color: #999;\n}\n\n/* 페이지네이션 */\n.pagination-area {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid #e0e0e0;\n}\n\n/* 우측 패널 */\n.order-detail-panel {\n  background: white;\n  border-radius: 8px;\n  padding: 24px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  overflow-y: auto;\n}\n\n.detail-title {\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 24px;\n}\n\n/* 주문 상세 섹션 */\n.order-detail-section {\n  margin-bottom: 32px;\n}\n\n.order-detail-section h4 {\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  color: #333;\n}\n\n/* 정보 행 */\n.info-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n  margin-bottom: 12px;\n}\n\n.info-row.full-width {\n  grid-template-columns: 1fr;\n}\n\n.info-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.info-item .label {\n  font-weight: 500;\n  color: #666;\n  min-width: 80px;\n}\n\n.info-item .value {\n  color: #333;\n}\n\n/* 품목 테이블 */\n.item-table-wrapper {\n  overflow-x: auto;\n}\n\n.item-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.item-table th {\n  background-color: #f8f8f8;\n  padding: 10px;\n  text-align: left;\n  font-weight: 500;\n  font-size: 14px;\n  border-bottom: 2px solid #e0e0e0;\n}\n\n.item-table td {\n  padding: 10px;\n  font-size: 14px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n/* 빈 상태 */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #999;\n  gap: 16px;\n}\n\n/* 유틸리티 클래스 */\n.ml-2 {\n  margin-left: 8px;\n}\n.ml-3 {\n  margin-left: 12px;\n}\n\n/* 반응형 디자인 */\n@media (max-width: 1200px) {\n  .order-page-container {\n    flex-direction: column;\n  }\n\n  .order-list-panel,\n  .order-detail-panel {\n    flex: 1;\n    max-width: none;\n  }\n}\n</style>\n"],"names":["searchText","ref","selectedIds","selectAll","currentPage","itemsPerPage","orders","selectedOrder","orderItems","loading","filters","customerOptions","businessNoOptions","managerOptions","statusOptions","filteredOrders","computed","order","matchesSearch","matchesFilters","totalPages","startIndex","paginatedOrders","start","end","onMounted","fetchOrders","fetchFilterOptions","response","axios","selectOrder","error","customersRes","managersRes","handleSearch","handleSelectAll","value","formatDate","dateString","getStatusColor","status","watch","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_createVNode","_component_va_input","$event","_component_va_icon","_component_va_button","_hoisted_5","_hoisted_6","_component_va_select","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_component_va_checkbox","_Fragment","_renderList","_a","_toDisplayString","_component_va_chip","_createTextVNode","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_va_pagination","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","item","_hoisted_45","_hoisted_46"],"mappings":"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"}