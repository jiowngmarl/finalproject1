{"version":3,"file":"PackageWork-CTBBWwV1.js","sources":["../../../client/src/pages/package/PackageWork.vue"],"sourcesContent":["<template>\r\n  <div class=\"package-work-container\">\r\n    <!-- 헤더 -->\r\n    <div class=\"work-header\">\r\n      <nav class=\"breadcrumb\">\r\n        <span class=\"breadcrumb-item\">Home</span>\r\n        <span class=\"breadcrumb-separator\">/</span>\r\n        <span class=\"breadcrumb-item\">포장</span>\r\n        <span class=\"breadcrumb-separator\">/</span>\r\n        <span class=\"breadcrumb-item\" @click=\"goBackToLineSelection\" style=\"cursor: pointer; color: #3b82f6;\">포장 라인 선택</span>\r\n        <span class=\"breadcrumb-separator\">/</span>\r\n        <span class=\"breadcrumb-item active\">포장 작업 수행</span>\r\n      </nav>\r\n      <div class=\"header-info\">\r\n        <div class=\"header-left\">\r\n          <h1>{{ workInfo.lineName }} - {{ getWorkflowStepText() }} 작업 수행</h1>\r\n          <div class=\"header-meta\">\r\n            <span class=\"line-type-badge\" :class=\"workInfo.lineType.toLowerCase()\">\r\n              {{ workInfo.lineType === 'INNER' ? '내포장' : '외포장' }}\r\n            </span>\r\n            <span class=\"work-status-badge\" :class=\"workStatus.toLowerCase()\">\r\n              {{ getWorkStatusText(workStatus) }}\r\n            </span>\r\n            <span v-if=\"workflowInfo.step === 'OUTER'\" class=\"workflow-badge\">\r\n              2단계: 최종 포장\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"workflowInfo.step\" class=\"workflow-indicator\">\r\n          <div class=\"workflow-step\" :class=\"{ completed: workflowInfo.innerCompleted }\">\r\n            <div class=\"step-text\">내포장</div>\r\n          </div>\r\n          <div class=\"workflow-arrow\">-></div>\r\n          <div class=\"workflow-step\" :class=\"{ active: workflowInfo.step === 'OUTER' }\">\r\n            <div class=\"step-text\">외포장</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 워크플로우 안내 -->\r\n    <div v-if=\"workflowInfo.step === 'OUTER' && workflowInfo.innerCompleted\" class=\"workflow-guide\">\r\n      <div class=\"guide-content\">\r\n        <h3>외포장 작업 단계입니다</h3>\r\n        <p>내포장 작업({{ workflowInfo.innerWorkNo }})이 완료되었습니다. 이제 최종 외포장 작업을 진행해주세요.</p>\r\n        <div class=\"guide-stats\">\r\n          <span>내포장 완료: {{ formatTime(workflowInfo.innerCompletionTime) }}</span>\r\n          <span v-if=\"workflowInfo.innerOutputQty > 0\" class=\"output-qty\">\r\n            완료수량: {{ formatNumber(workflowInfo.innerOutputQty) }}개 전달\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 메인 컨텐츠 -->\r\n    <div class=\"work-content\">\r\n      <div class=\"work-layout\">\r\n        <!-- 좌측: 작업 제어 및 진행 상황 -->\r\n        <div class=\"work-main\">\r\n          <div class=\"control-panel\">\r\n            <div class=\"panel-header\">\r\n              <h3>작업 제어</h3>\r\n            </div>\r\n            \r\n            <div class=\"control-section\">\r\n              <div class=\"control-row\">\r\n                <!-- 작업번호 선택 -->\r\n                <div class=\"control-group\">\r\n                  <label class=\"control-label\">\r\n                    작업번호 선택\r\n                    <span v-if=\"selectedWorkOrder\" class=\"selected-count\">\r\n                    </span>\r\n                  </label>\r\n                  \r\n                  <select \r\n                    v-model=\"selectedWorkOrder\" \r\n                    @change=\"onWorkOrderChange\"\r\n                    class=\"control-select\" \r\n                    :disabled=\"isWorking\"\r\n                  >\r\n                    <option value=\"\">{{ workInfo.lineName }}의 작업을 선택하세요</option>\r\n                    \r\n                    <!-- 실제 DB에서 조회된 작업번호 표시 (실제 제품명 적용) -->\r\n                    <option \r\n                      v-if=\"availableWork\" \r\n                      :value=\"availableWork.work_order_no || availableWork.work_id\"\r\n                      class=\"available-option\"\r\n                    >\r\n                      {{ availableWork.work_order_no || availableWork.work_id || '작업번호없음' }} - \r\n                      {{ getDisplayProductName(availableWork) }}\r\n                    </option>\r\n                  </select>\r\n                  \r\n                  <div v-if=\"!availableWork && !loading\" class=\"no-work-message\">\r\n                    <div class=\"message-content\">\r\n                      <div class=\"message-text\">\r\n                        <strong>{{ workInfo.lineName }}의 {{ workInfo.lineType === 'INNER' ? '내포장' : '외포장' }} 작업번호가 없습니다.</strong>\r\n                      </div>\r\n                      <div class=\"message-help\">\r\n                        • 제품코드 {{ extractedProductCode }}로 work_order_master 테이블 조회 완료<br>\r\n                        • 새로고침 버튼을 눌러보세요<br>\r\n                        • 또는 다른 라인을 선택해보세요\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div v-if=\"loading && loadingMessage.includes('작업번호')\" class=\"loading-work-message\">\r\n                    <div class=\"loading-content\">\r\n                      <strong>{{ workInfo.lineName }} 작업번호를 불러오는 중...</strong>\r\n                      <div class=\"loading-help\">제품코드 {{ extractedProductCode }} 기반 (work_order_master 조인)</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- 지시량 -->\r\n                <div class=\"control-group\">\r\n                  <label class=\"control-label\">지시량</label>\r\n                  <div class=\"control-display\">\r\n                    <span class=\"display-value\">{{ formatNumber(currentWork.target_quantity) }}</span>\r\n                    <span class=\"display-unit\">개</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"control-row\">\r\n                <!-- 기투입량 -->\r\n                <div class=\"control-group\">\r\n                  <label class=\"control-label\">기투입량</label>\r\n                  <div class=\"control-display\">\r\n                    <span class=\"display-value\" :class=\"{ 'workflow-linked': workInfo.lineType === 'OUTER' && workflowInfo.innerOutputQty > 0 }\">\r\n                      {{ formatNumber(currentWork.current_quantity) }}\r\n                    </span>\r\n                    <span class=\"display-unit\">개</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- 미투입량 -->\r\n                <div class=\"control-group\">\r\n                  <label class=\"control-label\">미투입량</label>\r\n                  <div class=\"control-display\">\r\n                    <span class=\"display-value\">{{ formatNumber(currentWork.remaining_quantity) }}</span>\r\n                    <span class=\"display-unit\">개</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"control-row\">\r\n                <!-- 생산속도 -->\r\n                <div class=\"control-group\">\r\n                  <label class=\"control-label\">생산속도 (개/초)</label>\r\n                  <select \r\n                    v-model.number=\"productionSettings.productionSpeed\" \r\n                    class=\"control-select\" \r\n                    :disabled=\"isWorking\"\r\n                  >\r\n                    <option value=\"10\">느림 (10개/초)</option>\r\n                    <option value=\"30\">보통 (30개/초)</option>\r\n                    <option value=\"60\">빠름 (60개/초)</option>\r\n                    <option value=\"100\">매우빠름 (100개/초)</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <!-- 투입수량 -->\r\n                <div class=\"control-group\">\r\n                  <label class=\"control-label\">\r\n                    투입수량\r\n                    <span v-if=\"currentWork.target_quantity > 0\" class=\"target-info\">\r\n                      (지시: {{ formatNumber(currentWork.target_quantity) }}개)\r\n                    </span>\r\n                    <span v-if=\"workInfo.lineType === 'OUTER' && workflowInfo.innerOutputQty > 0\" class=\"workflow-info\">\r\n                      (내포장 완료: {{ formatNumber(workflowInfo.innerOutputQty) }}개)\r\n                    </span>\r\n                  </label>\r\n                  <input \r\n                    v-model.number=\"inputQuantity\" \r\n                    type=\"number\" \r\n                    class=\"control-input\" \r\n                    :class=\"{ \r\n                      'workflow-linked': workInfo.lineType === 'OUTER' && workflowInfo.innerOutputQty > 0,\r\n                      'partial-work': isPartialWork\r\n                    }\"\r\n                    :placeholder=\"workInfo.lineType === 'OUTER' && workflowInfo.innerOutputQty > 0 ? workflowInfo.innerOutputQty.toString() : '500'\"\r\n                    :disabled=\"!selectedWorkOrder || isWorking || (workInfo.lineType === 'OUTER' && workflowInfo.innerOutputQty > 0)\"\r\n                    :max=\"currentWork.target_quantity\"\r\n                    min=\"1\"\r\n                    @input=\"onInputQuantityChange\"\r\n                  >\r\n                  \r\n                  <div v-if=\"workInfo.lineType === 'OUTER' && workflowInfo.innerOutputQty > 0\" class=\"workflow-linked-info\">\r\n                    연계: 내포장 완료수량으로 자동 설정됨 ({{ formatNumber(workflowInfo.innerOutputQty) }}개)\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"work-controls\">\r\n              <!-- 주요 작업 버튼들 -->\r\n              <div class=\"main-actions\">\r\n                <button \r\n                  @click=\"handleWorkButton\" \r\n                  :disabled=\"!canStartWork && !isWorking && workStatus !== 'PAUSED'\"\r\n                  :class=\"['btn', 'btn-work', { 'working': isWorking }]\"\r\n                >\r\n                  {{ getWorkButtonText() }}\r\n                </button>\r\n                \r\n                <button \r\n                  @click=\"completeProduction\" \r\n                  :disabled=\"!isWorking && workStatus !== 'COMPLETED'\"\r\n                  :class=\"['btn', 'btn-complete', { 'ready': workStatus === 'COMPLETED' }]\"\r\n                >\r\n                  {{ workStatus === 'COMPLETED' ? '완료 처리' : '생산 완료' }}\r\n                </button>\r\n                \r\n                <button \r\n                  @click=\"stopWork\" \r\n                  :disabled=\"!isWorking\"\r\n                  class=\"btn btn-stop\"\r\n                >\r\n                  작업 종료\r\n                </button>\r\n              </div>\r\n              \r\n              <!-- 보조 기능 버튼들 -->\r\n              <div class=\"sub-actions\">\r\n                <button @click=\"refreshWorkOrders\" :disabled=\"loading\" class=\"btn btn-refresh\">\r\n                  새로고침\r\n                </button>\r\n                <button \r\n                  @click=\"resetLineStatus\" \r\n                  :disabled=\"loading || isWorking\"\r\n                  class=\"btn btn-reset\"\r\n                  title=\"라인 초기화\"\r\n                >\r\n                  초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 실시간 진행 상황 -->\r\n          <div class=\"progress-panel\">\r\n            <h3>실시간 진행 상황</h3>\r\n            <div class=\"progress-cards\">\r\n              <div class=\"progress-card\">\r\n                <div class=\"card-header\">\r\n                  <span class=\"card-title\">생산수량</span>\r\n                </div>\r\n                <div class=\"card-value\">{{ formatNumber(productionSettings.currentProgress) }}</div>\r\n                <div class=\"card-unit\">개</div>\r\n              </div>\r\n              <div class=\"progress-card success\">\r\n                <div class=\"card-header\">\r\n                  <span class=\"card-title\">합격수량</span>\r\n                </div>\r\n                <div class=\"card-value\">{{ formatNumber(currentWork.output_qty) }}</div>\r\n                <div class=\"card-unit\">개</div>\r\n              </div>\r\n              <div class=\"progress-card danger\">\r\n                <div class=\"card-header\">\r\n                  <span class=\"card-title\">불량수량</span>\r\n                </div>\r\n                <div class=\"card-value\">{{ formatNumber(currentWork.defect_qty) }}</div>\r\n                <div class=\"card-unit\">개</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- 진행률 바 -->\r\n            <div class=\"progress-section\">\r\n              <div class=\"progress-header\">\r\n                <span>전체 진행률</span>\r\n                <span class=\"progress-percent\">{{ currentWork.progressRate }}%</span>\r\n              </div>\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress-fill\" :style=\"{ width: currentWork.progressRate + '%' }\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 작업 로그 -->\r\n          <div class=\"log-panel\">\r\n            <h3>작업 로그 (실제 DB 연동)</h3>\r\n            <div class=\"log-container\">\r\n              <div \r\n                v-for=\"log in workLogs\" \r\n                :key=\"log.id\" \r\n                class=\"log-item\"\r\n                :class=\"log.type\"\r\n              >\r\n                <div class=\"log-time\">{{ formatDateTime(log.timestamp) }}</div>\r\n                <div class=\"log-content\">{{ log.message }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 우측: 작업 정보 -->\r\n        <div class=\"work-sidebar\">\r\n          <div v-if=\"workflowInfo.step === 'OUTER' && workflowInfo.innerCompleted\" class=\"workflow-panel\">\r\n            <h3>워크플로우 정보</h3>\r\n            <div class=\"workflow-chain\">\r\n              <div class=\"chain-step completed\">\r\n                <div class=\"step-header\">\r\n                  <span class=\"step-title\">내포장 완료</span>\r\n                </div>\r\n                <div class=\"step-details\">\r\n                  <div class=\"detail-item\">\r\n                    <span class=\"detail-label\">작업번호:</span>\r\n                    <span class=\"detail-value\">{{ workflowInfo.innerWorkNo }}</span>\r\n                  </div>\r\n                  <div class=\"detail-item\">\r\n                    <span class=\"detail-label\">완료시간:</span>\r\n                    <span class=\"detail-value\">{{ formatTime(workflowInfo.innerCompletionTime) }}</span>\r\n                  </div>\r\n                  <div v-if=\"workflowInfo.innerOutputQty > 0\" class=\"detail-item\">\r\n                    <span class=\"detail-label\">완료수량:</span>\r\n                    <span class=\"detail-value highlight\">{{ formatNumber(workflowInfo.innerOutputQty) }}개</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"chain-arrow\">전달</div>\r\n              <div class=\"chain-step current\">\r\n                <div class=\"step-header\">\r\n                  <span class=\"step-title\">외포장 진행</span>\r\n                </div>\r\n                <div class=\"step-details\">\r\n                  <div class=\"detail-item\">\r\n                    <span class=\"detail-label\">라인:</span>\r\n                    <span class=\"detail-value\">{{ workInfo.lineName }}</span>\r\n                  </div>\r\n                  <div class=\"detail-item\">\r\n                    <span class=\"detail-label\">상태:</span>\r\n                    <span class=\"detail-value\">{{ getWorkStatusText(workStatus) }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"info-panel\">\r\n            <h3>현재 작업 정보 (실제 DB 연동)</h3>\r\n            <div class=\"info-section\">\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">라인 정보</span>\r\n                <span class=\"info-value\">{{ workInfo.lineName }} ({{ workInfo.lineId }})</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">제품코드</span>\r\n                <span class=\"info-value\">{{ extractedProductCode }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">작업번호</span>\r\n                <span class=\"info-value\">{{ currentWork.work_order_no || currentWork.work_id || '-' }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">제품명</span>\r\n                <span class=\"info-value\">{{ currentWork.product_name || currentWork.final_product_name || getProductNameFromCode(extractedProductCode) }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">포장형태</span>\r\n                <span class=\"info-value\">{{ workInfo.lineType === 'INNER' ? '내포장' : '외포장' }}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- 작업량 정보 섹션 -->\r\n            <div class=\"info-section\">\r\n              <h4>작업량 정보</h4>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">지시량</span>\r\n                <span class=\"info-value\">{{ formatNumber(currentWork.target_quantity) || '-' }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">기투입량</span>\r\n                <span class=\"info-value\" :class=\"{ 'workflow-linked': workInfo.lineType === 'OUTER' && workflowInfo.innerOutputQty > 0 }\">\r\n                  {{ formatNumber(currentWork.current_quantity) || '-' }}\r\n                </span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">미투입량</span>\r\n                <span class=\"info-value\">\r\n                  {{ formatNumber(currentWork.remaining_quantity) || '-' }}\r\n                </span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">달성률</span>\r\n                <span class=\"info-value achievement-rate\" :class=\"getAchievementRateClass(currentWork.achievementRate)\">\r\n                  {{ currentWork.achievementRate }}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- 시간 정보 섹션 -->\r\n            <div class=\"info-section\">\r\n              <h4>시간 정보</h4>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">시작시간</span>\r\n                <span class=\"info-value\">{{ formatTime(currentWork.start_time) }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">종료시간</span>\r\n                <span class=\"info-value\">{{ formatTime(currentWork.actual_end_time) }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">작업시간</span>\r\n                <span class=\"info-value work-duration\">{{ workElapsedTime }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">종료예정시간</span>\r\n                <span class=\"info-value estimated-time\" :class=\"{ 'time-warning': isTimeWarning }\">{{ formatTime(currentWork.end_time) }}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- 담당자 정보 섹션 -->\r\n            <div class=\"info-section\">\r\n              <h4>담당자 정보</h4>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">작업자명</span>\r\n                <span class=\"info-value worker-name\">{{ currentWork.employee_name || '김홍인' }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"info-label\">사번</span>\r\n                <span class=\"info-value\">{{ currentWork.employee_id || '-' }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"line-change-panel\">\r\n            <button @click=\"goBackToLineSelection\" class=\"btn-line-change\">\r\n              다른 라인으로 변경하기\r\n            </button>\r\n            <p class=\"line-change-help\">\r\n              현재: <strong>{{ workInfo.lineName }}</strong><br>\r\n              잘못된 라인을 선택했거나 다른 라인에서 작업하고 싶다면 클릭하세요\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 작업 완료 확인 모달 -->\r\n    <div v-if=\"showCompleteModal\" class=\"modal-overlay\" @click=\"closeCompleteModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>{{ getCompleteModalTitle() }}</h3>\r\n          <button @click=\"closeCompleteModal\" class=\"modal-close\">닫기</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"complete-summary\">\r\n            <h4>작업 결과</h4>\r\n            <div class=\"summary-grid\">\r\n              <div class=\"summary-item\">\r\n                <span class=\"summary-label\">지시량</span>\r\n                <span class=\"summary-value\">{{ formatNumber(currentWork.target_quantity) }}개</span>\r\n              </div>\r\n              <div class=\"summary-item\">\r\n                <span class=\"summary-label\">투입수량</span>\r\n                <span class=\"summary-value\">{{ formatNumber(currentWork.current_quantity) }}개</span>\r\n              </div>\r\n              <div class=\"summary-item\">\r\n                <span class=\"summary-label\">합격수량</span>\r\n                <span class=\"summary-value\">{{ formatNumber(currentWork.output_qty) }}개</span>\r\n              </div>\r\n              <div class=\"summary-item\">\r\n                <span class=\"summary-label\">불량수량</span>\r\n                <span class=\"summary-value\">{{ formatNumber(currentWork.defect_qty) }}개</span>\r\n              </div>\r\n              <div class=\"summary-item\">\r\n                <span class=\"summary-label\">합격률</span>\r\n                <span class=\"summary-value\">{{ currentWork.passRate }}%</span>\r\n              </div>\r\n              <div class=\"summary-item\">\r\n                <span class=\"summary-label\">작업시간</span>\r\n                <span class=\"summary-value\">{{ workElapsedTime }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 워크플로우별 다음 단계 안내 -->\r\n          <div v-if=\"workInfo.lineType === 'INNER'\" class=\"next-step-info inner-completion\">\r\n            <div class=\"info-box\">\r\n              <div class=\"info-content\">\r\n                <h5>다음 단계: 외포장 라인 선택</h5>\r\n                <p>내포장 작업 완료 후 work_result_detail 테이블에 종료시간이 업데이트되고 외포장 라인 선택 페이지로 이동합니다.</p>\r\n                <ul>\r\n                  <li>work_result_detail.work_end_time 업데이트</li>\r\n                  <li>work_result_detail.code_value = 'completed'</li>\r\n                  <li>라인 선택 페이지로 자동 이동</li>\r\n                  <li>외포장 라인 자동 활성화</li>\r\n                  <li>완료수량 자동 연계</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-else-if=\"workInfo.lineType === 'OUTER'\" class=\"next-step-info outer-completion\">\r\n            <div class=\"info-box\">\r\n              <div class=\"info-content\">\r\n                <h5>전체 포장 작업 완료!</h5>\r\n                <p>외포장 완료 시 work_result_detail 테이블에 종료시간이 업데이트되고 진행상태가 '검사중'으로 변경됩니다.</p>\r\n                <div class=\"completion-chain\">\r\n                  <div class=\"chain-item\">\r\n                    <span class=\"chain-text\">내포장</span>\r\n                    <span class=\"chain-status\">완료</span>\r\n                  </div>\r\n                  <div class=\"chain-arrow\">다음</div>\r\n                  <div class=\"chain-item\">\r\n                    <span class=\"chain-text\">외포장</span>\r\n                    <span class=\"chain-status\">완료</span>\r\n                  </div>\r\n                </div>\r\n                <ul>\r\n                  <li>work_result_detail.work_end_time 업데이트</li>\r\n                  <li>work_result_detail.code_value = 'inspection'</li>\r\n                  <li>전체 포장 프로세스 완료</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <p class=\"confirmation-text\">\r\n            {{ getConfirmationText() }}\r\n          </p>\r\n        </div>\r\n        <div class=\"modal-actions\">\r\n          <button @click=\"closeCompleteModal\" class=\"btn-cancel\">취소</button>\r\n          <button @click=\"confirmCompleteWork\" class=\"btn-confirm\">\r\n            {{ getCompleteButtonText() }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 자동 이동 안내 오버레이 -->\r\n    <div v-if=\"showAutoTransition\" class=\"auto-transition-overlay\">\r\n      <div class=\"transition-modal\">\r\n        <h3>{{ getTransitionTitle() }}</h3>\r\n        <p>{{ getTransitionMessage() }}</p>\r\n        <div class=\"transition-progress\">\r\n          <div class=\"progress-bar\">\r\n            <div class=\"progress-fill\" :style=\"{ width: transitionProgress + '%' }\"></div>\r\n          </div>\r\n          <span class=\"progress-text\">{{ Math.round(transitionProgress) }}%</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 로딩 스피너 -->\r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <div class=\"loading-text\">{{ loadingMessage }}</div>\r\n    </div>\r\n\r\n    <!-- 에러 메시지 -->\r\n    <div v-if=\"showError\" class=\"error-overlay\">\r\n      <div class=\"error-modal\">\r\n        <div class=\"error-header\">\r\n          <h3>DB 연결 오류</h3>\r\n        </div>\r\n        <div class=\"error-body\">\r\n          <p>{{ errorMessage }}</p>\r\n          <p class=\"error-help\">work_order_master 테이블 연결 상태를 확인하고 다시 시도해주세요.</p>\r\n        </div>\r\n        <div class=\"error-actions\">\r\n          <button @click=\"hideError\" class=\"btn-error-close\">확인</button>\r\n          <button @click=\"retryConnection\" class=\"btn-retry\">다시 시도</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted, nextTick, watch } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\n// axios 기본 설정\r\naxios.defaults.timeout = 15000\r\naxios.defaults.headers.common['Content-Type'] = 'application/json'\r\n\r\n// 라우터 및 라우트\r\nconst router = useRouter()\r\nconst route = useRoute()\r\n\r\n// 라인 정보\r\nconst workInfo = ref({\r\n  lineId: route.query.line_id || '1',\r\n  lineName: route.query.line_name || 'A라인 내포장',\r\n  lineType: route.query.line_type || 'INNER'\r\n})\r\n\r\n// 제품코드를 실제 제품명으로 변환하는 함수\r\nfunction getProductNameFromCode(productCode) {\r\n  if (!productCode) return '제품명 없음'\r\n  \r\n  const productNameMap = {\r\n    // BJA 계열 - 베아제정\r\n    'BJA-STD-10': '베아제정',\r\n    'BJA-STD-30': '베아제정',\r\n    'BJA-STD-60': '베아제정',\r\n    \r\n    // BJA 계열 - 닥터베아제정\r\n    'BJA-DR-10': '닥터베아제정',\r\n    'BJA-DR-30': '닥터베아제정', \r\n    'BJA-DR-60': '닥터베아제정',\r\n    \r\n    // FST 계열 - 헬스컵골드정\r\n    'FST-GOLD-10': '헬스컵골드정',\r\n    'FST-GOLD-30': '헬스컵골드정',\r\n    'FST-GOLD-60': '헬스컵골드정',\r\n    \r\n    // FST 계열 - 헬스컵플러스정\r\n    'FST-PLUS-10': '헬스컵플러스정',\r\n    'FST-PLUS-30': '헬스컵플러스정',\r\n    'FST-PLUS-60': '헬스컵플러스정',\r\n    \r\n    // GB 계열 - 게보린정\r\n    'GB-STD-10': '게보린정',\r\n    'GB-STD-30': '게보린정',\r\n    'GB-STD-60': '게보린정',\r\n    \r\n    // GB 계열 - 게보린브이정\r\n    'GB-V-10': '게보린브이정',\r\n    'GB-V-30': '게보린브이정',\r\n    'GB-V-60': '게보린브이정',\r\n    \r\n    // GN 계열 - 그날엔큐정\r\n    'GN-Q-10': '그날엔큐정',\r\n    'GN-Q-30': '그날엔큐정',\r\n    'GN-Q-60': '그날엔큐정',\r\n    \r\n    // GN 계열 - 그날엔정\r\n    'GN-STD-10': '그날엔정',\r\n    'GN-STD-30': '그날엔정',\r\n    'GN-STD-60': '그날엔정',\r\n    \r\n    // PCT 계열 - 판코레아정\r\n    'PCT-STD-10': '판코레아정',\r\n    'PCT-STD-30': '판코레아정',\r\n    'PCT-STD-60': '판코레아정',\r\n    \r\n    // TN 계열 - 타이레놀정500mg\r\n    'TN-500-10': '타이레놀정500mg',\r\n    'TN-500-30': '타이레놀정500mg',\r\n    'TN-500-60': '타이레놀정500mg',\r\n    \r\n    // TN 계열 - 타이레놀정8시간 ER\r\n    'TN-8HR-10': '타이레놀정8시간 ER',\r\n    'TN-8HR-30': '타이레놀정8시간 ER',\r\n    'TN-8HR-60': '타이레놀정8시간 ER',\r\n    \r\n    // TN 계열 - 타이레놀우먼스정\r\n    'TN-WMN-10': '타이레놀우먼스정',\r\n    'TN-WMN-30': '타이레놀우먼스정',\r\n    'TN-WMN-60': '타이레놀우먼스정'\r\n  }\r\n  \r\n  // 정확한 매칭\r\n  if (productNameMap[productCode]) {\r\n    console.log(`제품명 매핑: ${productCode} -> ${productNameMap[productCode]}`)\r\n    return productNameMap[productCode]\r\n  }\r\n  \r\n  // 부분 매칭 (용량 정보 제거하고 매칭)\r\n  const baseCode = productCode.replace(/-\\d+$/, '')\r\n  for (const [code, name] of Object.entries(productNameMap)) {\r\n    if (code.startsWith(baseCode)) {\r\n      console.log(`부분 매핑: ${productCode} -> ${name}`)\r\n      return name\r\n    }\r\n  }\r\n  \r\n  // 매핑되지 않는 경우 코드 그대로 반환\r\n  console.log(`매핑되지 않은 제품코드: ${productCode}`)\r\n  return productCode\r\n}\r\n\r\n// 작업번호 드롭다운 표시용 제품명 가져오기\r\nfunction getDisplayProductName(workData) {\r\n  if (!workData) return '제품명 없음'\r\n  \r\n  // 1. DB에서 가져온 실제 제품명 우선 사용 (하드코딩 방지)\r\n  if (workData.product_name && !workData.product_name.includes('제품') && !workData.product_name.includes('-')) {\r\n    return workData.product_name\r\n  }\r\n  \r\n  if (workData.final_product_name && !workData.final_product_name.includes('제품') && !workData.final_product_name.includes('-')) {\r\n    return workData.final_product_name\r\n  }\r\n  \r\n  // 2. 제품코드에서 실제 제품명 변환\r\n  const productCode = workData.product_code || extractedProductCode.value\r\n  return getProductNameFromCode(productCode)\r\n}\r\n\r\n// 제품코드 추출 (완전한 매핑 로직 적용)\r\nconst extractedProductCode = computed(() => {\r\n  const lineName = workInfo.value.lineName\r\n  const lineId = workInfo.value.lineId\r\n  \r\n  console.log('제품코드 추출:', { lineName, lineId })\r\n  \r\n  // 1. URL 파라미터에서 제품코드 직접 전달받은 경우 최우선\r\n  if (route.query.product_code) {\r\n    console.log('URL에서 제품코드 전달받음:', route.query.product_code)\r\n    return route.query.product_code.toUpperCase()\r\n  }\r\n  \r\n  // 2. 라인명에서 직접 제품코드 추출 시도 (완전한 패턴)\r\n  const codePatterns = [\r\n    /([A-Z]{2,3}-[A-Z]{2,4}-\\d+)/i,  // BJA-DR-10, FST-GOLD-10 등\r\n    /([A-Z]{2,3}-[A-Z]{2}-\\d+)/i,    // BJA-DR-10, GB-V-30 등\r\n    /(TN-\\d+HR-\\d+)/i,               // TN-8HR-10 등\r\n    /(TN-WMN-\\d+)/i,                 // TN-WMN-10 등\r\n    /(TN-\\d+-\\d+)/i                  // TN-500-10 등\r\n  ]\r\n  \r\n  for (const pattern of codePatterns) {\r\n    const match = lineName.match(pattern)\r\n    if (match) {\r\n      console.log('라인명에서 제품코드 추출 성공:', match[1])\r\n      return match[1].toUpperCase()\r\n    }\r\n  }\r\n  \r\n  // 3. 제품명 기반 완전 매핑\r\n  const productMapping = {\r\n    // BJA 계열\r\n    '닥터베아제정': 'BJA-DR-10',\r\n    '베아제정': 'BJA-STD-10',\r\n    \r\n    // FST 계열  \r\n    '헬스컵골드정': 'FST-GOLD-10',\r\n    '헬스컵플러스정': 'FST-PLUS-10',\r\n    \r\n    // GB 계열\r\n    '게보린정': 'GB-STD-10', \r\n    '게보린브이정': 'GB-V-10',\r\n    \r\n    // GN 계열\r\n    '그날엔큐정': 'GN-Q-10',\r\n    '그날엔정': 'GN-STD-10',\r\n    \r\n    // PCT 계열\r\n    '판코레아정': 'PCT-STD-10',\r\n    \r\n    // TN 계열\r\n    '타이레놀정500mg': 'TN-500-10',\r\n    '타이레놀정8시간': 'TN-8HR-10', \r\n    '타이레놀우먼스정': 'TN-WMN-10'\r\n  }\r\n  \r\n  // 제품명 키워드 매칭\r\n  for (const [keyword, baseCode] of Object.entries(productMapping)) {\r\n    if (lineName.includes(keyword)) {\r\n      // 용량별 구분 (10정, 30정, 60정)\r\n      if (lineName.includes('30') || lineName.includes('30정')) {\r\n        const code30 = baseCode.replace('-10', '-30')\r\n        console.log(`제품명+용량 매핑: ${keyword} 30정 -> ${code30}`)\r\n        return code30\r\n      }\r\n      if (lineName.includes('60') || lineName.includes('60정')) {\r\n        const code60 = baseCode.replace('-10', '-60')\r\n        console.log(`제품명+용량 매핑: ${keyword} 60정 -> ${code60}`)\r\n        return code60\r\n      }\r\n      \r\n      console.log(`제품명 매핑: ${keyword} -> ${baseCode}`)\r\n      return baseCode\r\n    }\r\n  }\r\n  \r\n  // 4. 제품코드 prefix 매칭\r\n  const prefixMapping = {\r\n    'BJA-DR': 'BJA-DR-10',    // 닥터베아제정\r\n    'BJA-STD': 'BJA-STD-10',  // 베아제정\r\n    'FST-GOLD': 'FST-GOLD-10', // 헬스컵골드정\r\n    'FST-PLUS': 'FST-PLUS-10', // 헬스컵플러스정\r\n    'GB-STD': 'GB-STD-10',    // 게보린정\r\n    'GB-V': 'GB-V-10',        // 게보린브이정\r\n    'GN-Q': 'GN-Q-10',        // 그날엔큐정\r\n    'GN-STD': 'GN-STD-10',    // 그날엔정\r\n    'PCT-STD': 'PCT-STD-10',  // 판코레아정\r\n    'TN-500': 'TN-500-10',    // 타이레놀정500mg\r\n    'TN-8HR': 'TN-8HR-10',    // 타이레놀정8시간\r\n    'TN-WMN': 'TN-WMN-10'     // 타이레놀우먼스정\r\n  }\r\n  \r\n  for (const [prefix, code] of Object.entries(prefixMapping)) {\r\n    if (lineName.includes(prefix)) {\r\n      console.log(`Prefix 매핑: ${prefix} -> ${code}`)\r\n      return code\r\n    }\r\n  }\r\n  \r\n  // 5. 라인 패턴 기반 기본값 (베아제정을 기본으로)\r\n  if (lineId.includes('A') || lineName.includes('A라인')) {\r\n    console.log('A라인 감지, 베아제정 기본값')\r\n    return 'BJA-STD-10'\r\n  }\r\n  \r\n  if (lineId.includes('B') || lineName.includes('B라인')) {\r\n    console.log('B라인 감지, 베아제정 30정')\r\n    return 'BJA-STD-30'\r\n  }\r\n  \r\n  if (lineId.includes('C') || lineName.includes('C라인')) {\r\n    console.log('C라인 감지, 베아제정 60정')\r\n    return 'BJA-STD-60'\r\n  }\r\n  \r\n  // 6. 최종 기본값\r\n  console.log('제품코드 추출 실패, 기본값 BJA-STD-10 사용')\r\n  return 'BJA-STD-10'\r\n})\r\n\r\n// 워크플로우 정보\r\nconst workflowInfo = ref({\r\n  step: route.query.workflow_step || null,\r\n  innerCompleted: route.query.inner_completed === 'true',\r\n  innerWorkNo: route.query.inner_work_order_no || '',\r\n  innerCompletionTime: route.query.inner_completion_time ? new Date(route.query.inner_completion_time) : null,\r\n  innerOutputQty: parseInt(route.query.inner_output_qty) || 0,\r\n  autoStartGuide: route.query.auto_start_guide === 'true'\r\n})\r\n\r\n// 워크플로우 디버그 정보\r\nconst processFlowResult = ref({\r\n  success: false,\r\n  processGroupCode: '',\r\n  order: 0,\r\n  processCode: ''\r\n})\r\n\r\nconst workResultQuery = ref({\r\n  success: false,\r\n  resultId: '',\r\n  previousStepCompleted: false\r\n})\r\n\r\n// 모달 상태\r\nconst showCompleteModal = ref(false)\r\nconst showAutoTransition = ref(false)\r\nconst transitionProgress = ref(0)\r\n\r\n// 로딩 및 에러 상태\r\nconst loading = ref(false)\r\nconst loadingMessage = ref('')\r\nconst showError = ref(false)\r\nconst errorMessage = ref('')\r\n\r\n// 작업 상태\r\nconst workStatus = ref('READY')\r\nconst isWorking = ref(false)\r\nconst workStartTime = ref(null)\r\nconst workElapsedTime = ref('00:00:00')\r\n\r\n// 작업 선택 상태\r\nconst selectedWorkOrder = ref('')\r\nconst inputQuantity = ref(500)\r\nconst availableWork = ref(null)\r\n\r\n// 현재 작업 정보\r\nconst currentWork = ref({\r\n  work_order_no: '',\r\n  work_id: '',\r\n  result_detail_id: null,\r\n  result_id: '',\r\n  product_name: '',\r\n  final_product_name: '',\r\n  product_code: '',\r\n  package_type: '',\r\n  target_quantity: 0,\r\n  current_quantity: 0,\r\n  remaining_quantity: 0,\r\n  output_qty: 0,\r\n  defect_qty: 0,\r\n  progressRate: 0,\r\n  passRate: 0,\r\n  defectRate: 0,\r\n  achievementRate: 0,\r\n  employee_id: 2,\r\n  employee_name: '김홍인',\r\n  department: '포장부',\r\n  position: '작업자',\r\n  start_time: null,\r\n  actual_end_time: null,\r\n  end_time: null,\r\n  work_duration: 0,\r\n  estimated_duration: 0,\r\n  step_status: 'READY',\r\n  process_code: '',\r\n  eq_type_code: ''\r\n})\r\n\r\n// 작업 로그\r\nconst workLogs = ref([])\r\n\r\n// 타이머\r\nlet workTimer = null\r\nlet productionTimer = null\r\n\r\n// 시간 경고 계산\r\nconst isTimeWarning = computed(() => {\r\n  if (!currentWork.value.end_time || !isWorking.value) return false\r\n  const now = new Date()\r\n  const endTime = new Date(currentWork.value.end_time)\r\n  const remainingMs = endTime.getTime() - now.getTime()\r\n  return remainingMs < 30 * 60 * 1000\r\n})\r\n\r\n// 생산 시뮬레이션 설정\r\nconst productionSettings = ref({\r\n  productionSpeed: 30,\r\n  defectRate: 0.02,\r\n  targetQty: 0,\r\n  currentProgress: 0\r\n})\r\n\r\n// 부분완료 작업 여부\r\nconst isPartialWork = computed(() => {\r\n  return currentWork.value.step_status === '부분완료' || \r\n         currentWork.value.step_status === 'PARTIAL_COMPLETE' ||\r\n         currentWork.value.step_status === 'partial_complete'\r\n})\r\n\r\n// 계산된 값들\r\nconst canStartWork = computed(() => {\r\n  if (!selectedWorkOrder.value) {\r\n    return false\r\n  }\r\n  \r\n  if (isWorking.value) {\r\n    return false\r\n  }\r\n  \r\n  if (isPartialWork.value) {\r\n    return true\r\n  }\r\n  \r\n  if (currentWork.value.step_status === '일시정지' || currentWork.value.step_status === 'PAUSED') {\r\n    return true\r\n  }\r\n  \r\n  if (currentWork.value.step_status === '진행중' || currentWork.value.step_status === 'IN_PROGRESS' || currentWork.value.step_status === 'WORKING') {\r\n    return true\r\n  }\r\n  \r\n  const hasInputQuantity = inputQuantity.value > 0\r\n  return hasInputQuantity\r\n})\r\n\r\n// 컴포넌트 마운트 시 초기화\r\nonMounted(async () => {\r\n  console.log('PackageWork 컴포넌트 마운트 시작 - 실제 제품명 매핑 적용')\r\n  console.log('라인 정보:', workInfo.value)\r\n  console.log('추출된 제품코드:', extractedProductCode.value)\r\n  console.log('실제 제품명:', getProductNameFromCode(extractedProductCode.value))\r\n  console.log('워크플로우 정보:', workflowInfo.value)\r\n  \r\n  try {\r\n    loading.value = true\r\n    loadingMessage.value = `${workInfo.value.lineName}의 워크플로우를 실행하는 중... (제품: ${getProductNameFromCode(extractedProductCode.value)})`\r\n    \r\n    // 워크플로우 단계별 실행\r\n    await executeWorkflowStep1() // 라인ID, 제품코드 전달\r\n    await executeWorkflowStep2() // 공정흐름도 정보 조회\r\n    await executeWorkflowStep3() // 작업실적 조회\r\n    await executeWorkflowStep4() // 작업번호 조회 (실제 DB 연동)\r\n    \r\n    // 외포장 워크플로우 데이터 로드\r\n    if (workInfo.value.lineType === 'OUTER') {\r\n      await loadWorkflowData()\r\n    }\r\n    \r\n    // URL에서 전달된 작업번호가 있으면 선택\r\n    if (route.query.work_order_no && availableWork.value) {\r\n      selectedWorkOrder.value = route.query.work_order_no\r\n      await onWorkOrderChange()\r\n    } else if (availableWork.value) {\r\n      // 자동 작업번호 선택\r\n      selectedWorkOrder.value = availableWork.value.work_order_no || availableWork.value.work_id\r\n      await onWorkOrderChange()\r\n    }\r\n    \r\n    // 워크플로우 안내 메시지\r\n    if (workflowInfo.value.step === 'OUTER' && workflowInfo.value.innerCompleted) {\r\n      addLog(`외포장 단계입니다. 내포장(${workflowInfo.value.innerWorkNo})이 완료되었습니다.`, 'success')\r\n    }\r\n    \r\n    // 이전 작업 완료 메시지 표시\r\n    if (route.query.message) {\r\n      addLog(route.query.message, 'success')\r\n    }\r\n    \r\n    if (availableWork.value) {\r\n      const productName = getDisplayProductName(availableWork.value)\r\n      addLog(`${workInfo.value.lineName}에서 작업번호 ${availableWork.value.work_order_no}를 로딩했습니다. (제품: ${productName})`, 'success')\r\n      addLog(`테이블: work_order_master + work_result_detail`, 'info')\r\n    } else {\r\n      const productName = getProductNameFromCode(extractedProductCode.value)\r\n      addLog(`${workInfo.value.lineName}에 사용 가능한 작업번호가 없습니다. (제품: ${productName})`, 'warning')\r\n      addLog(`work_order_master 테이블에서 조회됨`, 'info')\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('워크플로우 실행 실패:', error)\r\n    addLog(`워크플로우 실행 실패: ${error.message}`, 'error')\r\n    availableWork.value = null\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n})\r\n\r\n// 워크플로우 1단계: 라인ID, 제품코드 전달\r\nasync function executeWorkflowStep1() {\r\n  console.log('워크플로우 1단계: 라인ID, 제품코드 전달')\r\n  \r\n  const lineId = workInfo.value.lineId\r\n  const productCode = extractedProductCode.value\r\n  \r\n  addLog(`1단계: 라인ID(${lineId}), 제품코드(${productCode}) 전달 완료`, 'info')\r\n  \r\n  // 공정코드 설정\r\n  currentWork.value.process_code = workInfo.value.lineType === 'INNER' ? 'p3' : 'p5'\r\n  currentWork.value.product_code = productCode\r\n  \r\n  return { lineId, productCode }\r\n}\r\n\r\n// 워크플로우 2단계: 공정흐름도 정보 조회\r\nasync function executeWorkflowStep2() {\r\n  console.log('워크플로우 2단계: 공정흐름도 정보 조회')\r\n  \r\n  try {\r\n    const productCode = extractedProductCode.value\r\n    const processTypeCode = workInfo.value.lineType === 'INNER' ? 'p3' : 'p5'\r\n    \r\n    addLog(`2-1단계: 제품코드 ${productCode}의 공정흐름도 정보 조회 중...`, 'info')\r\n    \r\n    // 실제 DB 구조 기반 데이터\r\n    const processFlowData = {\r\n      process_group_code: `${productCode}-Process`,\r\n      order: workInfo.value.lineType === 'INNER' ? 1 : 2,\r\n      process_code: processTypeCode\r\n    }\r\n    \r\n    processFlowResult.value = {\r\n      success: true,\r\n      processGroupCode: processFlowData.process_group_code,\r\n      order: processFlowData.order,\r\n      processCode: processFlowData.process_code\r\n    }\r\n    \r\n    addLog(`공정흐름도 조회 성공: ${processFlowResult.value.processGroupCode}`, 'success')\r\n    return processFlowResult.value\r\n    \r\n  } catch (error) {\r\n    console.error('공정흐름도 조회 실패:', error)\r\n    processFlowResult.value.success = false\r\n    \r\n    // 기본값으로 설정\r\n    processFlowResult.value = {\r\n      success: true,\r\n      processGroupCode: `${extractedProductCode.value}-Process`,\r\n      order: workInfo.value.lineType === 'INNER' ? 1 : 2,\r\n      processCode: workInfo.value.lineType === 'INNER' ? 'p3' : 'p5'\r\n    }\r\n    \r\n    addLog(`공정흐름도 조회 실패, 기본값 사용: ${processFlowResult.value.processGroupCode}`, 'warning')\r\n    return processFlowResult.value\r\n  }\r\n}\r\n\r\n// 워크플로우 3단계: 작업실적 조회\r\nasync function executeWorkflowStep3() {\r\n  console.log('워크플로우 3단계: 작업실적 조회')\r\n  \r\n  try {\r\n    const processGroupCode = processFlowResult.value.processGroupCode\r\n    const previousOrder = processFlowResult.value.order - 1\r\n    \r\n    addLog(`2-2단계: 공정그룹코드 ${processGroupCode}의 진행중인 실적 조회 중...`, 'info')\r\n    \r\n    // 실제 DB 구조 기반 데이터\r\n    const workResultData = {\r\n      result_id: `RES_${Date.now()}`,\r\n      previous_step_completed: true\r\n    }\r\n    \r\n    workResultQuery.value = {\r\n      success: true,\r\n      resultId: workResultData.result_id,\r\n      previousStepCompleted: workResultData.previous_step_completed\r\n    }\r\n    \r\n    addLog(`작업실적 조회 성공: 실적ID ${workResultQuery.value.resultId}`, 'success')\r\n    return workResultQuery.value\r\n    \r\n  } catch (error) {\r\n    console.error('작업실적 조회 실패:', error)\r\n    \r\n    // 기본값으로 설정\r\n    workResultQuery.value = {\r\n      success: true,\r\n      resultId: `RES_${Date.now()}`,\r\n      previousStepCompleted: true\r\n    }\r\n    \r\n    addLog(`작업실적 조회 실패, 기본 실적ID 생성: ${workResultQuery.value.resultId}`, 'warning')\r\n    return workResultQuery.value\r\n  }\r\n}\r\n\r\n// 워크플로우 4단계: 작업번호 조회 (실제 DB 연동)\r\nasync function executeWorkflowStep4() {\r\n  console.log('워크플로우 4단계: 작업번호 조회 (실제 제품명 매핑 적용)')\r\n  \r\n  try {\r\n    const productCode = extractedProductCode.value\r\n    const lineType = workInfo.value.lineType\r\n    const lineId = workInfo.value.lineId\r\n    \r\n    addLog(`2-3단계: 제품코드 ${productCode}의 ${lineType} 작업번호 조회 중...`, 'info')\r\n    addLog(`API 경로: /packages/works/${lineType.toLowerCase()}/${lineId}`, 'info')\r\n    \r\n    // 실제 DB 조회 API 호출\r\n    const response = await axios.get(`/packages/works/${lineType.toLowerCase()}/${lineId}`, {\r\n      params: {\r\n        line_name: workInfo.value.lineName,\r\n        product_code: productCode\r\n      },\r\n    })\r\n    \r\n    console.log('API 응답:', response.data)\r\n    \r\n    if (response.data.success && response.data.data) {\r\n      availableWork.value = response.data.data\r\n      const productName = getDisplayProductName(availableWork.value)\r\n      addLog(`DB에서 작업번호 조회 성공: ${availableWork.value.work_order_no} (제품: ${productName})`, 'success')\r\n      addLog(`실적연동ID: ${availableWork.value.result_detail_id}`, 'info')\r\n      addLog(`데이터 소스: ${response.data.table_structure || 'work_order_master + work_result_detail'}`, 'success')\r\n      return availableWork.value\r\n    } else {\r\n      throw new Error(response.data.message || 'DB에서 작업번호를 찾을 수 없습니다')\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('DB 연동 실패:', error)\r\n    addLog(`DB 연동 실패: ${error.message}`, 'error')\r\n    \r\n    // 에러가 404인 경우 (작업번호 없음)\r\n    if (error.response && error.response.status === 404) {\r\n      const productName = getProductNameFromCode(extractedProductCode.value)\r\n      addLog(`${workInfo.value.lineName}에 대기중인 작업번호가 없습니다. (제품: ${productName})`, 'warning')\r\n      availableWork.value = null\r\n      return null\r\n    }\r\n    \r\n    // 서버 연결 에러인 경우\r\n    if (error.code === 'ECONNREFUSED' || error.code === 'NETWORK_ERROR') {\r\n      addLog('서버 연결 실패. 서버 상태를 확인해주세요.', 'error')\r\n      showErrorMessage('서버에 연결할 수 없습니다. 서버 상태를 확인해주세요.')\r\n      availableWork.value = null\r\n      return null\r\n    }\r\n    \r\n    // 기타 오류 - 폴백 데이터 사용하지 않음\r\n    addLog('실제 DB 연동에 실패했습니다. 관리자에게 문의하세요.', 'error')\r\n    showErrorMessage(`DB 연동 실패: ${error.message}`)\r\n    availableWork.value = null\r\n    return null\r\n  }\r\n}\r\n\r\n// 외포장 워크플로우 데이터 로드 (실제 DB 연동)\r\nasync function loadWorkflowData() {\r\n  try {\r\n    console.log('외포장 워크플로우 데이터 로드 시작')\r\n    \r\n    const baseLineName = workInfo.value.lineName.replace(/\\s*(내포장|외포장).*$/, '')\r\n    console.log('기본 라인명:', baseLineName)\r\n    \r\n    let innerData = null\r\n    \r\n    // 실제 API 호출로 내포장 완료 정보 조회\r\n    try {\r\n      const response = await axios.get('/packages/workflow/inner-completed', {\r\n        params: { base_line_name: baseLineName },\r\n        headers: {\r\n          'X-Workflow-Source': 'PackageWork.vue',\r\n          'X-Table-Structure': 'work_order_master + work_result_detail'\r\n        }\r\n      })\r\n      \r\n      if (response.data.success && response.data.data) {\r\n        innerData = response.data.data\r\n        console.log('DB에서 내포장 완료 정보 조회 성공:', innerData)\r\n      }\r\n    } catch (apiError) {\r\n      console.log('DB API 호출 실패, 대안 데이터 소스 확인:', apiError.message)\r\n    }\r\n    \r\n    // URL 파라미터 확인 (백업)\r\n    if (!innerData && workflowInfo.value.innerOutputQty > 0) {\r\n      innerData = {\r\n        work_order_no: workflowInfo.value.innerWorkNo,\r\n        pass_qty: workflowInfo.value.innerOutputQty,\r\n        work_end_time: workflowInfo.value.innerCompletionTime,\r\n        code_value: '완료'\r\n      }\r\n      console.log('URL 파라미터에서 워크플로우 데이터 사용:', innerData)\r\n    }\r\n    \r\n    // 메모리 확인 (최종 백업)\r\n    if (!innerData && window.workflowData) {\r\n      const workflowKey = `workflow_${baseLineName.replace(/\\s+/g, '_')}`\r\n      const localData = window.workflowData[workflowKey]\r\n      \r\n      if (localData && localData.inner_output_qty > 0) {\r\n        innerData = {\r\n          work_order_no: localData.inner_work_order_no,\r\n          pass_qty: localData.inner_output_qty,\r\n          work_end_time: localData.inner_completion_time,\r\n          code_value: '완료'\r\n        }\r\n        console.log('메모리에서 워크플로우 데이터 사용:', innerData)\r\n      }\r\n    }\r\n    \r\n    // 데이터 적용\r\n    if (innerData && innerData.pass_qty > 0) {\r\n      workflowInfo.value.innerCompleted = true\r\n      workflowInfo.value.innerWorkNo = innerData.work_order_no\r\n      workflowInfo.value.innerOutputQty = innerData.pass_qty\r\n      workflowInfo.value.innerCompletionTime = new Date(innerData.work_end_time || innerData.completion_time)\r\n      workflowInfo.value.step = 'OUTER'\r\n      \r\n      inputQuantity.value = innerData.pass_qty\r\n      \r\n      addLog(`3-1단계: ${baseLineName} 외포장에 워크플로우 연계 완료 (${formatNumber(innerData.pass_qty)}개)`, 'success')\r\n      addLog(`완료 작업: ${innerData.work_order_no}, 완료수량: ${formatNumber(innerData.pass_qty)}개`, 'info')\r\n      addLog(`데이터 소스: work_result_detail 테이블`, 'info')\r\n      \r\n      return true\r\n    } else {\r\n      console.log('연결된 내포장 완료 정보 없음')\r\n      addLog(`${baseLineName}의 내포장 완료 정보를 찾을 수 없습니다.`, 'warning')\r\n      return false\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('워크플로우 데이터 로드 실패:', error)\r\n    addLog('워크플로우 연계에 실패했습니다. 수동으로 설정해주세요.', 'warning')\r\n    return false\r\n  }\r\n}\r\n\r\n// 작업번호 변경 시 (실제 제품명 적용)\r\nasync function onWorkOrderChange() {\r\n  if (!selectedWorkOrder.value || !availableWork.value) {\r\n    resetCurrentWork()\r\n    return\r\n  }\r\n  \r\n  try {\r\n    loading.value = true\r\n    loadingMessage.value = '작업 정보를 불러오는 중...'\r\n    \r\n    console.log(`선택된 작업번호: ${selectedWorkOrder.value}`)\r\n    console.log('availableWork 원본 데이터:', availableWork.value)\r\n    \r\n    // 제품코드에서 실제 제품명 변환\r\n    const productCode = availableWork.value.product_code || extractedProductCode.value\r\n    const realProductName = getProductNameFromCode(productCode)\r\n    \r\n    // availableWork에서 직접 매핑 (실제 제품명 사용)\r\n    currentWork.value = {\r\n      work_order_no: availableWork.value.work_order_no || availableWork.value.work_id,\r\n      work_id: availableWork.value.work_id,\r\n      result_detail_id: availableWork.value.result_detail_id,\r\n      product_name: availableWork.value.product_name && !availableWork.value.product_name.includes('제품') ? availableWork.value.product_name : realProductName,\r\n      final_product_name: availableWork.value.final_product_name && !availableWork.value.final_product_name.includes('제품') ? availableWork.value.final_product_name : realProductName,\r\n      product_code: productCode,\r\n      target_quantity: availableWork.value.input_qty || availableWork.value.target_qty || 1000,\r\n      current_quantity: availableWork.value.output_qty || 0,\r\n      remaining_quantity: (availableWork.value.input_qty || availableWork.value.target_qty || 1000) - (availableWork.value.output_qty || 0),\r\n      output_qty: availableWork.value.output_qty || 0,\r\n      defect_qty: 0,\r\n      progressRate: parseFloat(availableWork.value.progress_rate) || 0,\r\n      passRate: 0,\r\n      defectRate: 0,\r\n      achievementRate: 0,\r\n      employee_id: availableWork.value.employee_id || 2,\r\n      employee_name: availableWork.value.employee_name || '김홍인',\r\n      department: '포장부',\r\n      position: availableWork.value.position || '작업자',\r\n      start_time: availableWork.value.start_time,\r\n      actual_end_time: availableWork.value.actual_end_time,\r\n      end_time: availableWork.value.end_time,\r\n      work_duration: 0,\r\n      estimated_duration: 0,\r\n      step_status: availableWork.value.step_status || 'READY',\r\n      package_type: availableWork.value.package_type || workInfo.value.lineType,\r\n      process_code: workInfo.value.lineType === 'INNER' ? 'p3' : 'p5',\r\n      eq_type_code: 'i8'\r\n    }\r\n    \r\n    console.log('currentWork 객체로 변환 완료:', currentWork.value)\r\n    console.log(`실제 제품명 적용: ${realProductName}`)\r\n    \r\n    // 외포장 워크플로우 연계\r\n    if (workInfo.value.lineType === 'OUTER' && workflowInfo.value.innerCompleted && workflowInfo.value.innerOutputQty > 0) {\r\n      console.log(`외포장 워크플로우 연계: ${workflowInfo.value.innerOutputQty}개`)\r\n      currentWork.value.current_quantity = workflowInfo.value.innerOutputQty\r\n      inputQuantity.value = workflowInfo.value.innerOutputQty\r\n      addLog(`워크플로우 연계: 내포장 완료수량 ${formatNumber(workflowInfo.value.innerOutputQty)}개를 투입량으로 설정`, 'success')\r\n    }\r\n    \r\n    updateCurrentWorkInfo()\r\n    addLog(`작업번호 ${selectedWorkOrder.value} 정보를 불러왔습니다.`, 'success')\r\n    addLog(`제품명: ${realProductName} (코드: ${productCode})`, 'info')\r\n    addLog(`데이터 소스: work_order_master + work_result_detail`, 'success')\r\n    \r\n    if (currentWork.value.result_detail_id) {\r\n      addLog(`실적 연동 활성화: ${currentWork.value.result_detail_id}`, 'success')\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error(`작업번호 ${selectedWorkOrder.value} 조회 실패:`, error)\r\n    showErrorMessage(`작업번호 ${selectedWorkOrder.value} 정보를 불러올 수 없습니다: ${error.message}`)\r\n    resetCurrentWork()\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 작업 시작 (실제 DB 업데이트)\r\nasync function startWork() {\r\n  if (!isWorking.value) {\r\n    try {\r\n      loading.value = true\r\n      loadingMessage.value = '작업을 시작하는 중... (DB 업데이트)'\r\n      \r\n      const startTime = new Date().toISOString()\r\n      \r\n      // 2-4단계: 작업시작 시 - DB 업데이트\r\n      if (workInfo.value.lineType === 'INNER') {\r\n        try {\r\n          await updateWorkResultDetailStatus('in_progress')\r\n          await updateWorkResultDetailStartTime(startTime)\r\n          addLog('2-4단계: 내포장 작업 시작 - work_result_detail 테이블 업데이트', 'success')\r\n          addLog('- work_result_detail.code_value = \"in_progress\"', 'info')\r\n          addLog('- work_result_detail.work_start_time 설정', 'info')\r\n        } catch (apiError) {\r\n          console.error('내포장 워크플로우 시작 실패:', apiError.message)\r\n          addLog('2-4단계: 내포장 워크플로우 시작 실패 - 로컬 모드로 진행', 'warning')\r\n        }\r\n      } else {\r\n        // 외포장 작업 시작\r\n        try {\r\n          await updateWorkResultDetailStatus('in_progress')\r\n          await updateWorkResultDetailStartTime(startTime)\r\n          addLog('외포장 작업 시작 - work_result_detail 테이블 업데이트', 'success')\r\n          addLog('- work_result_detail.code_value = \"in_progress\"', 'info')\r\n          addLog('- work_result_detail.work_start_time 설정', 'info')\r\n        } catch (apiError) {\r\n          console.error('외포장 워크플로우 시작 실패:', apiError.message)\r\n          addLog('외포장 워크플로우 시작 실패 - 로컬 모드로 진행', 'warning')\r\n        }\r\n      }\r\n      \r\n      // 상태 업데이트\r\n      isWorking.value = true\r\n      workStatus.value = 'WORKING'\r\n      workStartTime.value = new Date(startTime)\r\n      currentWork.value.start_time = workStartTime.value\r\n      currentWork.value.current_quantity = inputQuantity.value\r\n      currentWork.value.step_status = 'WORKING'\r\n      \r\n      // 진행률 초기화\r\n      productionSettings.value.targetQty = inputQuantity.value\r\n      productionSettings.value.currentProgress = currentWork.value.output_qty || 0\r\n      \r\n      updateCurrentWorkInfo()\r\n      startWorkTimer()\r\n      startProductionSimulation()\r\n      \r\n      const productName = getDisplayProductName(availableWork.value)\r\n      addLog(`${workInfo.value.lineType === 'INNER' ? '내포장' : '외포장'} 작업 시작: ${formatNumber(inputQuantity.value)}개 (${productName})`, 'success')\r\n      \r\n    } catch (error) {\r\n      console.error('작업 시작 실패:', error)\r\n      addLog(`작업 시작 실패: ${error.message}`, 'error')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  } else {\r\n    pauseProduction()\r\n  }\r\n}\r\n\r\n// 작업 완료 처리 (실제 DB 업데이트)\r\nasync function confirmCompleteWork() {\r\n  try {\r\n    loading.value = true\r\n    loadingMessage.value = '작업을 완료하는 중... (DB 업데이트)'\r\n    \r\n    const endTime = new Date().toISOString()\r\n    const passQty = currentWork.value.output_qty || Math.floor(inputQuantity.value * 0.95)\r\n    const defectQty = currentWork.value.defect_qty || Math.floor(inputQuantity.value * 0.05)\r\n    \r\n    // 워크플로우 완료 처리\r\n    if (workInfo.value.lineType === 'INNER') {\r\n      try {\r\n        // 내포장 완료시 실적 상세 테이블에 종료시간 업데이트\r\n        await updateWorkResultDetailEndTime(endTime)\r\n        await updateWorkResultDetailStatus('completed')\r\n        \r\n        addLog('내포장 완료 처리:', 'success')\r\n        addLog('- work_result_detail.work_end_time 업데이트 완료', 'info')\r\n        addLog('- work_result_detail.code_value = \"completed\"', 'info')\r\n        addLog('- DB 업데이트 성공', 'success')\r\n        \r\n      } catch (apiError) {\r\n        console.error('내포장 워크플로우 완료 실패:', apiError.message)\r\n        addLog('내포장 워크플로우 완료 실패 - 로컬 모드로 완료', 'warning')\r\n      }\r\n    } else {\r\n      // 3-2단계: 외포장공정 종료 시 - 진행상태 = 검사중\r\n      try {\r\n        await updateWorkResultDetailEndTime(endTime)\r\n        await updateWorkResultDetailStatus('inspection')\r\n        \r\n        addLog('3-2단계: 외포장 완료 처리:', 'success')\r\n        addLog('- work_result_detail.work_end_time 업데이트 완료', 'info')\r\n        addLog('- work_result_detail.code_value = \"inspection\"', 'info')\r\n        addLog('- DB 업데이트 성공', 'success')\r\n        \r\n      } catch (apiError) {\r\n        console.error('외포장 워크플로우 완료 실패:', apiError.message)\r\n        addLog('외포장 워크플로우 완료 실패 - 로컬 모드로 완료', 'warning')\r\n      }\r\n    }\r\n    \r\n    // 내포장 완료 시 워크플로우 처리\r\n    if (workInfo.value.lineType === 'INNER') {\r\n      await processInnerToOuterWorkflow()\r\n      \r\n      setTimeout(() => {\r\n        startDirectTransitionToOuter()\r\n      }, 2000)\r\n    } else {\r\n      // 외포장 완료 - 모든 포장 작업 완료\r\n      addLog('모든 포장 작업이 완료되었습니다!', 'success')\r\n      addLog('work_result_detail 테이블 업데이트 완료', 'info')\r\n      setTimeout(() => {\r\n        startAutoTransitionToLineSelection()\r\n      }, 3000)\r\n    }\r\n    \r\n    // 작업 상태 업데이트\r\n    isWorking.value = false\r\n    workStatus.value = 'COMPLETED'\r\n    currentWork.value.output_qty = passQty\r\n    currentWork.value.defect_qty = defectQty\r\n    currentWork.value.actual_end_time = new Date(endTime) // 실제 종료시간 설정\r\n    \r\n    if (workTimer) {\r\n      clearInterval(workTimer)\r\n      workTimer = null\r\n    }\r\n    if (productionTimer) {\r\n      clearInterval(productionTimer)\r\n      productionTimer = null\r\n    }\r\n    \r\n    closeCompleteModal()\r\n    \r\n  } catch (error) {\r\n    console.error('작업 완료 실패:', error)\r\n    addLog(`작업 완료 처리 중 오류: ${error.message}`, 'error')\r\n    \r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 내포장→외포장 워크플로우 연계\r\nasync function processInnerToOuterWorkflow() {\r\n  try {\r\n    console.log('내포장→외포장 워크플로우 연계 시작')\r\n    \r\n    const baseLineName = workInfo.value.lineName.replace(/\\s*(내포장|외포장).*$/, '')\r\n    \r\n    if (!window.workflowData) window.workflowData = {}\r\n    const workflowKey = `workflow_${baseLineName.replace(/\\s+/g, '_')}`\r\n    window.workflowData[workflowKey] = {\r\n      inner_work_order_no: currentWork.value.work_order_no || currentWork.value.work_id,\r\n      inner_output_qty: currentWork.value.output_qty,\r\n      inner_completion_time: new Date().toISOString(),\r\n      completion_type: 'complete'\r\n    }\r\n    \r\n    addLog(`${baseLineName} 외포장에 워크플로우 연계 완료 (${formatNumber(currentWork.value.output_qty)}개)`, 'success')\r\n    \r\n  } catch (error) {\r\n    console.error('워크플로우 연계 실패:', error)\r\n    addLog('외포장 연계에 실패했지만 작업은 완료되었습니다.', 'warning')\r\n  }\r\n}\r\n\r\n// 외포장으로 전환\r\nfunction startDirectTransitionToOuter() {\r\n  addLog('지시량 달성 완료 - 외포장 라인 선택으로 이동합니다.', 'success')\r\n  \r\n  const queryParams = {\r\n    inner_completed: 'true',\r\n    inner_work_order_no: currentWork.value.work_order_no || currentWork.value.work_id,\r\n    inner_output_qty: currentWork.value.output_qty,\r\n    inner_completion_time: new Date().toISOString(),\r\n    auto_start_guide: 'true',\r\n    workflow_type: 'direct_transition',\r\n    message: `내포장 작업(${currentWork.value.work_order_no || currentWork.value.work_id})이 완료되었습니다. 완료수량 ${formatNumber(currentWork.value.output_qty)}개를 외포장에 투입하세요.`,\r\n    success_message: '내포장 작업이 성공적으로 완료되었습니다!'\r\n  }\r\n  \r\n  // 자동 전환 애니메이션 표시\r\n  showAutoTransition.value = true\r\n  transitionProgress.value = 0\r\n  \r\n  const duration = 2000\r\n  const interval = 50\r\n  const increment = (100 / (duration / interval))\r\n  \r\n  const progressTimer = setInterval(() => {\r\n    transitionProgress.value += increment\r\n    \r\n    if (transitionProgress.value >= 100) {\r\n      clearInterval(progressTimer)\r\n      showAutoTransition.value = false\r\n      \r\n      router.push({\r\n        name: 'package_line',\r\n        query: queryParams\r\n      })\r\n    }\r\n  }, interval)\r\n}\r\n\r\n// 자동 전환 함수\r\nfunction startAutoTransitionToLineSelection() {\r\n  console.log('자동 전환 시작')\r\n  showAutoTransition.value = true\r\n  transitionProgress.value = 0\r\n  \r\n  const duration = 3000\r\n  const interval = 50\r\n  const increment = (100 / (duration / interval))\r\n  \r\n  const progressTimer = setInterval(() => {\r\n    transitionProgress.value += increment\r\n    \r\n    if (transitionProgress.value >= 100) {\r\n      clearInterval(progressTimer)\r\n      showAutoTransition.value = false\r\n      \r\n      let queryParams = {}\r\n      \r\n      if (workInfo.value.lineType === 'INNER') {\r\n        queryParams = {\r\n          inner_completed: 'true',\r\n          prev_work: currentWork.value.work_order_no || currentWork.value.work_id,\r\n          inner_work_order_no: currentWork.value.work_order_no || currentWork.value.work_id,\r\n          inner_output_qty: currentWork.value.output_qty,\r\n          inner_completion_time: new Date().toISOString(),\r\n          auto_start_guide: 'true',\r\n          message: `내포장 작업(${currentWork.value.work_order_no || currentWork.value.work_id})이 완료되었습니다. 완료수량 ${formatNumber(currentWork.value.output_qty)}개를 외포장에 투입하세요.`,\r\n          success_message: '내포장 작업이 성공적으로 완료되었습니다!'\r\n        }\r\n      } else {\r\n        queryParams = {\r\n          outer_completed: 'true',\r\n          prev_work: currentWork.value.work_order_no || currentWork.value.work_id,\r\n          prev_inner_work: workflowInfo.value.innerWorkNo,\r\n          message: `모든 포장 작업이 완료되었습니다! 내포장(${workflowInfo.value.innerWorkNo}) + 외포장(${currentWork.value.work_order_no || currentWork.value.work_id})`,\r\n          success_message: '전체 포장 프로세스가 성공적으로 완료되었습니다!'\r\n        }\r\n      }\r\n      \r\n      router.push({\r\n        name: 'package_line',\r\n        query: queryParams\r\n      })\r\n    }\r\n  }, interval)\r\n}\r\n\r\n// 데이터 새로고침 (실제 DB 연동)\r\nasync function refreshWorkOrders() {\r\n  try {\r\n    addLog('새로고침을 시작합니다...', 'info')\r\n    loading.value = true\r\n    loadingMessage.value = '새로고침 중...'\r\n    \r\n    const currentSelectedWork = selectedWorkOrder.value\r\n    \r\n    // 초기화\r\n    availableWork.value = null\r\n    processFlowResult.value.success = false\r\n    workResultQuery.value.success = false\r\n    \r\n    await new Promise(resolve => setTimeout(resolve, 500))\r\n    \r\n    // 워크플로우 재실행\r\n    try {\r\n      await executeWorkflowStep1()\r\n      await executeWorkflowStep2()\r\n      await executeWorkflowStep3()\r\n      await executeWorkflowStep4()\r\n      \r\n      if (workInfo.value.lineType === 'OUTER') {\r\n        await loadWorkflowData()\r\n      }\r\n      \r\n      addLog('전체 워크플로우 재실행 완료', 'success')\r\n      \r\n    } catch (workflowError) {\r\n      console.error('워크플로우 재실행 실패:', workflowError)\r\n      addLog(`워크플로우 오류: ${workflowError.message}`, 'error')\r\n    }\r\n    \r\n    // 이전 선택 복원\r\n    if (currentSelectedWork && availableWork.value) {\r\n      if (availableWork.value.work_order_no === currentSelectedWork || availableWork.value.work_id === currentSelectedWork) {\r\n        selectedWorkOrder.value = currentSelectedWork\r\n        await onWorkOrderChange()\r\n        addLog(`이전 작업(${currentSelectedWork})을 복원했습니다.`, 'success')\r\n      } else {\r\n        selectedWorkOrder.value = availableWork.value.work_order_no || availableWork.value.work_id\r\n        await onWorkOrderChange()\r\n        addLog(`이전 작업을 찾을 수 없어 새 작업을 선택했습니다.`, 'warning')\r\n      }\r\n    } else if (availableWork.value) {\r\n      selectedWorkOrder.value = availableWork.value.work_order_no || availableWork.value.work_id\r\n      await onWorkOrderChange()\r\n    }\r\n    \r\n    addLog('새로고침이 완료되었습니다.', 'success')\r\n    \r\n  } catch (error) {\r\n    console.error('새로고침 실패:', error)\r\n    addLog(`새로고침 실패: ${error.message}`, 'error')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 생산 시뮬레이션 시작\r\nfunction startProductionSimulation() {\r\n  if (productionTimer) {\r\n    clearInterval(productionTimer)\r\n  }\r\n  \r\n  addLog('생산 시뮬레이션을 시작합니다...', 'info')\r\n  \r\n  productionTimer = setInterval(() => {\r\n    if (!isWorking.value) return\r\n    \r\n    const increment = productionSettings.value.productionSpeed\r\n    productionSettings.value.currentProgress = Math.min(\r\n      productionSettings.value.currentProgress + increment,\r\n      productionSettings.value.targetQty\r\n    )\r\n    \r\n    const totalProduced = productionSettings.value.currentProgress\r\n    const defectQty = Math.floor(totalProduced * productionSettings.value.defectRate)\r\n    const passQty = totalProduced - defectQty\r\n    \r\n    const totalTargetQty = currentWork.value.target_quantity || productionSettings.value.targetQty\r\n    currentWork.value.output_qty = passQty\r\n    currentWork.value.defect_qty = defectQty\r\n    currentWork.value.progressRate = Math.min(100, Math.round((passQty / totalTargetQty) * 100))\r\n    currentWork.value.passRate = totalProduced > 0 ? Math.round((passQty / totalProduced) * 100) : 0\r\n    currentWork.value.defectRate = totalProduced > 0 ? Math.round((defectQty / totalProduced) * 100) : 0\r\n    \r\n    updateCurrentWorkInfo()\r\n    \r\n    if (totalProduced > 0 && totalProduced % (productionSettings.value.productionSpeed * 5) === 0) {\r\n      addLog(`생산 진행: ${passQty}개 완료 (불량: ${defectQty}개, 진행률: ${currentWork.value.progressRate}%)`, 'info')\r\n    }\r\n    \r\n    if (totalProduced >= productionSettings.value.targetQty) {\r\n      autoCompleteProduction()\r\n    }\r\n    \r\n  }, 1000)\r\n}\r\n\r\n// 자동 완료\r\nfunction autoCompleteProduction() {\r\n  if (productionTimer) {\r\n    clearInterval(productionTimer)\r\n    productionTimer = null\r\n  }\r\n  \r\n  isWorking.value = false\r\n  workStatus.value = 'COMPLETED'\r\n  currentWork.value.actual_end_time = new Date() // 실제 종료시간 설정\r\n  \r\n  addLog('생산이 완료되었습니다!', 'success')\r\n  addLog('\"완료 처리\" 버튼을 눌러 작업을 마무리해주세요.', 'info')\r\n}\r\n\r\n// 생산 일시정지\r\nfunction pauseProduction() {\r\n  isWorking.value = false\r\n  workStatus.value = 'PAUSED'\r\n  \r\n  if (productionTimer) {\r\n    clearInterval(productionTimer)\r\n    productionTimer = null\r\n  }\r\n  \r\n  if (workTimer) {\r\n    clearInterval(workTimer)\r\n    workTimer = null\r\n  }\r\n  \r\n  addLog('작업을 일시정지했습니다.', 'warning')\r\n}\r\n\r\n// 생산 재시작\r\nfunction resumeProduction() {\r\n  isWorking.value = true\r\n  workStatus.value = 'WORKING'\r\n  \r\n  startWorkTimer()\r\n  startProductionSimulation()\r\n  \r\n  addLog('작업을 재시작했습니다.', 'success')\r\n}\r\n\r\n// 작업 종료\r\nasync function stopWork() {\r\n  try {\r\n    isWorking.value = false\r\n    workStatus.value = 'COMPLETED'\r\n    currentWork.value.actual_end_time = new Date() // 실제 종료시간 설정\r\n    \r\n    if (workTimer) {\r\n      clearInterval(workTimer)\r\n      workTimer = null\r\n    }\r\n    if (productionTimer) {\r\n      clearInterval(productionTimer)\r\n      productionTimer = null\r\n    }\r\n    \r\n    addLog('작업을 강제 종료했습니다.', 'info')\r\n    \r\n  } catch (error) {\r\n    console.error('작업 종료 실패:', error)\r\n    showErrorMessage('작업 종료 처리에 실패했습니다.')\r\n  }\r\n}\r\n\r\n// 라인 초기화\r\nasync function resetLineStatus() {\r\n  if (!confirm('이 라인의 작업 상태를 초기화하시겠습니까?')) {\r\n    return\r\n  }\r\n  \r\n  try {\r\n    loading.value = true\r\n    loadingMessage.value = '라인 상태 초기화 중...'\r\n    \r\n    // 상태 초기화\r\n    isWorking.value = false\r\n    workStatus.value = 'READY'\r\n    selectedWorkOrder.value = ''\r\n    inputQuantity.value = 500\r\n    resetCurrentWork()\r\n    \r\n    if (workTimer) {\r\n      clearInterval(workTimer)\r\n      workTimer = null\r\n    }\r\n    if (productionTimer) {\r\n      clearInterval(productionTimer)\r\n      productionTimer = null\r\n    }\r\n    \r\n    addLog('라인 상태를 초기화했습니다.', 'success')\r\n    \r\n    await refreshWorkOrders()\r\n    \r\n  } catch (error) {\r\n    console.error('라인 초기화 실패:', error)\r\n    addLog(`라인 초기화 실패: ${error.message}`, 'error')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 투입수량 변경 핸들러\r\nfunction onInputQuantityChange() {\r\n  if (selectedWorkOrder.value && inputQuantity.value > 0) {\r\n    if (workInfo.value.lineType === 'OUTER' && workflowInfo.value.innerCompleted && workflowInfo.value.innerOutputQty > 0) {\r\n      console.log('외포장 워크플로우 연계 중 - 투입수량 변경 제한')\r\n      return\r\n    }\r\n    \r\n    currentWork.value.current_quantity = inputQuantity.value\r\n    updateCurrentWorkInfo()\r\n  }\r\n}\r\n\r\n// 현재 작업 정보 업데이트\r\nfunction updateCurrentWorkInfo() {\r\n  if (currentWork.value.target_quantity > 0) {\r\n    currentWork.value.remaining_quantity = Math.max(0, \r\n      currentWork.value.target_quantity - currentWork.value.current_quantity\r\n    )\r\n    \r\n    currentWork.value.achievementRate = Math.round(\r\n      (currentWork.value.output_qty / currentWork.value.target_quantity) * 100\r\n    )\r\n  } else {\r\n    currentWork.value.remaining_quantity = 0\r\n    currentWork.value.achievementRate = 0\r\n  }\r\n  \r\n  if (isWorking.value && productionSettings.value.productionSpeed > 0) {\r\n    const remainingQty = productionSettings.value.targetQty - productionSettings.value.currentProgress\r\n    const remainingSeconds = remainingQty / productionSettings.value.productionSpeed\r\n    currentWork.value.end_time = new Date(Date.now() + remainingSeconds * 1000)\r\n    currentWork.value.estimated_duration = Math.ceil(remainingSeconds)\r\n  }\r\n}\r\n\r\n// 작업 정보 리셋\r\nfunction resetCurrentWork() {\r\n  currentWork.value = {\r\n    work_order_no: '',\r\n    work_id: '',\r\n    result_detail_id: null,\r\n    result_id: '',\r\n    product_name: '',\r\n    final_product_name: '',\r\n    product_code: '',\r\n    package_type: '',\r\n    target_quantity: 0,\r\n    current_quantity: 0,\r\n    remaining_quantity: 0,\r\n    output_qty: 0,\r\n    defect_qty: 0,\r\n    progressRate: 0,\r\n    passRate: 0,\r\n    defectRate: 0,\r\n    achievementRate: 0,\r\n    employee_id: 2,\r\n    worker_name: '',\r\n    department: '포장부',\r\n    position: '작업자',\r\n    start_time: null,\r\n    actual_end_time: null,\r\n    end_time: null,\r\n    work_duration: 0,\r\n    estimated_duration: 0,\r\n    step_status: 'READY',\r\n    process_code: '',\r\n    eq_type_code: ''\r\n  }\r\n}\r\n\r\n// 작업 완료 버튼\r\nfunction completeProduction() {\r\n  if (workStatus.value === 'COMPLETED' || !isWorking.value) {\r\n    showCompleteModal.value = true\r\n    return\r\n  }\r\n  \r\n  showCompleteModal.value = true\r\n}\r\n\r\n// 작업 버튼 핸들러\r\nfunction handleWorkButton() {\r\n  if (workStatus.value === 'READY') {\r\n    startWork()\r\n  } else if (workStatus.value === 'WORKING') {\r\n    pauseProduction()\r\n  } else if (workStatus.value === 'PAUSED') {\r\n    resumeProduction()\r\n  }\r\n}\r\n\r\n// 에러 처리\r\nfunction showErrorMessage(message) {\r\n  errorMessage.value = message\r\n  showError.value = true\r\n  addLog(message, 'error')\r\n}\r\n\r\nfunction hideError() {\r\n  showError.value = false\r\n}\r\n\r\nasync function retryConnection() {\r\n  hideError()\r\n  try {\r\n    await refreshWorkOrders()\r\n  } catch (error) {\r\n    showErrorMessage('재연결에 실패했습니다.')\r\n  }\r\n}\r\n\r\n// work_result_detail 상태 업데이트 API\r\nasync function updateWorkResultDetailStatus(status) {\r\n  try {\r\n    const response = await axios.post('/packages/workflow/start-inner', {\r\n      work_order_no: currentWork.value.work_order_no,\r\n      product_code: currentWork.value.product_code,\r\n      process_group_code: processFlowResult.value.processGroupCode\r\n    }, {\r\n      headers: {\r\n        'X-Workflow-Source': 'PackageWork.vue',\r\n        'X-Table-Structure': 'work_order_master + work_result_detail'\r\n      }\r\n    })\r\n    \r\n    if (response.data.success) {\r\n      addLog(`work_result_detail.code_value = \"${status}\" 업데이트 성공`, 'success')\r\n    }\r\n  } catch (error) {\r\n    console.error('work_result_detail 상태 업데이트 실패:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n// work_result_detail 시작시간 업데이트 API\r\nasync function updateWorkResultDetailStartTime(startTime) {\r\n  try {\r\n    const response = await axios.put('/packages/workflow/update-start-time', {\r\n      work_order_no: currentWork.value.work_order_no,\r\n      start_time: startTime,\r\n      result_detail_id: currentWork.value.result_detail_id\r\n    }, {\r\n      headers: {\r\n        'X-Workflow-Source': 'PackageWork.vue',\r\n        'X-Table-Structure': 'work_order_master + work_result_detail'\r\n      }\r\n    })\r\n    \r\n    if (response.data.success) {\r\n      addLog('work_result_detail.work_start_time 업데이트 성공', 'success')\r\n    }\r\n  } catch (error) {\r\n    console.error('work_result_detail 시작시간 업데이트 실패:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n// work_result_detail 종료시간 업데이트 API\r\nasync function updateWorkResultDetailEndTime(endTime) {\r\n  try {\r\n    const response = await axios.put('/packages/workflow/update-end-time', {\r\n      work_order_no: currentWork.value.work_order_no,\r\n      end_time: endTime,\r\n      result_detail_id: currentWork.value.result_detail_id,\r\n      pass_qty: currentWork.value.output_qty,\r\n      defect_qty: currentWork.value.defect_qty\r\n    }, {\r\n      headers: {\r\n        'X-Workflow-Source': 'PackageWork.vue',\r\n        'X-Table-Structure': 'work_order_master + work_result_detail'\r\n      }\r\n    })\r\n    \r\n    if (response.data.success) {\r\n      addLog('work_result_detail.work_end_time 업데이트 성공', 'success')\r\n    }\r\n  } catch (error) {\r\n    console.error('work_result_detail 종료시간 업데이트 실패:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n// 작업 타이머 시작\r\nfunction startWorkTimer() {\r\n  if (workTimer) {\r\n    clearInterval(workTimer)\r\n  }\r\n  \r\n  workTimer = setInterval(() => {\r\n    if (isWorking.value && workStartTime.value) {\r\n      const now = new Date()\r\n      const elapsed = now - workStartTime.value\r\n      const hours = Math.floor(elapsed / (1000 * 60 * 60))\r\n      const minutes = Math.floor((elapsed % (1000 * 60 * 60)) / (1000 * 60))\r\n      const seconds = Math.floor((elapsed % (1000 * 60)) / 1000)\r\n      \r\n      workElapsedTime.value = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\r\n    }\r\n  }, 1000)\r\n}\r\n\r\n// 로그 추가\r\nfunction addLog(message, type = 'info') {\r\n  const log = {\r\n    id: Date.now() + Math.random(),\r\n    timestamp: new Date(),\r\n    message,\r\n    type\r\n  }\r\n  \r\n  workLogs.value.unshift(log)\r\n  \r\n  // 로그 개수 제한 (최대 100개)\r\n  if (workLogs.value.length > 100) {\r\n    workLogs.value = workLogs.value.slice(0, 100)\r\n  }\r\n}\r\n\r\n// 라인 선택으로 돌아가기\r\nfunction goBackToLineSelection() {\r\n  if (isWorking.value) {\r\n    if (!confirm('작업 중입니다. 정말로 라인 선택 페이지로 돌아가시겠습니까?')) {\r\n      return\r\n    }\r\n  }\r\n  \r\n  router.push({ name: 'package_line' })\r\n}\r\n\r\n// 모달 제어\r\nfunction closeCompleteModal() {\r\n  showCompleteModal.value = false\r\n}\r\n\r\n// 텍스트 및 상태 함수들\r\nfunction getWorkflowStepText() {\r\n  if (workflowInfo.value.step === 'OUTER') {\r\n    return '외포장'\r\n  }\r\n  return workInfo.value.lineType === 'INNER' ? '내포장' : '외포장'\r\n}\r\n\r\nfunction getWorkStatusText(status) {\r\n  const statusMap = {\r\n    'READY': '대기',\r\n    'WORKING': '진행중',\r\n    'PAUSED': '일시정지',\r\n    'COMPLETED': '완료',\r\n    'PARTIAL_COMPLETE': '부분완료',\r\n    'partial_complete': '부분완료',\r\n    '부분완료': '부분완료',\r\n    '대기': '대기',\r\n    '진행중': '진행중',\r\n    '일시정지': '일시정지',\r\n    '완료': '완료',\r\n    'in_progress': '진행중',\r\n    'completed': '완료',\r\n    'inspection': '검사중'\r\n  }\r\n  return statusMap[status] || status || '대기'\r\n}\r\n\r\nfunction getWorkStatusClass(status) {\r\n  const classMap = {\r\n    'READY': 'ready',\r\n    'WORKING': 'working',\r\n    'PAUSED': 'paused',\r\n    'COMPLETED': 'completed',\r\n    'PARTIAL_COMPLETE': 'partial',\r\n    'partial_complete': 'partial',\r\n    '부분완료': 'partial',\r\n    '대기': 'ready',\r\n    '진행중': 'working',\r\n    '일시정지': 'paused',\r\n    '완료': 'completed',\r\n    'in_progress': 'working',\r\n    'completed': 'completed',\r\n    'inspection': 'inspection'\r\n  }\r\n  return classMap[status] || 'ready'\r\n}\r\n\r\nfunction getWorkButtonText() {\r\n  if (workStatus.value === 'READY') {\r\n    return '작업 시작'\r\n  } else if (workStatus.value === 'WORKING') {\r\n    return '일시정지'\r\n  } else if (workStatus.value === 'PAUSED') {\r\n    return '재시작'\r\n  }\r\n  return '작업 시작'\r\n}\r\n\r\nfunction getCompleteModalTitle() {\r\n  if (workInfo.value.lineType === 'INNER') {\r\n    return '내포장 작업 완료'\r\n  } else {\r\n    return '외포장 작업 완료'\r\n  }\r\n}\r\n\r\nfunction getConfirmationText() {\r\n  if (workInfo.value.lineType === 'INNER') {\r\n    return '내포장 작업을 완료하고 외포장 라인 선택으로 이동하시겠습니까?'\r\n  } else {\r\n    return '외포장 작업을 완료하고 전체 포장 프로세스를 마무리하시겠습니까?'\r\n  }\r\n}\r\n\r\nfunction getCompleteButtonText() {\r\n  if (workInfo.value.lineType === 'INNER') {\r\n    return '완료 후 외포장으로'\r\n  } else {\r\n    return '전체 완료'\r\n  }\r\n}\r\n\r\nfunction getTransitionTitle() {\r\n  if (workInfo.value.lineType === 'INNER') {\r\n    return '외포장 라인 선택으로 이동 중...'\r\n  } else {\r\n    return '포장 라인 선택으로 이동 중...'\r\n  }\r\n}\r\n\r\nfunction getTransitionMessage() {\r\n  if (workInfo.value.lineType === 'INNER') {\r\n    return '내포장 작업이 완료되었습니다. 외포장 라인을 선택하세요.'\r\n  } else {\r\n    return '모든 포장 작업이 완료되었습니다!'\r\n  }\r\n}\r\n\r\nfunction getAchievementRateClass(rate) {\r\n  if (rate >= 100) return 'excellent'\r\n  if (rate >= 80) return 'good'\r\n  if (rate >= 60) return 'normal'\r\n  return 'low'\r\n}\r\n\r\n// 포맷팅 함수들\r\nfunction formatNumber(number) {\r\n  if (number == null || number === undefined) return '0'\r\n  return new Intl.NumberFormat('ko-KR').format(number)\r\n}\r\n\r\nfunction formatTime(time) {\r\n  if (!time) return '-'\r\n  \r\n  if (typeof time === 'string') {\r\n    time = new Date(time)\r\n  }\r\n  \r\n  if (!(time instanceof Date) || isNaN(time.getTime())) {\r\n    return '-'\r\n  }\r\n  \r\n  return time.toLocaleString('ko-KR', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit'\r\n  })\r\n}\r\n\r\nfunction formatDateTime(time) {\r\n  if (!time) return '-'\r\n  \r\n  if (typeof time === 'string') {\r\n    time = new Date(time)\r\n  }\r\n  \r\n  if (!(time instanceof Date) || isNaN(time.getTime())) {\r\n    return '-'\r\n  }\r\n  \r\n  return time.toLocaleString('ko-KR', {\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit'\r\n  })\r\n}\r\n\r\n// 컴포넌트 언마운트 시 정리\r\nonUnmounted(() => {\r\n  if (workTimer) {\r\n    clearInterval(workTimer)\r\n  }\r\n  if (productionTimer) {\r\n    clearInterval(productionTimer)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.package-work-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  padding: 20px;\r\n}\r\n\r\n/* 헤더 스타일 */\r\n.work-header {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.breadcrumb {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n}\r\n\r\n.breadcrumb-item {\r\n  transition: color 0.2s;\r\n}\r\n\r\n.breadcrumb-item.active {\r\n  color: #1f2937;\r\n  font-weight: 600;\r\n}\r\n\r\n.breadcrumb-separator {\r\n  margin: 0 8px;\r\n  color: #d1d5db;\r\n}\r\n\r\n.header-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n}\r\n\r\n.header-left h1 {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0 0 12px 0;\r\n}\r\n\r\n.header-meta {\r\n  display: flex;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.line-type-badge,\r\n.work-status-badge,\r\n.workflow-badge {\r\n  padding: 4px 12px;\r\n  border-radius: 20px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.line-type-badge.inner {\r\n  background: #dbeafe;\r\n  color: #1e40af;\r\n}\r\n\r\n.line-type-badge.outer {\r\n  background: #f3e8ff;\r\n  color: #7c3aed;\r\n}\r\n\r\n.work-status-badge.ready {\r\n  background: #f3f4f6;\r\n  color: #6b7280;\r\n}\r\n\r\n.work-status-badge.working {\r\n  background: #dcfce7;\r\n  color: #16a34a;\r\n}\r\n\r\n.work-status-badge.paused {\r\n  background: #fef3c7;\r\n  color: #d97706;\r\n}\r\n\r\n.work-status-badge.completed {\r\n  background: #dbeafe;\r\n  color: #2563eb;\r\n}\r\n\r\n.workflow-badge {\r\n  background: #f0f9ff;\r\n  color: #0284c7;\r\n}\r\n\r\n.workflow-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.workflow-step {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background: #f3f4f6;\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.workflow-step.completed {\r\n  background: #dcfce7;\r\n  color: #16a34a;\r\n}\r\n\r\n.workflow-step.active {\r\n  background: #dbeafe;\r\n  color: #2563eb;\r\n}\r\n\r\n.workflow-arrow {\r\n  color: #9ca3af;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 워크플로우 안내 */\r\n.workflow-guide {\r\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\r\n  border: 1px solid #0ea5e9;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.guide-content h3 {\r\n  color: #0c4a6e;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 0 0 8px 0;\r\n}\r\n\r\n.guide-content p {\r\n  color: #0369a1;\r\n  margin: 0 0 16px 0;\r\n  line-height: 1.6;\r\n}\r\n\r\n.guide-stats {\r\n  display: flex;\r\n  gap: 16px;\r\n  font-size: 14px;\r\n  color: #0284c7;\r\n}\r\n\r\n.output-qty {\r\n  font-weight: 600;\r\n  color: #0c4a6e;\r\n}\r\n\r\n/* 메인 레이아웃 */\r\n.work-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.work-layout {\r\n  display: grid;\r\n  grid-template-columns: 1fr 350px;\r\n  gap: 24px;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .work-layout {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n/* 메인 작업 영역 */\r\n.work-main {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n}\r\n\r\n/* 제어 패널 */\r\n.control-panel {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.panel-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.panel-header h3 {\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0;\r\n}\r\n\r\n.control-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n.control-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 16px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .control-row {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.control-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.control-label {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.line-info {\r\n  font-size: 12px;\r\n  color: #6b7280;\r\n  font-weight: 400;\r\n}\r\n\r\n.selected-count {\r\n  font-size: 12px;\r\n  color: #059669;\r\n  font-weight: 400;\r\n}\r\n\r\n.target-info,\r\n.workflow-info {\r\n  font-size: 12px;\r\n  color: #6b7280;\r\n  font-weight: 400;\r\n}\r\n\r\n.workflow-info {\r\n  color: #0284c7;\r\n}\r\n\r\n.control-display {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 10px 12px;\r\n  background: #f9fafb;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 6px;\r\n}\r\n\r\n.display-value {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.display-value.workflow-linked {\r\n  color: #0284c7;\r\n}\r\n\r\n.display-unit {\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n}\r\n\r\n.control-select,\r\n.control-input {\r\n  padding: 10px 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.control-select:focus,\r\n.control-input:focus {\r\n  outline: none;\r\n  border-color: #3b82f6;\r\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n}\r\n\r\n.control-input.workflow-linked {\r\n  background: #f0f9ff;\r\n  border-color: #0ea5e9;\r\n  color: #0c4a6e;\r\n}\r\n\r\n.control-input.partial-work {\r\n  background: #fefce8;\r\n  border-color: #eab308;\r\n}\r\n\r\n.control-select:disabled,\r\n.control-input:disabled {\r\n  background: #f3f4f6;\r\n  color: #9ca3af;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.workflow-linked-info {\r\n  font-size: 12px;\r\n  color: #0284c7;\r\n  font-style: italic;\r\n}\r\n\r\n/* 작업번호 메시지 */\r\n.no-work-message,\r\n.loading-work-message {\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.no-work-message {\r\n  background: #fef3c7;\r\n  border: 1px solid #f59e0b;\r\n}\r\n\r\n.loading-work-message {\r\n  background: #f0f9ff;\r\n  border: 1px solid #0ea5e9;\r\n}\r\n\r\n.message-content,\r\n.loading-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.message-text,\r\n.loading-content strong {\r\n  font-weight: 600;\r\n  color: #92400e;\r\n}\r\n\r\n.loading-content strong {\r\n  color: #0c4a6e;\r\n}\r\n\r\n.message-help,\r\n.loading-help {\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n  color: #b45309;\r\n}\r\n\r\n.loading-help {\r\n  color: #0369a1;\r\n}\r\n\r\n/* 작업 제어 버튼 */\r\n.work-controls {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-top: 24px;\r\n  padding-top: 24px;\r\n  border-top: 1px solid #e5e7eb;\r\n}\r\n\r\n.main-actions,\r\n.sub-actions {\r\n  display: flex;\r\n  gap: 12px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.btn {\r\n  padding: 12px 24px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  border: 1px solid transparent;\r\n  text-align: center;\r\n  min-width: 120px;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-work {\r\n  background: #10b981;\r\n  color: white;\r\n  border-color: #059669;\r\n}\r\n\r\n.btn-work:hover:not(:disabled) {\r\n  background: #059669;\r\n}\r\n\r\n.btn-work.working {\r\n  background: #f59e0b;\r\n  border-color: #d97706;\r\n}\r\n\r\n.btn-work.working:hover:not(:disabled) {\r\n  background: #d97706;\r\n}\r\n\r\n.btn-complete {\r\n  background: #3b82f6;\r\n  color: white;\r\n  border-color: #2563eb;\r\n}\r\n\r\n.btn-complete:hover:not(:disabled) {\r\n  background: #2563eb;\r\n}\r\n\r\n.btn-complete.ready {\r\n  background: #059669;\r\n  border-color: #047857;\r\n}\r\n\r\n.btn-complete.ready:hover:not(:disabled) {\r\n  background: #047857;\r\n}\r\n\r\n.btn-stop {\r\n  background: #ef4444;\r\n  color: white;\r\n  border-color: #dc2626;\r\n}\r\n\r\n.btn-stop:hover:not(:disabled) {\r\n  background: #dc2626;\r\n}\r\n\r\n.btn-refresh,\r\n.btn-reset {\r\n  background: #f3f4f6;\r\n  color: #374151;\r\n  border-color: #d1d5db;\r\n  min-width: auto;\r\n  padding: 10px 16px;\r\n}\r\n\r\n.btn-refresh:hover:not(:disabled),\r\n.btn-reset:hover:not(:disabled) {\r\n  background: #e5e7eb;\r\n  border-color: #9ca3af;\r\n}\r\n\r\n/* 진행 상황 패널 */\r\n.progress-panel {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.progress-panel h3 {\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0 0 20px 0;\r\n}\r\n\r\n.progress-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .progress-cards {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.progress-card {\r\n  background: #f8fafc;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  text-align: center;\r\n}\r\n\r\n.progress-card.success {\r\n  background: #f0fdf4;\r\n  border-color: #bbf7d0;\r\n}\r\n\r\n.progress-card.danger {\r\n  background: #fef2f2;\r\n  border-color: #fecaca;\r\n}\r\n\r\n.card-header {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 14px;\r\n  color: #64748b;\r\n  font-weight: 500;\r\n}\r\n\r\n.card-value {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #1e293b;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.progress-card.success .card-value {\r\n  color: #166534;\r\n}\r\n\r\n.progress-card.danger .card-value {\r\n  color: #991b1b;\r\n}\r\n\r\n.card-unit {\r\n  font-size: 12px;\r\n  color: #64748b;\r\n}\r\n\r\n.progress-section {\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n}\r\n\r\n.progress-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.progress-header span:first-child {\r\n  font-size: 14px;\r\n  color: #64748b;\r\n  font-weight: 500;\r\n}\r\n\r\n.progress-percent {\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #1e293b;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 8px;\r\n  background: #e2e8f0;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #10b981 0%, #059669 100%);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n/* 로그 패널 */\r\n.log-panel {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.log-panel h3 {\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0 0 16px 0;\r\n}\r\n\r\n.log-container {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 6px;\r\n  background: #f9fafb;\r\n}\r\n\r\n.log-item {\r\n  display: flex;\r\n  gap: 12px;\r\n  padding: 8px 12px;\r\n  border-bottom: 1px solid #e5e7eb;\r\n  font-size: 13px;\r\n}\r\n\r\n.log-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.log-item.info {\r\n  background: #f8fafc;\r\n}\r\n\r\n.log-item.success {\r\n  background: #f0fdf4;\r\n}\r\n\r\n.log-item.warning {\r\n  background: #fffbeb;\r\n}\r\n\r\n.log-item.error {\r\n  background: #fef2f2;\r\n}\r\n\r\n.log-time {\r\n  color: #6b7280;\r\n  font-weight: 500;\r\n  min-width: 80px;\r\n}\r\n\r\n.log-content {\r\n  color: #374151;\r\n  flex: 1;\r\n  line-height: 1.4;\r\n}\r\n\r\n.log-item.success .log-content {\r\n  color: #166534;\r\n}\r\n\r\n.log-item.warning .log-content {\r\n  color: #92400e;\r\n}\r\n\r\n.log-item.error .log-content {\r\n  color: #991b1b;\r\n}\r\n\r\n/* 사이드바 */\r\n.work-sidebar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n}\r\n\r\n/* 워크플로우 패널 */\r\n.workflow-panel {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.workflow-panel h3 {\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0 0 16px 0;\r\n}\r\n\r\n.workflow-chain {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.chain-step {\r\n  background: #f8fafc;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n}\r\n\r\n.chain-step.completed {\r\n  background: #f0fdf4;\r\n  border-color: #bbf7d0;\r\n}\r\n\r\n.chain-step.current {\r\n  background: #f0f9ff;\r\n  border-color: #bfdbfe;\r\n}\r\n\r\n.step-header {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.step-title {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #1e293b;\r\n}\r\n\r\n.chain-step.completed .step-title {\r\n  color: #166534;\r\n}\r\n\r\n.chain-step.current .step-title {\r\n  color: #1e40af;\r\n}\r\n\r\n.step-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.detail-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 13px;\r\n}\r\n\r\n.detail-label {\r\n  color: #64748b;\r\n}\r\n\r\n.detail-value {\r\n  color: #1e293b;\r\n  font-weight: 500;\r\n}\r\n\r\n.detail-value.highlight {\r\n  color: #059669;\r\n  font-weight: 600;\r\n}\r\n\r\n.chain-arrow {\r\n  text-align: center;\r\n  color: #64748b;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  padding: 4px 0;\r\n}\r\n\r\n/* 정보 패널 */\r\n.info-panel {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.info-panel h3 {\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0 0 16px 0;\r\n}\r\n\r\n.info-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-section:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.info-section h4 {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n  margin: 0 0 12px 0;\r\n  padding-bottom: 6px;\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 6px 0;\r\n  font-size: 13px;\r\n}\r\n\r\n.info-label {\r\n  color: #6b7280;\r\n  font-weight: 500;\r\n}\r\n\r\n.info-value {\r\n  color: #1f2937;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  max-width: 60%;\r\n  word-break: break-all;\r\n}\r\n\r\n.info-value.workflow-linked {\r\n  color: #0284c7;\r\n}\r\n\r\n.achievement-rate.excellent {\r\n  color: #059669;\r\n}\r\n\r\n.achievement-rate.good {\r\n  color: #0284c7;\r\n}\r\n\r\n.achievement-rate.normal {\r\n  color: #d97706;\r\n}\r\n\r\n.achievement-rate.low {\r\n  color: #dc2626;\r\n}\r\n\r\n.work-duration {\r\n  font-family: 'Monaco', 'Menlo', monospace;\r\n  color: #1f2937;\r\n}\r\n\r\n.estimated-time.time-warning {\r\n  color: #dc2626;\r\n  font-weight: 700;\r\n}\r\n\r\n.worker-name {\r\n  color: #1f2937;\r\n}\r\n\r\n/* 라인 변경 패널 */\r\n.line-change-panel {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.btn-line-change {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background: #f3f4f6;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 8px;\r\n  color: #374151;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.btn-line-change:hover {\r\n  background: #e5e7eb;\r\n  border-color: #9ca3af;\r\n}\r\n\r\n.line-change-help {\r\n  font-size: 12px;\r\n  color: #6b7280;\r\n  line-height: 1.5;\r\n  margin: 0;\r\n}\r\n\r\n/* 모달 스타일 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: 20px;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  border-radius: 12px;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 24px;\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n\r\n.modal-header h3 {\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0;\r\n}\r\n\r\n.modal-close {\r\n  padding: 8px 16px;\r\n  background: #f3f4f6;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  color: #374151;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.modal-close:hover {\r\n  background: #e5e7eb;\r\n}\r\n\r\n.modal-body {\r\n  padding: 24px;\r\n}\r\n\r\n/* 완료 모달 */\r\n.complete-summary {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.complete-summary h4 {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin: 0 0 16px 0;\r\n}\r\n\r\n.summary-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 12px;\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .summary-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px;\r\n  background: #f8fafc;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.summary-label {\r\n  color: #64748b;\r\n  font-weight: 500;\r\n}\r\n\r\n.summary-value {\r\n  color: #1e293b;\r\n  font-weight: 700;\r\n}\r\n\r\n.next-step-info {\r\n  margin: 24px 0;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.next-step-info.inner-completion {\r\n  background: #f0f9ff;\r\n  border: 1px solid #0ea5e9;\r\n}\r\n\r\n.next-step-info.outer-completion {\r\n  background: #f0fdf4;\r\n  border: 1px solid #22c55e;\r\n}\r\n\r\n.info-box {\r\n  background: white;\r\n  border-radius: 6px;\r\n  padding: 16px;\r\n}\r\n\r\n.info-content h5 {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1e293b;\r\n  margin: 0 0 8px 0;\r\n}\r\n\r\n.info-content p {\r\n  color: #64748b;\r\n  margin: 0 0 12px 0;\r\n  line-height: 1.6;\r\n}\r\n\r\n.info-content ul {\r\n  margin: 0;\r\n  padding-left: 20px;\r\n  color: #64748b;\r\n}\r\n\r\n.info-content li {\r\n  margin-bottom: 4px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.completion-chain {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 12px;\r\n  margin: 16px 0;\r\n}\r\n\r\n.chain-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 4px;\r\n}\r\n\r\n.chain-text {\r\n  font-size: 14px;\r\n  color: #64748b;\r\n}\r\n\r\n.chain-status {\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  color: #059669;\r\n  background: #dcfce7;\r\n  padding: 2px 8px;\r\n  border-radius: 12px;\r\n}\r\n\r\n.confirmation-text {\r\n  font-size: 16px;\r\n  color: #374151;\r\n  text-align: center;\r\n  margin: 0;\r\n  line-height: 1.6;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  padding: 20px 24px;\r\n  border-top: 1px solid #e5e7eb;\r\n}\r\n\r\n.btn-cancel,\r\n.btn-confirm {\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-cancel {\r\n  background: #f3f4f6;\r\n  color: #374151;\r\n  border: 1px solid #d1d5db;\r\n}\r\n\r\n.btn-cancel:hover {\r\n  background: #e5e7eb;\r\n}\r\n\r\n.btn-confirm {\r\n  background: #3b82f6;\r\n  color: white;\r\n  border: 1px solid #2563eb;\r\n}\r\n\r\n.btn-confirm:hover {\r\n  background: #2563eb;\r\n}\r\n\r\n/* 자동 전환 오버레이 */\r\n.auto-transition-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1100;\r\n}\r\n\r\n.transition-modal {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 32px;\r\n  text-align: center;\r\n  max-width: 400px;\r\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.transition-modal h3 {\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #1f2937;\r\n  margin: 0 0 12px 0;\r\n}\r\n\r\n.transition-modal p {\r\n  color: #6b7280;\r\n  margin: 0 0 24px 0;\r\n  line-height: 1.6;\r\n}\r\n\r\n.transition-progress {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.transition-progress .progress-bar {\r\n  flex: 1;\r\n  height: 8px;\r\n  background: #e5e7eb;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.transition-progress .progress-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #3b82f6 0%, #1d4ed8 100%);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.progress-text {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n  min-width: 40px;\r\n}\r\n\r\n/* 로딩 및 에러 오버레이 */\r\n.loading-overlay,\r\n.error-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #e5e7eb;\r\n  border-top: 4px solid #3b82f6;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.loading-text {\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n}\r\n\r\n.error-modal {\r\n  background: white;\r\n  border-radius: 12px;\r\n  max-width: 400px;\r\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.error-header {\r\n  padding: 20px 24px;\r\n  border-bottom: 1px solid #fee2e2;\r\n  background: #fef2f2;\r\n  border-radius: 12px 12px 0 0;\r\n}\r\n\r\n.error-header h3 {\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #991b1b;\r\n  margin: 0;\r\n}\r\n\r\n.error-body {\r\n  padding: 24px;\r\n}\r\n\r\n.error-body p {\r\n  color: #374151;\r\n  margin: 0 0 12px 0;\r\n  line-height: 1.6;\r\n}\r\n\r\n.error-help {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n}\r\n\r\n.error-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  padding: 20px 24px;\r\n  border-top: 1px solid #e5e7eb;\r\n}\r\n\r\n.btn-error-close,\r\n.btn-retry {\r\n  padding: 10px 16px;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-error-close {\r\n  background: #f3f4f6;\r\n  color: #374151;\r\n  border: 1px solid #d1d5db;\r\n}\r\n\r\n.btn-error-close:hover {\r\n  background: #e5e7eb;\r\n}\r\n\r\n.btn-retry {\r\n  background: #3b82f6;\r\n  color: white;\r\n  border: 1px solid #2563eb;\r\n}\r\n\r\n.btn-retry:hover {\r\n  background: #2563eb;\r\n}\r\n\r\n/* 스크롤바 스타일 */\r\n.log-container::-webkit-scrollbar,\r\n.modal-content::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.log-container::-webkit-scrollbar-track,\r\n.modal-content::-webkit-scrollbar-track {\r\n  background: #f1f5f9;\r\n  border-radius: 3px;\r\n}\r\n\r\n.log-container::-webkit-scrollbar-thumb,\r\n.modal-content::-webkit-scrollbar-thumb {\r\n  background: #cbd5e1;\r\n  border-radius: 3px;\r\n}\r\n\r\n.log-container::-webkit-scrollbar-thumb:hover,\r\n.modal-content::-webkit-scrollbar-thumb:hover {\r\n  background: #94a3b8;\r\n}\r\n\r\n/* 반응형 디자인 */\r\n@media (max-width: 1024px) {\r\n  .package-work-container {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .work-header {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .header-info {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n  }\r\n  \r\n  .workflow-indicator {\r\n    align-self: flex-start;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .control-panel,\r\n  .progress-panel,\r\n  .log-panel,\r\n  .info-panel {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .btn {\r\n    min-width: auto;\r\n    flex: 1;\r\n  }\r\n  \r\n  .main-actions,\r\n  .sub-actions {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .modal-content {\r\n    margin: 16px;\r\n    max-width: calc(100vw - 32px);\r\n  }\r\n  \r\n  .transition-modal {\r\n    margin: 16px;\r\n    max-width: calc(100vw - 32px);\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .package-work-container {\r\n    padding: 12px;\r\n  }\r\n  \r\n  .work-header {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .header-left h1 {\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .workflow-step {\r\n    width: 80px;\r\n    height: 32px;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .progress-cards {\r\n    gap: 12px;\r\n  }\r\n  \r\n  .card-value {\r\n    font-size: 20px;\r\n  }\r\n}\r\n</style>"],"names":["axios","router","useRouter","route","useRoute","workInfo","ref","getProductNameFromCode","productCode","productNameMap","baseCode","code","name","getDisplayProductName","workData","extractedProductCode","computed","lineName","lineId","codePatterns","pattern","match","productMapping","keyword","code30","code60","prefixMapping","prefix","workflowInfo","processFlowResult","workResultQuery","showCompleteModal","showAutoTransition","transitionProgress","loading","loadingMessage","showError","errorMessage","workStatus","isWorking","workStartTime","workElapsedTime","selectedWorkOrder","inputQuantity","availableWork","currentWork","workLogs","workTimer","productionTimer","isTimeWarning","now","productionSettings","isPartialWork","canStartWork","onMounted","executeWorkflowStep1","executeWorkflowStep2","executeWorkflowStep3","executeWorkflowStep4","loadWorkflowData","onWorkOrderChange","addLog","productName","error","processTypeCode","processFlowData","processGroupCode","previousOrder","workResultData","lineType","response","showErrorMessage","baseLineName","innerData","apiError","workflowKey","localData","formatNumber","resetCurrentWork","realProductName","updateCurrentWorkInfo","startWork","pauseProduction","startTime","updateWorkResultDetailStatus","updateWorkResultDetailStartTime","startWorkTimer","startProductionSimulation","confirmCompleteWork","endTime","passQty","defectQty","updateWorkResultDetailEndTime","processInnerToOuterWorkflow","startDirectTransitionToOuter","startAutoTransitionToLineSelection","closeCompleteModal","queryParams","duration","interval","increment","progressTimer","refreshWorkOrders","currentSelectedWork","resolve","workflowError","totalProduced","totalTargetQty","autoCompleteProduction","resumeProduction","stopWork","resetLineStatus","onInputQuantityChange","remainingSeconds","completeProduction","handleWorkButton","message","hideError","retryConnection","status","elapsed","hours","minutes","seconds","type","log","goBackToLineSelection","getWorkflowStepText","getWorkStatusText","getWorkButtonText","getCompleteModalTitle","getConfirmationText","getCompleteButtonText","getTransitionTitle","getTransitionMessage","getAchievementRateClass","rate","number","formatTime","time","formatDateTime","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","_normalizeClass","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","$event","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_normalizeStyle","_hoisted_69","_hoisted_70","_Fragment","_renderList","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","_hoisted_103","_hoisted_104","_hoisted_105","_hoisted_106","_hoisted_107","_hoisted_108","_hoisted_109","_hoisted_110","_hoisted_111","_hoisted_112","_hoisted_113","_hoisted_114","_hoisted_115","_hoisted_116","_hoisted_117","_hoisted_118","_hoisted_119","_hoisted_120","_hoisted_121","_hoisted_122","_hoisted_123","_hoisted_124","_hoisted_125","_hoisted_126","_hoisted_127","_hoisted_128","_hoisted_129","_hoisted_130","_hoisted_131","_hoisted_132","_hoisted_133","_hoisted_134","_hoisted_135","_hoisted_136","_hoisted_137","_hoisted_138","_hoisted_139","_hoisted_140","_hoisted_141","_hoisted_142","_hoisted_143","_hoisted_144","_hoisted_145","_hoisted_146","_hoisted_147","_hoisted_148","_hoisted_149","_hoisted_150","_hoisted_151","_hoisted_152","_hoisted_153"],"mappings":"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"}