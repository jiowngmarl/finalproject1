{"version":3,"file":"mrpCalculatePage-D9U8G8KO.js","sources":["../../../client/src/pages/modals/PlanDetailModal.vue","../../../client/src/pages/material/mrpCalculatePage.vue"],"sourcesContent":["<template>\n  <va-modal\n    :model-value=\"isOpen\"\n    @update:modelValue=\"$emit('close')\"\n    no-actions\n  >\n    <h3 class=\"mb-2\">생산 계획 상세</h3>\n\n    <div class=\"mb-3\">\n      <div><strong>계획 ID:</strong> {{ products[0]?.plan_id }}</div>\n      <div><strong>계획명:</strong> {{ products[0]?.plan_name }}</div>\n      <div>\n        <strong>등록일:</strong> {{ formatToKST(products[0]?.plan_reg_dt) }}\n      </div>\n    </div>\n\n    <va-data-table :items=\"products\" :columns=\"columns\" class=\"mb-4\" />\n\n    <div class=\"custom-footer\">\n      <va-button color=\"primary\" @click=\"$emit('close')\">닫기</va-button>\n    </div>\n  </va-modal>\n</template>\n\n<script setup lang=\"ts\">\nconst props = defineProps<{\n  isOpen: boolean;\n  products: Array<any>;\n}>();\n\nconst columns = [\n  { key: \"product_code\", label: \"제품 코드\" },\n  { key: \"product_name\", label: \"제품명\" },\n  { key: \"plan_qty\", label: \"계획 수량\" },\n  { key: \"product_safty\", label: \"안전 재고\" },\n];\n\nconst formatToKST = (isoDate?: string): string => {\n  if (!isoDate) return \"-\";\n  const date = new Date(isoDate);\n  const kst = new Date(date.getTime() + 9 * 60 * 60 * 1000);\n  return `${kst.getFullYear()}-${String(kst.getMonth() + 1).padStart(2, \"0\")}-${String(kst.getDate()).padStart(2, \"0\")} ${String(kst.getHours()).padStart(2, \"0\")}:${String(kst.getMinutes()).padStart(2, \"0\")}`;\n};\n</script>\n\n<style scoped>\n::v-deep(.va-modal__footer),\n::v-deep(.va-modal__actions),\n::v-deep(.va-dialog__footer),\n::v-deep(.va-dialog__actions) {\n  display: none !important;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  row-gap: 0.5rem;\n  column-gap: 1rem;\n}\n\n.custom-footer {\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n}\n</style>\n","<template>\n  <div class=\"mrp-page\">\n    <h2 class=\"page-title\">MRP 계산</h2>\n\n    <!-- 생산계획 테이블 -->\n    <div class=\"table-section\">\n      <h3 class=\"table-title\">생산계획 리스트</h3>\n      <va-data-table\n        :items=\"planList\"\n        :columns=\"planColumns\"\n        :per-page=\"5\"\n        :current-page.sync=\"page\"\n        track-by=\"plan_id\"\n      >\n        <template #cell(plan_reg_dt)=\"{ row }\">\n          {{ formatToKST(row.source.plan_reg_dt) }}\n        </template>\n\n        <template #cell(view)=\"{ row }\">\n          <va-button\n            size=\"small\"\n            color=\"info\"\n            @click=\"openDetailModal(row.source)\"\n            >상세보기</va-button\n          >\n        </template>\n\n        <template #cell(action)=\"{ row }\">\n          <va-button size=\"small\" @click=\"onCalculateMRP(row.source)\"\n            >계산</va-button\n          >\n        </template>\n      </va-data-table>\n\n      <!-- ✅ 여기! 테이블 바로 바깥에 단 한 번만 팝업 추가 -->\n      <PlanDetailModal\n        :isOpen=\"isDetailModalOpen\"\n        :products=\"selectedDetailProducts\"\n        @close=\"isDetailModalOpen = false\"\n      />\n    </div>\n\n    <!-- 부족 자재 리스트 -->\n    <div class=\"table-section\">\n      <h3 class=\"table-title\">부족 자재 리스트</h3>\n      <va-data-table\n        :items=\"shortageList\"\n        :columns=\"shortageColumns\"\n        track-by=\"material_code\"\n      />\n      <div class=\"button-wrap\">\n        <va-button @click=\"onRegisterOrder\" :disabled=\"!selectedPlan\"\n          >발주관리 등록</va-button\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport axios from \"axios\";\nimport PlanDetailModal from \"../modals/PlanDetailModal.vue\";\nimport { ref, onMounted } from \"vue\";\n\ninterface Plan {\n  plan_id: string;\n  plan_name: string;\n  plan_reg_dt: string;\n}\n\ninterface Shortage {\n  material_code: string;\n  material_name: string;\n  current_stock_qty: number;\n  material_unit: string;\n  material_cls: string;\n  shortage_qty: number;\n}\n\nconst allPlans = ref<any[]>([]);\nconst planList = ref<Plan[]>([]);\nconst shortageList = ref<Shortage[]>([]);\nconst selectedPlan = ref<Plan | null>(null);\nconst page = ref(1);\nconst isDetailModalOpen = ref(false);\nconst selectedDetailPlan = ref<Plan | null>(null);\nconst selectedDetailProducts = ref<any[]>([]);\n\nconst planColumns = [\n  { key: \"plan_id\", label: \"계획번호\" },\n  { key: \"plan_name\", label: \"계획명\" },\n  {\n    key: \"plan_reg_dt\",\n    label: \"등록일\",\n    formatter: (value: string) => formatToKST(value),\n  },\n  { key: \"view\", label: \"상세보기\" },\n  { key: \"action\", label: \"계산\" },\n];\n\nconst shortageColumns = [\n  { key: \"material_code\", label: \"자재코드\" },\n  { key: \"material_name\", label: \"자재명\" },\n  { key: \"current_stock_qty\", label: \"재고\" },\n  { key: \"material_unit\", label: \"단위\" },\n  { key: \"material_cls\", label: \"분류\" },\n  { key: \"total_needed_qty\", label: \"필요 수량\" },\n  { key: \"material_safty\", label: \"안재 재고 기준\" },\n  { key: \"shortage_qty\", label: \"발주 수량\" },\n];\n\nconst openDetailModal = (plan: Plan) => {\n  selectedDetailProducts.value = allPlans.value.filter(\n    (p) => p.plan_id === plan.plan_id,\n  );\n  isDetailModalOpen.value = true;\n};\n\nconst formatToKST = (isoDate: string): string => {\n  const date = new Date(isoDate);\n  // KST 적용 (UTC+9)\n  const kst = new Date(date.getTime() + 9 * 60 * 60 * 1000);\n\n  const yyyy = kst.getFullYear();\n  const mm = String(kst.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(kst.getDate()).padStart(2, \"0\");\n  const hh = String(kst.getHours()).padStart(2, \"0\");\n  const mi = String(kst.getMinutes()).padStart(2, \"0\");\n\n  return `${yyyy}-${mm}-${dd} ${hh}:${mi}`;\n};\n\nconst fetchPlans = async () => {\n  try {\n    const res = await axios.get(\"/mrps\");\n    allPlans.value = res.data;\n\n    // plan_id 기준으로 중복 제거된 리스트 만들기\n    const uniquePlans = new Map<string, Plan>();\n    res.data.forEach((item: any) => {\n      if (!uniquePlans.has(item.plan_id)) {\n        uniquePlans.set(item.plan_id, {\n          plan_id: item.plan_id,\n          plan_name: item.plan_name,\n          plan_reg_dt: item.plan_reg_dt,\n        });\n      }\n    });\n    planList.value = Array.from(uniquePlans.values());\n  } catch (err) {\n    console.error(\"계획 조회 실패\", err);\n  }\n};\n\nconst onCalculateMRP = async (plan: Plan) => {\n  try {\n    selectedPlan.value = plan;\n    const res = await axios.get(`/mrps/${plan.plan_id}`);\n    shortageList.value = res.data;\n    console.log(\"MRP 응답 데이터:\", res.data);\n  } catch (err) {\n    console.error(\"MRP 계산 실패\", err);\n  }\n};\n\nconst onRegisterOrder = async () => {\n  if (!selectedPlan.value) {\n    alert(\"먼저 생산계획에서 계산 버튼을 눌러주세요.\");\n    return;\n  }\n\n  const planId = selectedPlan.value.plan_id;\n\n  //부족한 자재가 있음 → 발주 INSERT + is_ordered = 1\n  if (shortageList.value.length > 0) {\n    try {\n      const payload = shortageList.value.map((item) => {\n        const now = new Date();\n        const yyyy = now.getFullYear();\n        const mm = String(now.getMonth() + 1).padStart(2, \"0\");\n        const dd = String(now.getDate()).padStart(2, \"0\");\n        const dateStr = `${yyyy}${mm}${dd}`;\n        const random = Math.floor(100 + Math.random() * 900);\n        const poId = `${item.material_code}-${dateStr}-${random}`;\n\n        return {\n          purchase_order_id: poId,\n          purchase_order_name: `${item.material_name}-${item.shortage_qty}`,\n          purchase_order_quantity: item.shortage_qty,\n          material_code: item.material_code,\n        };\n      });\n\n      console.log(\"발주내용:\", payload);\n      try {\n        let res = await axios.post(\"/puOrder\", payload); // ← 발주 테이블에 insert\n        let red = await axios.put(`/mrps/${planId}`); // ← plan_master 업데이트\n        console.log(res.data);\n        console.log(red.data);\n        if (res.data.isSuccessed && red.data.isUpdated) {\n          alert(\"부족 자재 등록 완료!\");\n          await fetchPlans();\n          shortageList.value = []; // ✅ 등록 후 부족 자재 리스트 초기화\n          selectedPlan.value = null; // 선택된 생산계획도 초기화 (선택 해제)\n        } else {\n          alert(\"등록 실패\");\n        }\n      } catch (err) {\n        console.error(\"등록 실패:\", err);\n        alert(\"서버 오류 발생!\");\n      }\n    } catch (err) {\n      console.error(\"발주 등록 실패:\", err);\n      alert(\"발주 등록 중 오류가 발생했습니다.\");\n    }\n  }\n  //부족한 자재 없음 → is_ordered = 1만 업데이트\n  else {\n    try {\n      await axios.put(`/mrps/${planId}`);\n      alert(\"부족한 자재가 없어 발주 없이 완료 처리했습니다.\");\n    } catch (err) {\n      console.error(\"is_ordered 업데이트 실패:\", err);\n      alert(\"처리 중 오류가 발생했습니다.\");\n    }\n  }\n};\n\nonMounted(() => {\n  fetchPlans();\n});\n</script>\n\n<style scoped>\n.mrp-page {\n  padding: 1.5rem;\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.page-title {\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-bottom: 2rem;\n}\n\n.table-section {\n  margin-bottom: 2rem;\n}\n\n.table-title {\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.button-wrap {\n  text-align: right;\n  margin-top: 1rem;\n}\n</style>\n"],"names":["columns","formatToKST","isoDate","date","kst","_createBlock","_component_va_modal","isOpen","$emit","_cache","_createElementVNode","_hoisted_1","_toDisplayString","products","_createTextVNode","_createVNode","_component_va_data_table","_hoisted_2","_component_va_button","allPlans","ref","planList","shortageList","selectedPlan","page","isDetailModalOpen","selectedDetailProducts","planColumns","value","shortageColumns","openDetailModal","plan","p","yyyy","mm","dd","hh","mi","fetchPlans","res","axios","uniquePlans","item","err","onCalculateMRP","onRegisterOrder","planId","payload","now","dateStr","random","red","onMounted","_openBlock","_createElementBlock","_withCtx","row","$event","PlanDetailModal","_hoisted_3","_hoisted_4"],"mappings":"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"}