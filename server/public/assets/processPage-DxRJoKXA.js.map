{"version":3,"file":"processPage-DxRJoKXA.js","sources":["../../../client/src/pages/modals/MaterialAddPopup.vue","../../../client/src/pages/modals/PopupDetail.vue","../../../client/src/pages/process/processPage.vue"],"sourcesContent":["<template>\n  <div v-if=\"visible\" class=\"popup-overlay\">\n    <div class=\"popup-content\">\n      <div class=\"popup-header\">\n        <h3>자재 선택</h3>\n        <input\n          v-model=\"searchText\"\n          placeholder=\"자재코드 또는 자재명 검색\"\n          class=\"search-input\"\n        />\n      </div>\n\n      <table class=\"material-table\">\n        <thead>\n          <tr>\n            <th />\n            <th>자재코드</th>\n            <th>자재명</th>\n            <th>분류</th>\n            <th>단위</th>\n            <th>규격</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"item in filtered\" :key=\"item.material_code\">\n            <td>\n              <input\n                v-model=\"selectedCodes\"\n                type=\"checkbox\"\n                :value=\"item.material_code\"\n              />\n            </td>\n            <td>{{ item.material_code }}</td>\n            <td>{{ item.material_name }}</td>\n            <td>{{ item.material_cls }}</td>\n            <td>{{ item.material_unit }}</td>\n            <td>{{ item.material_stand }}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"popup-footer\">\n        <button class=\"btn save\" @click=\"addSelected\">추가</button>\n        <button class=\"btn\" @click=\"$emit('update:visible', false)\">\n          닫기\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, defineProps, defineEmits } from \"vue\";\nimport type { MaterialOption } from \"@/types\";\n\nconst props = defineProps<{\n  visible: boolean;\n  materials: MaterialOption[];\n}>();\n\nconst emit = defineEmits([\"update:visible\", \"add\"]);\n\nconst searchText = ref(\"\");\nconst selectedCodes = ref<string[]>([]);\n\nconst filtered = computed(() => {\n  const keyword = searchText.value.trim().toLowerCase();\n  if (!keyword) return props.materials;\n  return props.materials.filter(\n    (m) =>\n      m.material_code.toLowerCase().includes(keyword) ||\n      m.material_name.toLowerCase().includes(keyword),\n  );\n});\n\nfunction addSelected() {\n  const selected = props.materials.filter((m) =>\n    selectedCodes.value.includes(m.material_code),\n  );\n  emit(\"add\", selected);\n  emit(\"update:visible\", false);\n}\n</script>\n\n<style scoped>\n.popup-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n.popup-content {\n  background: white;\n  padding: 24px;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 900px;\n  max-height: 85vh;\n  overflow: auto;\n}\n.popup-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n.search-input {\n  width: 300px;\n  padding: 6px;\n  font-size: 14px;\n}\n.material-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n.material-table th,\n.material-table td {\n  border: 1px solid #ccc;\n  padding: 8px;\n  text-align: center;\n}\n.popup-footer {\n  text-align: right;\n  margin-top: 10px;\n}\n.btn {\n  padding: 6px 12px;\n  font-size: 14px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-left: 10px;\n}\n.btn.save {\n  background-color: #2f80ed;\n  color: white;\n}\n</style>\n","<template>\n  <div v-if=\"visible\" class=\"popup-overlay\">\n    <div class=\"popup-content wide\">\n      <div class=\"popup-header\">\n        <div>\n          <button class=\"btn add\" @click=\"materialSearchVisible = true\">\n            재료추가\n          </button>\n          <button class=\"btn delete\" @click=\"$emit('deleteSelectedMaterials')\">\n            재료삭제\n          </button>\n        </div>\n      </div>\n\n      <table class=\"material-table\">\n        <thead>\n          <tr>\n            <th>\n              <input type=\"checkbox\" disabled />\n            </th>\n            <th>자재코드</th>\n            <th>자재명</th>\n            <th>단위</th>\n            <th>투입량</th>\n            <th>담당자</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(row, index) in materialList\" :key=\"index\">\n            <td>\n              <input v-model=\"row.selected\" type=\"checkbox\" />\n            </td>\n            <td>\n              <select\n                v-model=\"row.material_code\"\n                @change=\"$emit('materialCodeChange', row)\"\n              >\n                <option disabled value=\"\">자재 선택</option>\n                <option\n                  v-for=\"item in materialOptions\"\n                  :key=\"item.material_code\"\n                  :value=\"item.material_code\"\n                >\n                  {{ item.material_code }}\n                </option>\n              </select>\n            </td>\n            <td>{{ row.material_name }}</td>\n            <td>{{ row.material_unit }}</td>\n            <td>{{ row.usage_qty }}</td>\n            <td>\n              <input v-model=\"row.responsible\" type=\"text\" />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"popup-footer\">\n        <button class=\"btn save\" @click=\"$emit('save')\">저장</button>\n        <button class=\"btn\" @click=\"$emit('update:visible', false)\">\n          취소\n        </button>\n      </div>\n\n      <MaterialAddPopup\n        v-if=\"materialSearchVisible\"\n        :visible=\"materialSearchVisible\"\n        :materials=\"materialOptions\"\n        @update:visible=\"materialSearchVisible = $event\"\n        @add=\"handleMaterialAdd\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { defineProps, defineEmits, ref } from \"vue\";\nimport MaterialAddPopup from \"../modals/MaterialAddPopup.vue\";\nimport type { MaterialRow, MaterialOption } from \"@/types\";\n\nconst props = defineProps<{\n  visible: boolean;\n  processCode: string;\n  productCode: string;\n  materialOptions: MaterialOption[];\n  materialList: MaterialRow[];\n  bomCode: string;\n}>();\n\nconst emit = defineEmits([\n  \"update:visible\",\n  \"save\",\n  \"materialCodeChange\",\n  \"addMaterial\",\n  \"deleteSelectedMaterials\",\n]);\n\nconst materialSearchVisible = ref(false);\n\nfunction handleMaterialAdd(selected: MaterialOption[]) {\n  for (const item of selected) {\n    props.materialList.push({\n      process_code: props.processCode,\n      material_code: item.material_code,\n      material_name: item.material_name,\n      material_unit: item.material_unit,\n      BOM_code: props.bomCode,\n      usage_qty: item.usage_qty ?? 0,\n      responsible: \"\",\n      selected: false,\n    });\n  }\n}\n</script>\n\n<style scoped>\n.popup-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.popup-content {\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  min-width: 300px;\n}\n\n.popup-content.wide {\n  min-width: 60%;\n  max-width: 800px;\n}\n\n.popup-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.material-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.material-table th,\n.material-table td {\n  border: 1px solid #ccc;\n  padding: 8px;\n  text-align: center;\n}\n\n.popup-footer {\n  text-align: center;\n}\n\n.btn {\n  padding: 6px 12px;\n  font-size: 14px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn.save {\n  background-color: #2f80ed;\n  color: white;\n}\n\n.btn.delete {\n  background-color: #eb5757;\n  color: white;\n}\n\n.btn.add {\n  background-color: #2f80ed;\n  color: white;\n}\n</style>\n","<template>\n  <div class=\"process-page\">\n    <h2 class=\"title\">공정 흐름도 관리</h2>\n\n    <!-- 제품 검색 -->\n    <div class=\"product-search va-row va-gap-2 va-items-center\">\n      <label>제품코드: </label>\n      <input v-model=\"search.product_code\" placeholder=\"제품코드 입력\" />\n\n      <label>제품명: </label>\n      <input v-model=\"search.product_name\" placeholder=\"제품명 입력\" />\n\n      <label>규격:</label>\n      <input v-model=\"search.product_stand\" placeholder=\"규격 입력\" />\n\n      <button class=\"btn search\" @click=\"handleProductSearch\">검색</button>\n      <button class=\"btn reset\" @click=\"resetSearch\">초기화</button>\n      <button class=\"btn save\" @click=\"saveProcesses\">저장</button>\n    </div>\n\n    <div class=\"times\">\n      <span class=\"product-label\">총 소요시간: {{ totalProcessTime }}분</span>\n    </div>\n\n    <!-- 공정 목록 -->\n    <div class=\"process-table\">\n      <div class=\"table-header\">\n        <h3>공정순서</h3>\n        <div>\n          <button class=\"btn add\" @click=\"addProcess\">공정추가</button>\n          <button class=\"btn delete\" @click=\"deleteSelectedProcesses\">\n            공정삭제\n          </button>\n        </div>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>\n              <input type=\"checkbox\" disabled />\n            </th>\n            <th>순번</th>\n            <th>예상소요시간</th>\n            <th>시험작업</th>\n            <th>설비유형</th>\n            <th>상세추가</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(process, index) in processes\" :key=\"index\">\n            <td>\n              <input v-model=\"process.selected\" type=\"checkbox\" />\n            </td>\n            <td>{{ index + 1 }}</td>\n            <td>\n              <input\n                v-model=\"process.process_time\"\n                class=\"time-input\"\n                placeholder=\"예: 60분\"\n              />\n            </td>\n            <td>\n              <select v-model=\"process.process_int\" class=\"name-input\">\n                <option disabled value=\"\">공정 명</option>\n                <option\n                  v-for=\"item in processIntList\"\n                  :key=\"item.process_int\"\n                  :value=\"item.process_int\"\n                >\n                  {{ item.process_name }}\n                </option>\n              </select>\n            </td>\n            <td>\n              <select\n                v-if=\"equipmentCodes.length\"\n                v-model=\"process.code_value\"\n                class=\"equipment-select\"\n              >\n                <option disabled value=\"\">선택</option>\n                <option\n                  v-for=\"item in equipmentCodes\"\n                  :key=\"item.value\"\n                  :value=\"item.value\"\n                >\n                  {{ item.label }}\n                </option>\n              </select>\n              <span v-else style=\"color: red\">🚫 설비 코드 없음</span>\n            </td>\n            <td>\n              <button\n                class=\"btn save\"\n                @click=\"handlePopupOpen(process.process_code, index)\"\n              >\n                상세추가\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- 팝업 컴포넌트 -->\n    <PopupDetail\n      v-if=\"popupVisible\"\n      :visible=\"popupVisible\"\n      :process-code=\"popupProcessCode\"\n      :product-code=\"popupProductCode\"\n      :material-options=\"materialOptions\"\n      :material-list=\"materialList\"\n      :bom-code=\"bomCode\"\n      @update:visible=\"popupVisible = $event\"\n      @save=\"saveMaterial\"\n      @material-code-change=\"onMaterialCodeChange\"\n      @add-material=\"addMaterial\"\n      @delete-selected-materials=\"deleteSelectedMaterials\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport PopupDetail from \"../modals/PopupDetail.vue\";\nimport axios from \"axios\";\nimport { onMounted, computed, ref, watch } from \"vue\";\n\ninterface Product {\n  product_code: string;\n  product_name: string;\n  product_stand: string;\n}\n\ninterface Process {\n  process_code: string;\n  process_time: string;\n  process_name: string;\n  code_value: string;\n  process_int: string;\n  selected?: boolean;\n}\n\ninterface ProcessPayload {\n  process_code: string;\n  process_name: string;\n  process_time: string;\n  process_seq: number;\n  product_code: string;\n  code_value: string;\n  process_group_code: string;\n  process_int: string;\n}\n\ninterface EquipmentCode {\n  value: string;\n  label: string;\n}\n\ninterface MaterialRow {\n  process_code: string;\n  material_code: string;\n  material_name: string;\n  material_unit: string;\n  BOM_code: string;\n  usage_qty: number;\n  responsible: string;\n  selected?: boolean;\n}\n\ninterface MaterialOption {\n  material_code: string;\n  material_name: string;\n  material_unit: string;\n  usage_qty: number;\n}\n\ninterface ProcessGroupPayload {\n  process_group_code: string;\n  product_code: string;\n}\n\nconst selectedProductCode = ref<string>(\"\");\nconst products = ref<Product[]>([]);\nconst processes = ref<Process[]>([]);\nconst equipmentCodes = ref<EquipmentCode[]>([]);\nconst popupVisible = ref(false);\nconst popupProcessCode = ref(\"\");\nconst materialList = ref<MaterialRow[]>([]);\nconst materialOptions = ref<MaterialOption[]>([]);\nconst popupProductCode = ref<string>(\"\");\nconst bomCode = ref(\"\");\n\nconst search = ref({\n  product_code: \"\",\n  product_name: \"\",\n  product_stand: \"\",\n});\n\nconst handleProductSearch = () => {\n  let found: Product | null = null;\n\n  // 우선 제품코드로 찾기\n  if (search.value.product_code) {\n    found =\n      products.value.find(\n        (p) => p.product_code === search.value.product_code,\n      ) ?? null;\n  }\n\n  // 아니면 제품명 + 규격으로 찾기\n  if (!found && search.value.product_name && search.value.product_stand) {\n    found =\n      products.value.find(\n        (p) =>\n          p.product_name === search.value.product_name &&\n          p.product_stand === search.value.product_stand,\n      ) ?? null;\n  }\n\n  if (!found) {\n    alert(\"해당 제품을 찾을 수 없습니다.\");\n    return;\n  }\n\n  // ✅ 작성 중 공정이 있고, 선택된 제품과 다른 경우 확인 알림\n  const isEditing = processes.value.length > 0;\n  const isDifferentProduct =\n    selectedProductCode.value &&\n    selectedProductCode.value !== found.product_code;\n\n  if (isEditing && isDifferentProduct) {\n    const confirmed = confirm(\n      \"현재 공정 정보를 작성 중입니다.\\n제품을 변경하시겠습니까?\",\n    );\n    if (!confirmed) {\n      return;\n    }\n  }\n\n  // ✅ 제품 변경 실행\n  selectedProductCode.value = found.product_code;\n};\n\nconst resetSearch = () => {\n  search.value = {\n    product_code: \"\",\n    product_name: \"\",\n    product_stand: \"\",\n  };\n  selectedProductCode.value = \"\";\n  processes.value = [];\n};\n\nconst processIntList = ref<{ process_int: string; process_name: string }[]>([]);\n\nconst fetchProcessInt = async () => {\n  try {\n    const res = await axios.get(\"/processInit\"); // 공정명 리스트 API\n    processIntList.value = res.data; // 👈 객체 배열 유지\n  } catch (err) {\n    console.error(\"❌ 공정 기본 목록 불러오기 실패:\", err);\n  }\n};\n\nconst fetchProducts = async () => {\n  try {\n    const res = await axios.get(\"/product\");\n    products.value = res.data;\n  } catch (err) {\n    console.log(\"❌ 제품 목록 조회 실패:\", err);\n  }\n};\n\nconst fetchEquipmentCodes = async () => {\n  try {\n    const res = await axios.get(\"/common-codes/?groups=0T\");\n    equipmentCodes.value = res.data[\"0T\"] || [];\n  } catch (err) {\n    console.error(\"❌ 설비유형 불러오기 실패:\", err);\n  }\n};\n\nconst fetchMaterials = async () => {\n  try {\n    const res = await axios.get(`/bom/processList/${popupProductCode.value}`);\n\n    materialOptions.value = res.data;\n    bomCode.value = res.data[0].bom_code;\n    console.log(\"자재:\", res.data);\n  } catch (err) {\n    console.log(\"❌ 자재 목록 조회 실패:\", err);\n  }\n};\n\nconst fetchProcess = async () => {\n  try {\n    const res = await axios.get(`/process/${selectedProductCode.value}`);\n    const fetched = res.data;\n\n    // process_int 역추적\n    processes.value = fetched.map((item: any) => {\n      const match = processIntList.value.find(\n        (pi) => pi.process_name === item.process_name,\n      );\n      return {\n        process_code: item.process_code,\n        process_time: item.process_time,\n        process_name: item.process_name,\n        code_value: item.code_value,\n        process_int: match?.process_int || \"\", // 없으면 빈값 처리\n        selected: false,\n      };\n    });\n  } catch (err) {\n    console.log(\"❌ 공정정보 조회 실패:\", err);\n  }\n};\n\nconst fetchProcessDetail = async () => {\n  try {\n    const res = await axios.get(`/processDetail/${popupProcessCode.value}`);\n    const fetchedDetails = res.data;\n\n    // material_code 기준으로 name, unit 채워 넣기\n    materialList.value = fetchedDetails.map((item: any) => {\n      const matched = materialOptions.value.find(\n        (opt) => opt.material_code === item.material_code,\n      );\n\n      return {\n        process_code: item.process_code || popupProcessCode.value,\n        material_code: item.material_code,\n        BOM_code: item.BOM_code || \"\", // 필요 시\n        usage_qty: item.usage_qty,\n        responsible: item.name,\n        material_name: matched?.material_name || \"\",\n        material_unit: matched?.material_unit || \"\",\n        selected: false,\n      };\n    });\n  } catch (err) {\n    console.log(\"❌ 상세정보 조회 실패:\", err);\n  }\n};\n\nwatch(popupProcessCode, (newCode) => {\n  if (newCode) {\n    fetchProcessDetail();\n  }\n});\n\nwatch(selectedProductCode, (newCode) => {\n  if (newCode) {\n    fetchProcess();\n  }\n});\n\nconst onMaterialCodeChange = (row: MaterialRow) => {\n  const selected = materialOptions.value.find(\n    (m) => m.material_code === row.material_code,\n  );\n  if (selected) {\n    row.material_name = selected.material_name;\n    row.material_unit = selected.material_unit;\n    row.usage_qty = selected.usage_qty;\n  }\n};\n\nconst totalProcessTime = computed(() => {\n  return processes.value.reduce((sum, p) => {\n    const time = parseInt(p.process_time.replace(/[^\\d]/g, \"\"));\n    return sum + (isNaN(time) ? 0 : time);\n  }, 0);\n});\n\nconst addProcess = () => {\n  processes.value.push({\n    process_code: \"\",\n    process_time: \"\",\n    process_name: \"\",\n    code_value: \"\",\n    process_int: \"\",\n    selected: false,\n  });\n};\n\nconst deleteSelectedProcesses = async () => {\n  for (const p of processes.value) {\n    if (p.selected && p.process_code) {\n      try {\n        await axios.delete(`/process/${p.process_code}`);\n        console.log(`🗑️ 서버에서 공정 삭제 완료: ${p.process_code}`);\n      } catch (err) {\n        console.error(`❌ 공정 삭제 실패: ${p.process_code}`, err);\n        alert(`공정 ${p.process_code} 삭제 실패!`);\n      }\n    }\n  }\n  // ✅ 선택된 항목은 모두 제거 (등록 전/후 상관없이)\n  processes.value = processes.value.filter((p) => !p.selected);\n};\n\nconst addMaterial = () => {\n  materialList.value.push({\n    process_code: \"\",\n    material_code: \"\",\n    material_name: \"\",\n    material_unit: \"\",\n    BOM_code: \"\",\n    usage_qty: 0,\n    responsible: \"\",\n    selected: false,\n  });\n};\n\nconst deleteSelectedMaterials = async () => {\n  for (const row of materialList.value) {\n    console.log(\"✅ 삭제 후보:\", row); // 이 로그로 값 제대로 들어오는지 확인\n    if (row.selected && row.process_code && row.material_code) {\n      try {\n        await axios.delete(\n          `/processDetail/${row.process_code}/${row.material_code}`,\n        );\n      } catch (err) {}\n    }\n  }\n  materialList.value = materialList.value.filter((row) => !row.selected);\n};\n\nconst saveMaterial = async (): Promise<void> => {\n  // 현재 공정에 해당하는 모든 자재 먼저 삭제\n  try {\n    await axios.delete(`/processDetail/${popupProcessCode.value}`);\n    console.log(`✅ ${popupProcessCode.value} 에 해당하는 기존 자재 삭제 완료`);\n  } catch (err) {\n    console.error(\"❌ 기존 자재 삭제 실패:\", err);\n    alert(\"기존 자재 삭제 중 오류 발생!\");\n    return;\n  }\n\n  // 새로운 자재 저장 (삭제 후 insert)\n  const payload = materialList.value.map((p) => ({\n    process_code: popupProcessCode.value,\n    material_code: p.material_code,\n    BOM_code: bomCode.value,\n    name: p.responsible,\n  }));\n\n  console.log(\"📦 저장할 재료 데이터:\", payload);\n\n  try {\n    const res = await axios.post(`/process/${popupProcessCode.value}`, payload);\n    if (res.data.isSuccessed === true) {\n      alert(\"모든 재료 등록 완료!\");\n      await fetchProcessDetail();\n    } else {\n      alert(\"등록 실패!\");\n    }\n  } catch (err) {\n    console.error(\"❌ 자재 등록 실패:\", err);\n    alert(\"서버 오류 발생!\");\n  }\n};\n\nconst saveProcesses = async (): Promise<void> => {\n  const insertList: ProcessPayload[] = [];\n  const updateList: ProcessPayload[] = [];\n\n  const group_code = `${selectedProductCode.value}-Process`;\n  const groupItem: ProcessGroupPayload = {\n    process_group_code: group_code,\n    product_code: selectedProductCode.value,\n  };\n\n  processes.value.forEach((p, idx) => {\n    const code = `${selectedProductCode.value}Process${idx + 1}`;\n\n    // 🧠 process_int로부터 process_name 동기화\n    const matched = processIntList.value.find(\n      (item) => item.process_int === p.process_int,\n    );\n    const name = matched?.process_name || \"\";\n\n    const payload: ProcessPayload = {\n      process_code: code,\n      process_name: name,\n      process_time: p.process_time,\n      process_seq: idx + 1,\n      code_value: p.code_value,\n      product_code: selectedProductCode.value,\n      process_group_code: group_code,\n      process_int: p.process_int,\n    };\n\n    if (!p.process_code) {\n      insertList.push(payload);\n    } else {\n      updateList.push(payload);\n    }\n  });\n\n  try {\n    const groupCheckRes = await axios.get(`/processG/${group_code}`);\n    const groupExists =\n      Array.isArray(groupCheckRes.data) && groupCheckRes.data.length > 0;\n\n    if (insertList.length > 0) {\n      if (!groupExists) {\n        const groupRes = await axios.post(\"/processG\", groupItem);\n        if (!groupRes.data.isSuccessed) throw new Error(\"공정 그룹 등록 실패\");\n      }\n\n      const processRes = await axios.post(\"/process\", insertList);\n      if (!processRes.data.isSuccessed) throw new Error(\"공정 등록 실패\");\n    }\n\n    for (const payload of updateList) {\n      try {\n        const res = await axios.put(`/process/${payload.process_code}`, [\n          payload,\n        ]);\n        if (!res.data.isSuccessed) {\n          console.warn(`⚠️ 수정 실패: ${payload.process_code}`);\n        }\n      } catch (err) {\n        console.error(`❌ 수정 중 오류: ${payload.process_code}`, err);\n        alert(`공정 수정 중 오류 발생: ${payload.process_code}`);\n      }\n    }\n\n    alert(\"공정 저장 완료!\");\n    await fetchProcess();\n  } catch (err) {\n    console.error(\"❌ 저장 실패:\", err);\n    alert(\"저장 중 오류 발생!\");\n  }\n};\n\nconst openPopup = (processCode: string, productCode: string): void => {\n  popupProcessCode.value = processCode;\n  popupProductCode.value = productCode;\n  popupVisible.value = true;\n  fetchMaterials();\n};\n\nconst handlePopupOpen = (processCode: string, index: number): void => {\n  if (!processCode) {\n    alert(\"공정을 먼저 저장해야 상세정보를 추가할 수 있습니다.\");\n    return;\n  }\n\n  const fullCode = `${selectedProductCode.value}Process${index + 1}`;\n  openPopup(fullCode, selectedProductCode.value);\n};\n\nonMounted(() => {\n  fetchProducts();\n  fetchEquipmentCodes();\n  fetchMaterials();\n  fetchProcess();\n  fetchProcessInt();\n});\n</script>\n\n<style scoped>\n.process-page {\n  padding: 30px;\n  font-family: \"Pretendard\", sans-serif;\n  background: #fff;\n}\n\n.times {\n  text-align: center;\n}\n\nh3 {\n  font-size: 24px;\n  font-weight: bold;\n}\n\nh2.title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.product-select {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.product-label {\n  font-size: 14px;\n  color: #333;\n}\n\n.btn {\n  padding: 6px 12px;\n  font-size: 14px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn.save {\n  background-color: #2f80ed;\n  color: white;\n}\n\n.btn.let {\n  background-color: #535658;\n  color: white;\n}\n\n.btn.delete {\n  background-color: #eb5757;\n  color: white;\n}\n\n.btn.add {\n  background-color: #2f80ed;\n  color: white;\n  font-weight: 500;\n}\n\n.process-table .table-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.process-table table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.process-table th,\n.process-table td {\n  border: 1px solid #e0e0e0;\n  padding: 10px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.time-input,\n.name-input,\n.equipment-select {\n  width: 100%;\n  padding: 6px;\n  font-size: 14px;\n  box-sizing: border-box;\n}\n\n.btn.search {\n  background-color: #27ae60;\n  color: white;\n}\n\n.btn.reset {\n  background-color: #7f8c8d;\n  color: white;\n}\n</style>\n"],"names":["props","__props","emit","__emit","searchText","ref","selectedCodes","filtered","computed","keyword","m","addSelected","selected","visible","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","$event","_hoisted_4","_Fragment","_renderList","item","_toDisplayString","_hoisted_6","$emit","materialSearchVisible","handleMaterialAdd","materialList","row","index","_vModelCheckbox","materialOptions","_hoisted_7","_vModelSelect","_vModelText","_hoisted_9","_createBlock","MaterialAddPopup","selectedProductCode","products","processes","equipmentCodes","popupVisible","popupProcessCode","popupProductCode","bomCode","search","handleProductSearch","found","p","isEditing","isDifferentProduct","resetSearch","processIntList","fetchProcessInt","res","axios","err","fetchProducts","fetchEquipmentCodes","fetchMaterials","fetchProcess","fetched","match","pi","fetchProcessDetail","fetchedDetails","matched","opt","watch","newCode","onMaterialCodeChange","totalProcessTime","sum","time","addProcess","deleteSelectedProcesses","addMaterial","deleteSelectedMaterials","saveMaterial","payload","saveProcesses","insertList","updateList","group_code","groupItem","idx","code","name","groupCheckRes","groupExists","openPopup","processCode","productCode","handlePopupOpen","fullCode","onMounted","_hoisted_5","process","_hoisted_11","_hoisted_12","_hoisted_13","PopupDetail"],"mappings":"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"}