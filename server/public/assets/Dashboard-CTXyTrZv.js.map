{"version":3,"file":"Dashboard-CTXyTrZv.js","sources":["../../../client/src/pages/admin/dashboard/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <h1 class=\"dashboard-title\">제조업 통합 대시보드</h1>\r\n\r\n    <!-- 로딩 상태 -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <p>대시보드 데이터를 불러오는 중...</p>\r\n    </div>\r\n\r\n    <!-- 에러 상태 -->\r\n    <div v-else-if=\"error\" class=\"error-container\">\r\n      <div class=\"error-message\">\r\n        <h3>오류 발생</h3>\r\n        <p>{{ error }}</p>\r\n        <button @click=\"fetchDashboardData\" class=\"retry-button\">다시 시도</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 메인 대시보드 콘텐츠 -->\r\n    <div v-else class=\"dashboard-content\">\r\n      <!-- 통계 카드 섹션 -->\r\n      <div class=\"stats-section\">\r\n        <div class=\"stats-grid\">\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-label\">총 주문 건수</div>\r\n              <div class=\"stat-sublabel\">(이번 달)</div>\r\n              <div class=\"stat-value\">{{ dashboardData.totalOrders }}</div>\r\n              <div class=\"stat-unit\">건</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-label\">설비 가동률</div>\r\n              <div class=\"stat-sublabel\">(현재)</div>\r\n              <div class=\"stat-value\">{{ dashboardData.equipmentEfficiency }}</div>\r\n              <div class=\"stat-unit\">%</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-label\">평균 납기일</div>\r\n              <div class=\"stat-sublabel\">(이번 달)</div>\r\n              <div class=\"stat-value\">{{ dashboardData.avgDeliveryDays }}</div>\r\n              <div class=\"stat-unit\">일</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-label\">품질 합격률</div>\r\n              <div class=\"stat-sublabel\">(최근 7일)</div>\r\n              <div class=\"stat-value\">{{ dashboardData.qualityPassRate }}</div>\r\n              <div class=\"stat-unit\">%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 차트 섹션 -->\r\n      <div class=\"charts-section\">\r\n        <!-- 첫 번째 행: 월별 생산량 & 설비 가동률 추이 -->\r\n        <div class=\"chart-row\">\r\n          <div class=\"chart-card\">\r\n            <div class=\"chart-header\">\r\n              <h3 class=\"chart-title\">월별 생산량 추이</h3>\r\n              <div class=\"chart-subtitle\">최근 6개월</div>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <canvas ref=\"productionChart\" width=\"400\" height=\"200\"></canvas>\r\n              <div v-if=\"productionData.length === 0\" class=\"no-data\">\r\n                생산량 데이터가 없습니다\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"chart-card\">\r\n            <div class=\"chart-header\">\r\n              <h3 class=\"chart-title\">설비 가동률 추이</h3>\r\n              <div class=\"chart-subtitle\">최근 6개월</div>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <canvas ref=\"equipmentChart\" width=\"400\" height=\"200\"></canvas>\r\n              <div v-if=\"equipmentData.length === 0\" class=\"no-data\">\r\n                설비 가동률 데이터가 없습니다\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 두 번째 행: 제품별 주문 비율 & 공정별 현황 -->\r\n        <div class=\"chart-row\">\r\n          <div class=\"chart-card\">\r\n            <div class=\"chart-header\">\r\n              <h3 class=\"chart-title\">제품별 주문 비율</h3>\r\n              <div class=\"chart-subtitle\">이번 달 기준</div>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <canvas ref=\"productChart\" width=\"400\" height=\"350\"></canvas>\r\n              <div v-if=\"productRatioData.length === 0\" class=\"no-data\">\r\n                제품별 데이터가 없습니다\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"chart-card\">\r\n            <div class=\"chart-header\">\r\n              <h3 class=\"chart-title\">공정별 현황</h3>\r\n              <div class=\"chart-subtitle\">최근 7일 기준</div>\r\n            </div>\r\n            <div class=\"process-status\">\r\n              <div class=\"process-item\">\r\n                <div class=\"process-label\">자재 준비</div>\r\n                <div class=\"process-bar\">\r\n                  <div class=\"process-fill\" :style=\"{ width: `${processStatus.material}%` }\"></div>\r\n                </div>\r\n                <div class=\"process-value\">{{ processStatus.material }}%</div>\r\n              </div>\r\n              \r\n              <div class=\"process-item\">\r\n                <div class=\"process-label\">생산</div>\r\n                <div class=\"process-bar\">\r\n                  <div class=\"process-fill\" :style=\"{ width: `${processStatus.production}%` }\"></div>\r\n                </div>\r\n                <div class=\"process-value\">{{ processStatus.production }}%</div>\r\n              </div>\r\n              \r\n              <div class=\"process-item\">\r\n                <div class=\"process-label\">품질검사</div>\r\n                <div class=\"process-bar\">\r\n                  <div class=\"process-fill\" :style=\"{ width: `${processStatus.quality}%` }\"></div>\r\n                </div>\r\n                <div class=\"process-value\">{{ processStatus.quality }}%</div>\r\n              </div>\r\n              \r\n              <div class=\"process-item\">\r\n                <div class=\"process-label\">포장</div>\r\n                <div class=\"process-bar\">\r\n                  <div class=\"process-fill\" :style=\"{ width: `${processStatus.packaging}%` }\"></div>\r\n                </div>\r\n                <div class=\"process-value\">{{ processStatus.packaging }}%</div>\r\n              </div>\r\n              \r\n              <div class=\"process-item\">\r\n                <div class=\"process-label\">출하</div>\r\n                <div class=\"process-bar\">\r\n                  <div class=\"process-fill\" :style=\"{ width: `${processStatus.shipping}%` }\"></div>\r\n                </div>\r\n                <div class=\"process-value\">{{ processStatus.shipping }}%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, reactive, ref, computed } from 'vue'\r\nimport axios from 'axios'\r\n\r\n// 타입 정의\r\ninterface DashboardStats {\r\n  totalOrders: number\r\n  equipmentEfficiency: number\r\n  avgDeliveryDays: number\r\n  qualityPassRate: number\r\n}\r\n\r\ninterface ProductionData {\r\n  month: string\r\n  value: number\r\n}\r\n\r\ninterface ProductRatio {\r\n  name: string\r\n  value: number\r\n  color: string\r\n}\r\n\r\ninterface EquipmentData {\r\n  month: string\r\n  efficiency: number\r\n}\r\n\r\ninterface ProcessStatus {\r\n  material: number\r\n  production: number\r\n  quality: number\r\n  packaging: number\r\n  shipping: number\r\n}\r\n\r\ninterface DashboardResponse {\r\n  stats: DashboardStats\r\n  productionData: ProductionData[]\r\n  equipmentData: EquipmentData[]\r\n  productRatios: ProductRatio[]\r\n  processStatus: ProcessStatus\r\n}\r\n\r\n// 컴포넌트 설정\r\nconst productionChart = ref<HTMLCanvasElement>()\r\nconst equipmentChart = ref<HTMLCanvasElement>()\r\nconst productChart = ref<HTMLCanvasElement>()\r\n\r\n// 상태 관리\r\nconst loading = ref(true)\r\nconst error = ref<string | null>(null)\r\nconst lastUpdatedTime = ref<Date>(new Date())\r\n\r\n// 대시보드 데이터\r\nconst dashboardData = reactive<DashboardStats>({\r\n  totalOrders: 0,\r\n  equipmentEfficiency: 0,\r\n  avgDeliveryDays: 0,\r\n  qualityPassRate: 0\r\n})\r\n\r\n// 차트 데이터\r\nconst productionData = ref<ProductionData[]>([])\r\nconst equipmentData = ref<EquipmentData[]>([])\r\nconst productRatioData = ref<ProductRatio[]>([])\r\nconst processStatus = reactive<ProcessStatus>({\r\n  material: 0,\r\n  production: 0,\r\n  quality: 0,\r\n  packaging: 0,\r\n  shipping: 0\r\n})\r\n\r\n// 계산된 속성\r\nconst lastUpdated = computed(() => {\r\n  return lastUpdatedTime.value.toLocaleString('ko-KR')\r\n})\r\n\r\n// API 호출 함수 (완전 공개 - 인증 없음)\r\nconst fetchDashboardData = async () => {\r\n  try {\r\n    loading.value = true\r\n    error.value = null\r\n    \r\n    console.log('대시보드 데이터 요청 시작 (공개 접근)...')\r\n    \r\n    // 완전 공개 요청 - 인증 헤더 완전 제거\r\n    const response = await axios.get<DashboardResponse>('/dashboard/summary', {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      timeout: 10000,\r\n      withCredentials: false\r\n    })\r\n    \r\n    const data = response.data\r\n    \r\n    console.log('받은 데이터 (공개):', data)\r\n    \r\n    // 통계 데이터 업데이트\r\n    Object.assign(dashboardData, data.stats)\r\n    \r\n    // 차트 데이터 업데이트\r\n    productionData.value = data.productionData || []\r\n    equipmentData.value = data.equipmentData || []\r\n    productRatioData.value = data.productRatios || []\r\n    \r\n    // 공정 상태 업데이트\r\n    Object.assign(processStatus, data.processStatus)\r\n    \r\n    // 마지막 업데이트 시간 갱신\r\n    lastUpdatedTime.value = new Date()\r\n    \r\n    console.log('대시보드 데이터 로드 완료 (공개 접근)')\r\n    \r\n  } catch (err: any) {\r\n    console.error('대시보드 데이터 로드 실패:', err)\r\n    \r\n    // 자세한 에러 정보\r\n    if (err.response) {\r\n      console.error('에러 상세 정보:')\r\n      console.error('- 상태 코드:', err.response.status)\r\n      console.error('- 상태 텍스트:', err.response.statusText)\r\n      console.error('- 응답 데이터:', err.response.data)\r\n      \r\n      if (err.response.status === 401) {\r\n        error.value = '대시보드 접근이 차단되었습니다. 서버 설정을 확인해주세요.'\r\n      } else if (err.response.status === 404) {\r\n        error.value = '대시보드 API를 찾을 수 없습니다.'\r\n      } else {\r\n        error.value = `서버 오류가 발생했습니다. (${err.response.status})`\r\n      }\r\n    } else if (err.request) {\r\n      console.error('- 네트워크 오류:', err.request)\r\n      error.value = '서버에 연결할 수 없습니다. 네트워크를 확인해주세요.'\r\n    } else {\r\n      console.error('- 설정 오류:', err.message)\r\n      error.value = `요청 설정 오류: ${err.message}`\r\n    }\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 차트 렌더링 함수들\r\nconst drawLineChart = (canvas: HTMLCanvasElement, data: ProductionData[], label: string) => {\r\n  const ctx = canvas.getContext('2d')\r\n  if (!ctx || data.length === 0) return\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n  \r\n  const padding = 50\r\n  const chartWidth = canvas.width - padding * 2\r\n  const chartHeight = canvas.height - padding * 2\r\n  \r\n  // 배경\r\n  ctx.fillStyle = '#fafafa'\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n  \r\n  // 격자\r\n  ctx.strokeStyle = '#e0e0e0'\r\n  ctx.lineWidth = 1\r\n  for (let i = 0; i <= 5; i++) {\r\n    const y = padding + (chartHeight / 5) * i\r\n    ctx.beginPath()\r\n    ctx.moveTo(padding, y)\r\n    ctx.lineTo(canvas.width - padding, y)\r\n    ctx.stroke()\r\n  }\r\n  \r\n  // 데이터 라인\r\n  const maxValue = Math.max(...data.map(d => d.value))\r\n  const minValue = Math.min(...data.map(d => d.value))\r\n  const range = maxValue - minValue || 1\r\n  \r\n  ctx.strokeStyle = '#4ECDC4'\r\n  ctx.lineWidth = 3\r\n  ctx.beginPath()\r\n  \r\n  data.forEach((item, index) => {\r\n    const x = padding + (chartWidth / (data.length - 1)) * index\r\n    const y = padding + chartHeight - ((item.value - minValue) / range) * chartHeight\r\n    \r\n    if (index === 0) {\r\n      ctx.moveTo(x, y)\r\n    } else {\r\n      ctx.lineTo(x, y)\r\n    }\r\n    \r\n    // 데이터 포인트\r\n    ctx.fillStyle = '#4ECDC4'\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, 5, 0, Math.PI * 2)\r\n    ctx.fill()\r\n    \r\n    // 값 표시\r\n    ctx.fillStyle = '#333'\r\n    ctx.font = '12px Arial'\r\n    ctx.textAlign = 'center'\r\n    ctx.fillText(item.value.toLocaleString(), x, y - 10)\r\n    \r\n    // 월 표시\r\n    ctx.fillText(`${item.month}월`, x, canvas.height - 10)\r\n  })\r\n  \r\n  ctx.stroke()\r\n}\r\n\r\nconst drawBarChart = (canvas: HTMLCanvasElement, data: any[]) => {\r\n  const ctx = canvas.getContext('2d')\r\n  if (!ctx || data.length === 0) return\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n  \r\n  const padding = 50\r\n  const chartWidth = canvas.width - padding * 2\r\n  const chartHeight = canvas.height - padding * 2\r\n  \r\n  // 배경\r\n  ctx.fillStyle = '#fafafa'\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n  \r\n  const maxValue = Math.max(...data.map(d => d.efficiency || d), 100)\r\n  const barWidth = chartWidth / data.length * 0.6\r\n  const barSpacing = chartWidth / data.length * 0.4\r\n  \r\n  data.forEach((item, index) => {\r\n    const value = item.efficiency || item\r\n    const month = item.month || (index + 1)\r\n    \r\n    const barHeight = (value / maxValue) * chartHeight\r\n    const x = padding + index * (barWidth + barSpacing) + barSpacing / 2\r\n    const y = padding + chartHeight - barHeight\r\n    \r\n    // 막대\r\n    ctx.fillStyle = value >= 90 ? '#4CAF50' : value >= 70 ? '#FF9800' : '#F44336'\r\n    ctx.fillRect(x, y, barWidth, barHeight)\r\n    \r\n    // 값 표시\r\n    ctx.fillStyle = '#333'\r\n    ctx.font = '12px Arial'\r\n    ctx.textAlign = 'center'\r\n    ctx.fillText(`${value}%`, x + barWidth / 2, y - 5)\r\n    \r\n    // 월 표시\r\n    ctx.fillText(`${month}월`, x + barWidth / 2, canvas.height - 10)\r\n  })\r\n}\r\n\r\nconst drawDoughnutChart = (canvas: HTMLCanvasElement, data: ProductRatio[]) => {\r\n  const ctx = canvas.getContext('2d')\r\n  if (!ctx || data.length === 0) return\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n  \r\n  // 차트와 범례 공간 조정\r\n  const centerX = canvas.width / 2\r\n  const centerY = canvas.height / 2 - 30\r\n  const radius = Math.min(centerX, centerY) - 60\r\n  const innerRadius = radius * 0.6\r\n  \r\n  const total = data.reduce((sum, item) => sum + item.value, 0)\r\n  let currentAngle = -Math.PI / 2\r\n  \r\n  // 도넛 차트 그리기\r\n  data.forEach(item => {\r\n    const sliceAngle = (item.value / total) * 2 * Math.PI\r\n    \r\n    // 도넛 조각\r\n    ctx.beginPath()\r\n    ctx.arc(centerX, centerY, radius, currentAngle, currentAngle + sliceAngle)\r\n    ctx.arc(centerX, centerY, innerRadius, currentAngle + sliceAngle, currentAngle, true)\r\n    ctx.closePath()\r\n    ctx.fillStyle = item.color\r\n    ctx.fill()\r\n    \r\n    currentAngle += sliceAngle\r\n  })\r\n  \r\n  // 범례를 차트 아래쪽에 배치\r\n  const legendStartY = centerY + radius + 20\r\n  const legendItemHeight = 18\r\n  const maxItemsPerRow = 2\r\n  \r\n  data.forEach((item, index) => {\r\n    const row = Math.floor(index / maxItemsPerRow)\r\n    const col = index % maxItemsPerRow\r\n    \r\n    const legendX = 20 + col * 180\r\n    const legendY = legendStartY + row * legendItemHeight\r\n    \r\n    // 범례가 캔버스를 벗어나지 않도록 체크\r\n    if (legendY + legendItemHeight < canvas.height) {\r\n      // 색상 박스\r\n      ctx.fillStyle = item.color\r\n      ctx.fillRect(legendX, legendY, 12, 12)\r\n      \r\n      // 텍스트\r\n      ctx.fillStyle = '#333'\r\n      ctx.font = '11px Arial'\r\n      ctx.fillText(`${item.name} (${item.value}%)`, legendX + 18, legendY + 9)\r\n    }\r\n  })\r\n}\r\n\r\n// 컴포넌트 초기화\r\nonMounted(async () => {\r\n  console.log('Dashboard 컴포넌트 마운트')\r\n  \r\n  // 대시보드 데이터 로드\r\n  await fetchDashboardData()\r\n  \r\n  // 데이터 로드 완료 후 차트 렌더링\r\n  if (!loading.value && !error.value) {\r\n    setTimeout(() => {\r\n      renderCharts()\r\n    }, 100)\r\n  }\r\n})\r\n\r\n// 차트 렌더링 함수\r\nconst renderCharts = () => {\r\n  console.log('차트 렌더링 시작')\r\n  \r\n  if (productionChart.value && productionData.value.length > 0) {\r\n    drawLineChart(productionChart.value, productionData.value, '생산량')\r\n  }\r\n  if (equipmentChart.value && equipmentData.value.length > 0) {\r\n    drawBarChart(equipmentChart.value, equipmentData.value)\r\n  }\r\n  if (productChart.value && productRatioData.value.length > 0) {\r\n    drawDoughnutChart(productChart.value, productRatioData.value)\r\n  }\r\n  \r\n  console.log('차트 렌더링 완료')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.dashboard-title {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.dashboard-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n}\r\n\r\n/* 로딩 상태 */\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 80px 20px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #007bff;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 에러 상태 */\r\n.error-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 40px 20px;\r\n}\r\n\r\n.error-message {\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  text-align: center;\r\n  max-width: 500px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.error-message h3 {\r\n  color: #dc3545;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.retry-button {\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.retry-button:hover {\r\n  background: #0056b3;\r\n}\r\n\r\n/* 통계 카드 섹션 */\r\n.stats-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: box-shadow 0.2s;\r\n}\r\n\r\n.stat-card:hover {\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.stat-info {\r\n  flex: 1;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  font-weight: 500;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.stat-sublabel {\r\n  font-size: 0.75rem;\r\n  color: #999;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  color: #333;\r\n  line-height: 1;\r\n}\r\n\r\n.stat-unit {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  margin-top: 2px;\r\n}\r\n\r\n/* 차트 섹션 */\r\n.charts-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.chart-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n}\r\n\r\n.chart-card {\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n\r\n.chart-header {\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.chart-subtitle {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n}\r\n\r\n.chart-container {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 320px;\r\n}\r\n\r\n.no-data {\r\n  color: #999;\r\n  font-style: italic;\r\n  text-align: center;\r\n  padding: 30px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* 공정별 현황 */\r\n.process-status {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  padding: 5px 0;\r\n}\r\n\r\n.process-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.process-label {\r\n  min-width: 100px;\r\n  font-size: 0.9rem;\r\n  color: #333;\r\n  font-weight: 500;\r\n}\r\n\r\n.process-bar {\r\n  flex: 1;\r\n  height: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.process-fill {\r\n  height: 100%;\r\n  background: #007bff;\r\n  border-radius: 10px;\r\n  transition: width 0.5s ease;\r\n}\r\n\r\n.process-value {\r\n  min-width: 40px;\r\n  font-size: 0.85rem;\r\n  font-weight: 600;\r\n  color: #333;\r\n  text-align: right;\r\n}\r\n\r\n.last-updated {\r\n  color: #666;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n/* 반응형 */\r\n@media (max-width: 1200px) {\r\n  .chart-row {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .dashboard-container {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .stats-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .stat-card {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .chart-card {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .process-label {\r\n    min-width: 80px;\r\n  }\r\n}\r\n</style>"],"names":["productionChart","ref","equipmentChart","productChart","loading","error","lastUpdatedTime","dashboardData","reactive","productionData","equipmentData","productRatioData","processStatus","computed","fetchDashboardData","data","axios","err","drawLineChart","canvas","label","ctx","padding","chartWidth","chartHeight","i","y","maxValue","d","minValue","range","item","index","x","drawBarChart","barWidth","barSpacing","value","month","barHeight","drawDoughnutChart","centerX","centerY","radius","innerRadius","total","sum","currentAngle","sliceAngle","legendStartY","legendItemHeight","maxItemsPerRow","row","legendX","legendY","onMounted","renderCharts","_openBlock","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_toDisplayString","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_normalizeStyle","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48"],"mappings":"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"}