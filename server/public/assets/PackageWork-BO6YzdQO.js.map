{"version":3,"file":"PackageWork-BO6YzdQO.js","sources":["../../../client/src/pages/package/PackageWork.vue"],"sourcesContent":["<template>\n  <div class=\"package-work-container\">\n    <!-- 헤더 -->\n    <div class=\"work-header\">\n      <nav class=\"breadcrumb\">\n        <span class=\"breadcrumb-item\">Home</span>\n        <span class=\"breadcrumb-separator\">/</span>\n        <span class=\"breadcrumb-item\">포장</span>\n        <span class=\"breadcrumb-separator\">/</span>\n        <span\n          class=\"breadcrumb-item\"\n          style=\"cursor: pointer; color: #3b82f6\"\n          @click=\"goBackToLineSelection\"\n          >포장 라인 선택</span\n        >\n        <span class=\"breadcrumb-separator\">/</span>\n        <span class=\"breadcrumb-item active\">포장 작업 수행</span>\n      </nav>\n      <div class=\"header-info\">\n        <div class=\"header-left\">\n          <h1>\n            {{ workInfo.lineName }} - {{ getWorkflowStepText() }} 작업 수행\n          </h1>\n          <div class=\"header-meta\">\n            <span\n              class=\"line-type-badge\"\n              :class=\"workInfo.lineType.toLowerCase()\"\n            >\n              {{ workInfo.lineType === \"INNER\" ? \"내포장\" : \"외포장\" }}\n            </span>\n            <span class=\"work-status-badge\" :class=\"workStatus.toLowerCase()\">\n              {{ getWorkStatusText(workStatus) }}\n            </span>\n            <span v-if=\"workflowInfo.step === 'OUTER'\" class=\"workflow-badge\">\n              2단계: 최종 포장\n            </span>\n          </div>\n        </div>\n        <div v-if=\"workflowInfo.step\" class=\"workflow-indicator\">\n          <div\n            class=\"workflow-step\"\n            :class=\"{ completed: workflowInfo.innerCompleted }\"\n          >\n            <div class=\"step-text\">내포장</div>\n          </div>\n          <div class=\"workflow-arrow\">→</div>\n          <div\n            class=\"workflow-step\"\n            :class=\"{ active: workflowInfo.step === 'OUTER' }\"\n          >\n            <div class=\"step-text\">외포장</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 디버깅 패널 -->\n    <div v-if=\"showDebugPanel\" class=\"debug-panel\">\n      <div class=\"debug-header\">\n        <h3>실제 데이터 디버깅</h3>\n        <button class=\"debug-close\" @click=\"showDebugPanel = false\">\n          닫기\n        </button>\n      </div>\n      <div class=\"debug-content\">\n        <div class=\"debug-section\">\n          <h4>테이블 구조 정보</h4>\n          <div v-if=\"debugInfo.tableStructure\" class=\"debug-info\">\n            <p>\n              <strong>컬럼 수:</strong>\n              {{ debugInfo.tableStructure.column_count }}\n            </p>\n            <p>\n              <strong>전체 행 수:</strong>\n              {{ debugInfo.tableStructure.total_rows }}\n            </p>\n            <details>\n              <summary>\n                컬럼 목록 ({{\n                  Object.keys(debugInfo.tableStructure.columns || {}).length\n                }}개)\n              </summary>\n              <ul class=\"column-list\">\n                <li\n                  v-for=\"(colInfo, colName) in debugInfo.tableStructure.columns\"\n                  :key=\"colName\"\n                >\n                  <strong>{{ colName }}</strong> ({{ colInfo.type }})\n                </li>\n              </ul>\n            </details>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>API 응답 정보</h4>\n          <div v-if=\"debugInfo.lastApiResponse\" class=\"debug-info\">\n            <p>\n              <strong>조회된 작업 수:</strong>\n              {{ debugInfo.lastApiResponse.count || 0 }}\n            </p>\n            <p>\n              <strong>필터 조건:</strong>\n              {{ JSON.stringify(debugInfo.lastApiResponse.filters || {}) }}\n            </p>\n            <details v-if=\"debugInfo.lastApiResponse.metadata\">\n              <summary>메타데이터</summary>\n              <pre>{{\n                JSON.stringify(debugInfo.lastApiResponse.metadata, null, 2)\n              }}</pre>\n            </details>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>매핑 테스트</h4>\n          <div class=\"debug-actions\">\n            <button class=\"debug-btn\" @click=\"testTableStructure\">\n              테이블 구조 확인\n            </button>\n            <button class=\"debug-btn\" @click=\"testDataMapping\">\n              데이터 매핑 테스트\n            </button>\n            <button class=\"debug-btn\" @click=\"testFiltering\">\n              필터링 테스트\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"workflowInfo.step === 'OUTER' && workflowInfo.innerCompleted\"\n      class=\"workflow-guide\"\n    >\n      <div class=\"guide-content\">\n        <h3>외포장 작업 단계입니다</h3>\n        <p>\n          내포장 작업({{ workflowInfo.innerWorkNo }})이 완료되었습니다. 이제\n          최종 외포장 작업을 진행해주세요.\n        </p>\n        <div class=\"guide-stats\">\n          <span\n            >내포장 완료:\n            {{ formatTime(workflowInfo.innerCompletionTime) }}</span\n          >\n          <span v-if=\"workflowInfo.innerOutputQty > 0\" class=\"output-qty\">\n            완료수량: {{ formatNumber(workflowInfo.innerOutputQty) }}개 → 외포장\n            투입\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 메인 컨텐츠 -->\n    <div class=\"work-content\">\n      <div class=\"work-layout\">\n        <!-- 좌측: 작업 제어 및 진행 상황 -->\n        <div class=\"work-main\">\n          <div class=\"control-panel\">\n            <div class=\"panel-header\">\n              <h3>작업 제어</h3>\n              <button\n                class=\"debug-toggle\"\n                @click=\"showDebugPanel = !showDebugPanel\"\n              >\n                디버깅 {{ showDebugPanel ? \"숨김\" : \"표시\" }}\n              </button>\n            </div>\n\n            <div class=\"control-section\">\n              <div class=\"control-row\">\n                <!-- 작업번호 선택 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">\n                    작업번호 선택\n                    <span\n                      v-if=\"availableWorkOrders.length > 0\"\n                      class=\"available-count\"\n                    >\n                      ({{ availableWorkOrders.length }}개 사용가능)\n                    </span>\n                    <span class=\"line-info\">{{ workInfo.lineName }}</span>\n                  </label>\n\n                  <select\n                    v-model=\"selectedWorkOrder\"\n                    class=\"control-select\"\n                    :disabled=\"isWorking\"\n                    @change=\"onWorkOrderChange\"\n                  >\n                    <option value=\"\">\n                      {{ workInfo.lineName }}의 작업을 선택하세요\n                    </option>\n\n                    <!-- 준비 상태 작업 -->\n                    <optgroup\n                      v-if=\"readyWorks && readyWorks.length > 0\"\n                      label=\"시작 가능한 작업\"\n                    >\n                      <option\n                        v-for=\"work in readyWorks\"\n                        :key=\"work.work_order_no || Math.random()\"\n                        :value=\"work.work_order_no\"\n                        class=\"ready-option\"\n                      >\n                        {{ work.work_oder_no || \"작업번호없음\" }} -\n                        {{\n                          work.final_product_name ||\n                          work.product_name ||\n                          work.step_name ||\n                          \"제품명없음\"\n                        }}\n                        ({{\n                          formatNumber(\n                            work.order_qty ||\n                              work.target_qty ||\n                              work.input_qty ||\n                              1000,\n                          )\n                        }}개)\n                      </option>\n                    </optgroup>\n\n                    <!-- 진행중 작업 -->\n                    <optgroup\n                      v-if=\"workingWorks && workingWorks.length > 0\"\n                      label=\"진행중인 작업\"\n                    >\n                      <option\n                        v-for=\"work in workingWorks\"\n                        :key=\"work.work_order_no || Math.random()\"\n                        :value=\"work.work_order_no\"\n                        class=\"working-option\"\n                      >\n                        {{ work.work_order_no || \"작업번호없음\" }} -\n                        {{\n                          work.final_product_name ||\n                          work.product_name ||\n                          work.step_name ||\n                          \"제품명없음\"\n                        }}\n                        ({{ work.progress_rate || 0 }}% 완료)\n                      </option>\n                    </optgroup>\n\n                    <!-- 일시정지 작업 -->\n                    <optgroup\n                      v-if=\"pausedWorks && pausedWorks.length > 0\"\n                      label=\"일시정지/부분완료된 작업\"\n                    >\n                      <option\n                        v-for=\"work in pausedWorks\"\n                        :key=\"work.work_order_no || Math.random()\"\n                        :value=\"work.work_order_no\"\n                        class=\"paused-option\"\n                      >\n                        {{ work.work_order_no || \"작업번호없음\" }} -\n                        {{\n                          work.final_product_name ||\n                          work.product_name ||\n                          work.step_name ||\n                          \"제품명없음\"\n                        }}\n                        ({{ work.progress_rate || 0 }}% 완료 -\n                        {{ getWorkStatusText(work.step_status) }})\n                      </option>\n                    </optgroup>\n                  </select>\n\n                  <div\n                    v-if=\"availableWorkOrders.length === 0 && !loading\"\n                    class=\"no-work-message\"\n                  >\n                    <div>\n                      <div>\n                        <strong\n                          >{{ workInfo.lineName }}의\n                          {{\n                            workInfo.lineType === \"INNER\" ? \"내포장\" : \"외포장\"\n                          }}\n                          작업번호가 없습니다.</strong\n                        >\n                      </div>\n                      <div style=\"font-size: 12px; margin-top: 4px\">\n                        • 새로고침 버튼을 눌러보세요<br />\n                        • 또는 테이블 구조 확인이 필요할 수 있습니다<br />\n                        • 디버깅 패널에서 데이터를 확인해보세요\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    v-if=\"loading && loadingMessage.includes('작업번호')\"\n                    class=\"loading-work-message\"\n                  >\n                    <div>\n                      <strong\n                        >{{ workInfo.lineName }} 작업번호를 불러오는\n                        중...</strong\n                      >\n                      <div style=\"font-size: 12px; margin-top: 4px\">\n                        실제 데이터베이스에서 조회 중입니다.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- 지시량 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">지시량</label>\n                  <div class=\"control-display\">\n                    <span class=\"display-value\">{{\n                      formatNumber(currentWork.target_quantity)\n                    }}</span>\n                    <span class=\"display-unit\">개</span>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"control-row\">\n                <!-- 기투입량 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">기투입량</label>\n                  <div class=\"control-display\">\n                    <span\n                      class=\"display-value\"\n                      :class=\"{\n                        'workflow-linked':\n                          workInfo.lineType === 'OUTER' &&\n                          workflowInfo.innerOutputQty > 0,\n                      }\"\n                    >\n                      {{ formatNumber(currentWork.current_quantity) }}\n                    </span>\n                    <span class=\"display-unit\">개</span>\n                  </div>\n                </div>\n\n                <!-- 미투입량 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">미투입량</label>\n                  <div class=\"control-display\">\n                    <span\n                      class=\"display-value remaining-qty\"\n                      :class=\"{\n                        'remaining-qty-highlight': getRemainingQuantity() > 0,\n                      }\"\n                    >\n                      {{ formatNumber(currentWork.remaining_quantity) }}\n                    </span>\n                    <span class=\"display-unit\">개</span>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"control-row\">\n                <!-- 생산속도 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">생산속도 (개/초)</label>\n                  <select\n                    v-model.number=\"productionSettings.productionSpeed\"\n                    class=\"control-select\"\n                    :disabled=\"isWorking\"\n                  >\n                    <option value=\"10\">느림 (10개/초)</option>\n                    <option value=\"30\">보통 (30개/초)</option>\n                    <option value=\"60\">빠름 (60개/초)</option>\n                    <option value=\"100\">매우빠름 (100개/초)</option>\n                  </select>\n                </div>\n\n                <div class=\"control-group\">\n                  <label class=\"control-label\">\n                    투입수량\n                    <span\n                      v-if=\"currentWork.target_quantity > 0\"\n                      class=\"target-info\"\n                    >\n                      (지시: {{ formatNumber(currentWork.target_quantity) }}개)\n                    </span>\n                    <span\n                      v-if=\"\n                        workInfo.lineType === 'OUTER' &&\n                        workflowInfo.innerOutputQty > 0\n                      \"\n                      class=\"workflow-info\"\n                    >\n                      (내포장 완료:\n                      {{ formatNumber(workflowInfo.innerOutputQty) }}개)\n                    </span>\n                  </label>\n                  <input\n                    v-model.number=\"inputQuantity\"\n                    type=\"number\"\n                    class=\"control-input\"\n                    :class=\"{\n                      'workflow-linked':\n                        workInfo.lineType === 'OUTER' &&\n                        workflowInfo.innerOutputQty > 0,\n                      'partial-work': isPartialWork,\n                    }\"\n                    :placeholder=\"\n                      workInfo.lineType === 'OUTER' &&\n                      workflowInfo.innerOutputQty > 0\n                        ? workflowInfo.innerOutputQty.toString()\n                        : '500'\n                    \"\n                    :disabled=\"\n                      !selectedWorkOrder ||\n                      isWorking ||\n                      (workInfo.lineType === 'OUTER' &&\n                        workflowInfo.innerOutputQty > 0)\n                    \"\n                    :max=\"currentWork.target_quantity\"\n                    min=\"1\"\n                    @input=\"onInputQuantityChange\"\n                  />\n\n                  <div\n                    v-if=\"\n                      workInfo.lineType === 'OUTER' &&\n                      workflowInfo.innerOutputQty > 0\n                    \"\n                    class=\"workflow-linked-info\"\n                  >\n                    연계: 내포장 완료수량으로 자동 설정됨 ({{\n                      formatNumber(workflowInfo.innerOutputQty)\n                    }}개)\n                  </div>\n\n                  <div v-if=\"isPartialWork\" class=\"partial-work-info\">\n                    부분완료 작업 - 남은 수량:\n                    {{ formatNumber(getRemainingQuantity()) }}개\n                  </div>\n\n                  <div\n                    v-if=\"\n                      inputQuantity > currentWork.target_quantity &&\n                      currentWork.target_quantity > 0\n                    \"\n                    class=\"input-warning\"\n                  >\n                    투입수량이 지시수량을 초과합니다\n                  </div>\n\n                  <div\n                    v-if=\"\n                      workInfo.lineType === 'OUTER' &&\n                      workflowInfo.innerOutputQty > 0 &&\n                      inputQuantity !== workflowInfo.innerOutputQty\n                    \"\n                    class=\"workflow-suggestion\"\n                  >\n                    내포장 완료수량({{\n                      formatNumber(workflowInfo.innerOutputQty)\n                    }}개)과 다릅니다\n                  </div>\n                </div>\n              </div>\n\n              <!-- 선택된 작업 미리보기 (실제 데이터 기반) -->\n              <div\n                v-if=\"selectedWorkOrder && currentWork.work_order_no\"\n                class=\"selected-work-preview\"\n              >\n                <h4>선택된 작업 정보 (실제 DB 데이터)</h4>\n                <div class=\"preview-grid\">\n                  <div class=\"preview-item\">\n                    <span class=\"label\">작업번호:</span>\n                    <span class=\"value\">{{ currentWork.work_order_no }}</span>\n                  </div>\n                  <div class=\"preview-item\">\n                    <span class=\"label\">제품명:</span>\n                    <span class=\"value\">{{ currentWork.product_name }}</span>\n                  </div>\n                  <div class=\"preview-item\">\n                    <span class=\"label\">작업상태:</span>\n                    <span\n                      class=\"value\"\n                      :class=\"getWorkStatusClass(currentWork.step_status)\"\n                    >\n                      {{ getWorkStatusText(currentWork.step_status) }}\n                    </span>\n                  </div>\n                  <div class=\"preview-item\">\n                    <span class=\"label\">지시수량:</span>\n                    <span class=\"value\"\n                      >{{ formatNumber(currentWork.target_quantity) }}개</span\n                    >\n                  </div>\n                  <div class=\"preview-item\">\n                    <span class=\"label\">현재 진행률:</span>\n                    <span class=\"value\">{{ currentWork.progressRate }}%</span>\n                  </div>\n                  <div class=\"preview-item\">\n                    <span class=\"label\">작업자:</span>\n                    <span class=\"value\">{{ currentWork.worker_name }}</span>\n                  </div>\n                  <div class=\"preview-item\">\n                    <span class=\"label\">라인:</span>\n                    <span class=\"value\">{{ workInfo.lineName }}</span>\n                  </div>\n                  <!-- 실제 DB 원본 키 표시 -->\n                  <div v-if=\"currentWork._original_keys\" class=\"preview-item\">\n                    <span class=\"label\">원본 키:</span>\n                    <span class=\"value debug-keys\"\n                      >{{ currentWork._original_keys.length }}개 컬럼</span\n                    >\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"work-controls\">\n              <!-- 주요 작업 버튼들 -->\n              <div class=\"main-actions\">\n                <button\n                  :disabled=\"\n                    !canStartWork && !isWorking && workStatus !== 'PAUSED'\n                  \"\n                  :class=\"['btn', 'btn-work', { working: isWorking }]\"\n                  @click=\"handleWorkButton\"\n                >\n                  {{ getWorkButtonText() }}\n                </button>\n\n                <button\n                  :disabled=\"!isWorking && workStatus !== 'COMPLETED'\"\n                  :class=\"[\n                    'btn',\n                    'btn-complete',\n                    { ready: workStatus === 'COMPLETED' },\n                  ]\"\n                  @click=\"completeProduction\"\n                >\n                  {{ workStatus === \"COMPLETED\" ? \"완료 처리\" : \"생산 완료\" }}\n                </button>\n\n                <button\n                  :disabled=\"!isWorking\"\n                  class=\"btn btn-stop\"\n                  @click=\"stopWork\"\n                >\n                  작업 종료\n                </button>\n              </div>\n\n              <!-- 보조 기능 버튼들 -->\n              <div class=\"sub-actions\">\n                <button\n                  :disabled=\"loading\"\n                  class=\"btn btn-refresh\"\n                  @click=\"refreshWorkOrders\"\n                >\n                  강력 새로고침\n                </button>\n                <button\n                  :disabled=\"loading || isWorking\"\n                  class=\"btn btn-reset\"\n                  title=\"라인 초기화\"\n                  @click=\"resetLineStatus\"\n                >\n                  초기화\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- 실시간 진행 상황 -->\n          <div class=\"progress-panel\">\n            <h3>실시간 진행 상황</h3>\n            <div class=\"progress-cards\">\n              <div class=\"progress-card\">\n                <div class=\"card-header\">\n                  <span class=\"card-title\">생산수량</span>\n                </div>\n                <div class=\"card-value\">\n                  {{ formatNumber(productionSettings.currentProgress) }}\n                </div>\n                <div class=\"card-unit\">개</div>\n              </div>\n              <div class=\"progress-card success\">\n                <div class=\"card-header\">\n                  <span class=\"card-title\">합격수량</span>\n                </div>\n                <div class=\"card-value\">\n                  {{ formatNumber(currentWork.output_qty) }}\n                </div>\n                <div class=\"card-unit\">개</div>\n              </div>\n              <div class=\"progress-card danger\">\n                <div class=\"card-header\">\n                  <span class=\"card-title\">불량수량</span>\n                </div>\n                <div class=\"card-value\">\n                  {{ formatNumber(currentWork.defect_qty) }}\n                </div>\n                <div class=\"card-unit\">개</div>\n              </div>\n            </div>\n\n            <!-- 진행률 바 -->\n            <div class=\"progress-section\">\n              <div class=\"progress-header\">\n                <span>전체 진행률</span>\n                <span class=\"progress-percent\"\n                  >{{ currentWork.progressRate }}%</span\n                >\n              </div>\n              <div class=\"progress-bar\">\n                <div\n                  class=\"progress-fill\"\n                  :style=\"{ width: currentWork.progressRate + '%' }\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <!-- 작업 로그 -->\n          <div class=\"log-panel\">\n            <h3>작업 로그</h3>\n            <div class=\"log-container\">\n              <div\n                v-for=\"log in workLogs\"\n                :key=\"log.id\"\n                class=\"log-item\"\n                :class=\"log.type\"\n              >\n                <div class=\"log-time\">\n                  {{ formatDateTime(log.timestamp) }}\n                </div>\n                <div class=\"log-content\">\n                  {{ log.message }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 우측: 작업 정보 -->\n        <div class=\"work-sidebar\">\n          <div\n            v-if=\"workflowInfo.step === 'OUTER' && workflowInfo.innerCompleted\"\n            class=\"workflow-panel\"\n          >\n            <h3>워크플로우 정보</h3>\n            <div class=\"workflow-chain\">\n              <div class=\"chain-step completed\">\n                <div class=\"step-header\">\n                  <span class=\"step-title\">내포장 완료</span>\n                </div>\n                <div class=\"step-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">작업번호:</span>\n                    <span class=\"detail-value\">{{\n                      workflowInfo.innerWorkNo\n                    }}</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">완료시간:</span>\n                    <span class=\"detail-value\">{{\n                      formatTime(workflowInfo.innerCompletionTime)\n                    }}</span>\n                  </div>\n                  <div\n                    v-if=\"workflowInfo.innerOutputQty > 0\"\n                    class=\"detail-item\"\n                  >\n                    <span class=\"detail-label\">완료수량:</span>\n                    <span class=\"detail-value highlight\"\n                      >{{ formatNumber(workflowInfo.innerOutputQty) }}개</span\n                    >\n                  </div>\n                </div>\n              </div>\n              <div class=\"chain-arrow\" />\n              <div class=\"chain-step current\">\n                <div class=\"step-header\">\n                  <span class=\"step-title\">외포장 진행</span>\n                </div>\n                <div class=\"step-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">라인:</span>\n                    <span class=\"detail-value\">{{ workInfo.lineName }}</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">상태:</span>\n                    <span class=\"detail-value\">{{\n                      getWorkStatusText(workStatus)\n                    }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"info-panel\">\n            <h3>현재 작업 정보</h3>\n            <div class=\"info-section\">\n              <div class=\"info-row\">\n                <span class=\"info-label\">라인 정보</span>\n                <span class=\"info-value\"\n                  >{{ workInfo.lineName }} ({{ workInfo.lineId }})</span\n                >\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">작업번호</span>\n                <span class=\"info-value\">{{\n                  currentWork.work_order_no || \"-\"\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">제품명</span>\n                <span class=\"info-value\">{{\n                  currentWork.product_name || \"-\"\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">포장형태</span>\n                <span class=\"info-value\">{{\n                  workInfo.lineType === \"INNER\" ? \"내포장\" : \"외포장\"\n                }}</span>\n              </div>\n            </div>\n\n            <!-- 작업량 정보 섹션 -->\n            <div class=\"info-section\">\n              <h4>작업량 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">지시량</span>\n                <span class=\"info-value\">{{\n                  formatNumber(currentWork.target_quantity) || \"-\"\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">기투입량</span>\n                <span\n                  class=\"info-value\"\n                  :class=\"{\n                    'workflow-linked':\n                      workInfo.lineType === 'OUTER' &&\n                      workflowInfo.innerOutputQty > 0,\n                  }\"\n                >\n                  {{ formatNumber(currentWork.current_quantity) || \"-\" }}\n                </span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">미투입량</span>\n                <span\n                  class=\"info-value remaining-qty\"\n                  :class=\"{\n                    'remaining-qty-highlight': getRemainingQuantity() > 0,\n                  }\"\n                  >{{\n                    formatNumber(currentWork.remaining_quantity) || \"-\"\n                  }}</span\n                >\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">달성률</span>\n                <span\n                  class=\"info-value achievement-rate\"\n                  :class=\"getAchievementRateClass(currentWork.achievementRate)\"\n                >\n                  {{ currentWork.achievementRate }}%\n                </span>\n              </div>\n            </div>\n\n            <!-- 시간 정보 섹션 -->\n            <div class=\"info-section\">\n              <h4>시간 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">시작시간</span>\n                <span class=\"info-value\">{{\n                  formatTime(currentWork.start_time)\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">작업시간</span>\n                <span class=\"info-value work-duration\">{{\n                  workElapsedTime\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">종료예정시간</span>\n                <span\n                  class=\"info-value estimated-time\"\n                  :class=\"{ 'time-warning': isTimeWarning }\"\n                  >{{ formatTime(currentWork.end_time) }}</span\n                >\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">예상소요시간</span>\n                <span class=\"info-value\">{{\n                  formatDuration(currentWork.estimated_duration)\n                }}</span>\n              </div>\n            </div>\n\n            <!-- 품질 정보 -->\n            <div class=\"info-section\">\n              <h4>품질 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">합격률</span>\n                <span\n                  class=\"info-value quality-rate\"\n                  :class=\"getQualityRateClass(currentWork.passRate)\"\n                >\n                  {{ currentWork.passRate }}%\n                </span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">불량률</span>\n                <span class=\"info-value defect-rate\"\n                  >{{ currentWork.defectRate }}%</span\n                >\n              </div>\n            </div>\n\n            <!-- 담당자 정보 섹션 -->\n            <div class=\"info-section\">\n              <h4>담당자 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">작업자명</span>\n                <span class=\"info-value worker-name\">{{\n                  currentWork.worker_name || \"김포장\"\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">사번</span>\n                <span class=\"info-value\">{{\n                  currentWork.employee_id || \"-\"\n                }}</span>\n              </div>\n            </div>\n\n            <!-- 실제 DB 정보 (디버깅용) -->\n            <div\n              v-if=\"showDebugPanel && currentWork._original_keys\"\n              class=\"info-section debug-section\"\n            >\n              <h4>실제 DB 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">원본 컬럼 수</span>\n                <span class=\"info-value\"\n                  >{{ currentWork._original_keys.length }}개</span\n                >\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">처리 시간</span>\n                <span class=\"info-value\">{{\n                  currentWork._processed_at\n                    ? formatTime(new Date(currentWork._processed_at))\n                    : \"-\"\n                }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"line-change-panel\">\n            <button class=\"btn-line-change\" @click=\"goBackToLineSelection\">\n              다른 라인으로 변경하기\n            </button>\n            <p class=\"line-change-help\">\n              현재: <strong>{{ workInfo.lineName }}</strong\n              ><br />\n              잘못된 라인을 선택했거나 다른 라인에서 작업하고 싶다면 클릭하세요\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 작업 완료 확인 모달 -->\n    <div\n      v-if=\"showCompleteModal\"\n      class=\"modal-overlay\"\n      @click=\"closeCompleteModal\"\n    >\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>{{ getCompleteModalTitle() }}</h3>\n          <button class=\"modal-close\" @click=\"closeCompleteModal\">닫기</button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"complete-summary\">\n            <h4>작업 결과</h4>\n            <div class=\"summary-grid\">\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">지시량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.target_quantity) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">투입수량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.current_quantity) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">합격수량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.output_qty) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">불량수량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.defect_qty) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">합격률</span>\n                <span class=\"summary-value\">{{ currentWork.passRate }}%</span>\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">작업시간</span>\n                <span class=\"summary-value\">{{ workElapsedTime }}</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- 워크플로우별 다음 단계 안내 -->\n          <div\n            v-if=\"workInfo.lineType === 'INNER' && !isPartialCompletion\"\n            class=\"next-step-info inner-completion\"\n          >\n            <div class=\"info-box\">\n              <div class=\"info-content\">\n                <h5>다음 단계: 외포장 라인 선택</h5>\n                <p>\n                  내포장 작업 완료 후 외포장이 활성화된 라인 선택 페이지로 자동\n                  이동합니다.\n                </p>\n                <ul>\n                  <li>내포장 작업 완료 처리</li>\n                  <li>라인 선택 페이지로 자동 이동</li>\n                  <li>외포장 라인 자동 활성화</li>\n                  <li>추천 라인 표시</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div\n            v-else-if=\"workInfo.lineType === 'OUTER' && !isPartialCompletion\"\n            class=\"next-step-info outer-completion\"\n          >\n            <div class=\"info-box\">\n              <div class=\"info-content\">\n                <h5>전체 포장 작업 완료!</h5>\n                <p>모든 포장 단계가 완료되었습니다.</p>\n                <div class=\"completion-chain\">\n                  <div class=\"chain-item\">\n                    <span class=\"chain-text\">내포장</span>\n                    <span class=\"chain-status\">완료</span>\n                  </div>\n                  <div class=\"chain-arrow\">→</div>\n                  <div class=\"chain-item\">\n                    <span class=\"chain-text\">외포장</span>\n                    <span class=\"chain-status\">완료</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"isPartialCompletion\" class=\"partial-completion-info\">\n            <div class=\"warning-box\">\n              <div class=\"warning-content\">\n                <h5>지시량 미달성</h5>\n                <div class=\"completion-stats\">\n                  <div class=\"stat-item\">\n                    <span class=\"stat-label\">지시량:</span>\n                    <span class=\"stat-value\"\n                      >{{ formatNumber(currentWork.target_quantity) }}개</span\n                    >\n                  </div>\n                  <div class=\"stat-item\">\n                    <span class=\"stat-label\">현재 생산:</span>\n                    <span class=\"stat-value\"\n                      >{{ formatNumber(currentWork.output_qty) }}개</span\n                    >\n                  </div>\n                  <div class=\"stat-item\">\n                    <span class=\"stat-label\">미달성:</span>\n                    <span class=\"stat-value shortage\"\n                      >{{ formatNumber(getRemainingQuantity()) }}개</span\n                    >\n                  </div>\n                  <div class=\"stat-item\">\n                    <span class=\"stat-label\">달성률:</span>\n                    <span class=\"stat-value\">{{ getCompletionRate() }}%</span>\n                  </div>\n                </div>\n                <p class=\"warning-text\">\n                  지시량을 모두 달성하지 못했습니다. 어떻게 처리하시겠습니까?\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <p class=\"confirmation-text\">\n            {{ getConfirmationText() }}\n          </p>\n        </div>\n        <div class=\"modal-actions\">\n          <button class=\"btn-cancel\" @click=\"closeCompleteModal\">취소</button>\n\n          <div v-if=\"isPartialCompletion\" class=\"completion-options\">\n            <button class=\"btn-partial\" @click=\"confirmPartialComplete\">\n              {{ getPartialCompleteButtonText() }}\n            </button>\n            <button class=\"btn-continue\" @click=\"confirmContinueLater\">\n              나중에 계속하기\n            </button>\n          </div>\n\n          <button v-else class=\"btn-confirm\" @click=\"confirmCompleteWork\">\n            {{ getCompleteButtonText() }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 자동 이동 안내 오버레이 -->\n    <div v-if=\"showAutoTransition\" class=\"auto-transition-overlay\">\n      <div class=\"transition-modal\">\n        <h3>{{ getTransitionTitle() }}</h3>\n        <p>{{ getTransitionMessage() }}</p>\n        <div class=\"transition-progress\">\n          <div class=\"progress-bar\">\n            <div\n              class=\"progress-fill\"\n              :style=\"{ width: transitionProgress + '%' }\"\n            />\n          </div>\n          <span class=\"progress-text\"\n            >{{ Math.round(transitionProgress) }}%</span\n          >\n        </div>\n      </div>\n    </div>\n\n    <!-- 로딩 스피너 -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-spinner\" />\n      <div class=\"loading-text\">\n        {{ loadingMessage }}\n      </div>\n    </div>\n\n    <!-- 에러 메시지 -->\n    <div v-if=\"showError\" class=\"error-overlay\">\n      <div class=\"error-modal\">\n        <div class=\"error-header\">\n          <h3>연결 오류</h3>\n        </div>\n        <div class=\"error-body\">\n          <p>{{ errorMessage }}</p>\n          <p class=\"error-help\">서버 상태를 확인하고 다시 시도해주세요.</p>\n        </div>\n        <div class=\"error-actions\">\n          <button class=\"btn-error-close\" @click=\"hideError\">확인</button>\n          <button class=\"btn-retry\" @click=\"retryConnection\">다시 시도</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, nextTick, watch } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport axios from \"axios\";\n\n// axios 기본 설정\naxios.defaults.timeout = 15000;\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n\n// 라우터 및 라우트\nconst router = useRouter();\nconst route = useRoute();\n\n// 라인 정보 (URL 파라미터에서 가져옴)\nconst workInfo = ref({\n  lineId: route.query.line_id || \"1\",\n  lineName: route.query.line_name || \"A라인 내포장\",\n  lineType: route.query.line_type || \"INNER\",\n});\n\n// 워크플로우 정보\nconst workflowInfo = ref({\n  step: route.query.workflow_step || null,\n  innerCompleted: route.query.inner_completed === \"true\",\n  innerWorkNo: route.query.inner_work_order_no || \"\",\n  innerCompletionTime: route.query.inner_completion_time\n    ? new Date(route.query.inner_completion_time)\n    : null,\n  innerOutputQty: parseInt(route.query.inner_output_qty) || 0,\n  autoStartGuide: route.query.auto_start_guide === \"true\",\n});\n\n// 디버깅 정보\nconst showDebugPanel = ref(false);\nconst debugInfo = ref({\n  tableStructure: null,\n  lastApiResponse: null,\n  mappingTest: null,\n});\n\n// 로딩 및 에러 상태\nconst loading = ref(false);\nconst loadingMessage = ref(\"\");\nconst showError = ref(false);\nconst errorMessage = ref(\"\");\n\n// 작업 상태\nconst workStatus = ref(\"READY\");\nconst isWorking = ref(false);\nconst workStartTime = ref(null);\nconst workElapsedTime = ref(\"00:00:00\");\n\n// 작업 선택 상태\nconst selectedWorkOrder = ref(\"\");\nconst inputQuantity = ref(500);\nconst availableWorkOrders = ref([]);\n\n// 자동 전환 상태\nconst showAutoTransition = ref(false);\nconst transitionProgress = ref(0);\n\n// 부분완료 작업 여부\nconst isPartialWork = computed(() => {\n  return (\n    currentWork.value.step_status === \"부분완료\" ||\n    currentWork.value.step_status === \"PARTIAL_COMPLETE\" ||\n    currentWork.value.step_status === \"partial_complete\"\n  );\n});\n\n// 작업번호 상태별 분류 (실제 데이터 기반)\nconst readyWorks = computed(() => {\n  const ready = availableWorkOrders.value.filter((work) => {\n    if (!work) return false;\n    const status = (work.step_status || \"\").toLowerCase();\n    return (\n      !status ||\n      status === \"\" ||\n      status === \"ready\" ||\n      status === \"준비\" ||\n      status === \"null\" ||\n      status === \"undefined\" ||\n      status === \"available\"\n    );\n  });\n\n  return ready.sort((a, b) => {\n    const aWorkNo = extractWorkNumber(a.work_order_no);\n    const bWorkNo = extractWorkNumber(b.work_order_no);\n    return aWorkNo - bWorkNo;\n  });\n});\n\nconst workingWorks = computed(() => {\n  const working = availableWorkOrders.value.filter((work) => {\n    if (!work) return false;\n    const status = (work.step_status || \"\").toLowerCase();\n    return (\n      status === \"working\" ||\n      status === \"in_progress\" ||\n      status === \"진행중\" ||\n      status === \"진행\" ||\n      status === \"active\"\n    );\n  });\n\n  return working.sort((a, b) => {\n    const aWorkNo = extractWorkNumber(a.work_order_no);\n    const bWorkNo = extractWorkNumber(b.work_order_no);\n    return aWorkNo - bWorkNo;\n  });\n});\n\nconst pausedWorks = computed(() => {\n  const paused = availableWorkOrders.value.filter((work) => {\n    if (!work) return false;\n    const status = (work.step_status || \"\").toLowerCase();\n    return (\n      status === \"paused\" ||\n      status === \"일시정지\" ||\n      status === \"partial_complete\" ||\n      status === \"부분완료\" ||\n      status === \"partial\"\n    );\n  });\n\n  return paused.sort((a, b) => {\n    const aWorkNo = extractWorkNumber(a.work_order_no);\n    const bWorkNo = extractWorkNumber(b.work_order_no);\n    return aWorkNo - bWorkNo;\n  });\n});\n\n// 현재 작업 정보\nconst currentWork = ref({\n  work_order_no: \"\",\n  result_detail_id: null,\n  result_id: \"\",\n  product_name: \"\",\n  product_code: \"\",\n  package_type: \"\",\n  target_quantity: 0,\n  current_quantity: 0,\n  remaining_quantity: 0,\n  output_qty: 0,\n  defect_qty: 0,\n  progressRate: 0,\n  passRate: 0,\n  defectRate: 0,\n  achievementRate: 0,\n  employee_id: 2,\n  worker_name: \"김포장\",\n  department: \"포장부\",\n  position: \"작업자\",\n  start_time: null,\n  end_time: null,\n  work_duration: 0,\n  estimated_duration: 0,\n  step_status: \"READY\",\n  process_code: \"\",\n  eq_type_code: \"\",\n  _original_keys: [],\n  _processed_at: null,\n});\n\n// 작업 로그\nconst workLogs = ref([]);\n\n// 모달\nconst showCompleteModal = ref(false);\n\n// 타이머\nlet workTimer = null;\nlet productionTimer = null;\n\n// 시간 경고 계산\nconst isTimeWarning = computed(() => {\n  if (!currentWork.value.end_time || !isWorking.value) return false;\n  const now = new Date();\n  const endTime = new Date(currentWork.value.end_time);\n  const remainingMs = endTime.getTime() - now.getTime();\n  return remainingMs < 30 * 60 * 1000;\n});\n\n// 생산 시뮬레이션 설정\nconst productionSettings = ref({\n  productionSpeed: 30,\n  defectRate: 0.02,\n  targetQty: 0,\n  currentProgress: 0,\n});\n\n// 계산된 값들\nconst canStartWork = computed(() => {\n  if (!selectedWorkOrder.value) {\n    return false;\n  }\n\n  if (isWorking.value) {\n    return false;\n  }\n\n  if (isPartialWork.value) {\n    console.log(\"부분완료 작업 - 시작 가능\");\n    return true;\n  }\n\n  if (\n    currentWork.value.step_status === \"일시정지\" ||\n    currentWork.value.step_status === \"PAUSED\"\n  ) {\n    console.log(\"일시정지 작업 - 재시작 가능\");\n    return true;\n  }\n\n  if (\n    currentWork.value.step_status === \"진행중\" ||\n    currentWork.value.step_status === \"IN_PROGRESS\" ||\n    currentWork.value.step_status === \"WORKING\"\n  ) {\n    console.log(\"진행중 작업 - 재시작 가능\");\n    return true;\n  }\n\n  const hasInputQuantity = inputQuantity.value > 0;\n  console.log(\n    `일반 작업 - 투입수량 확인: ${inputQuantity.value} (시작가능: ${hasInputQuantity})`,\n  );\n  return hasInputQuantity;\n});\n\n// 미완료 여부 판단\nconst isPartialCompletion = computed(() => {\n  return (\n    currentWork.value.output_qty < currentWork.value.target_quantity &&\n    currentWork.value.target_quantity > 0\n  );\n});\n\n// 미달성 수량 계산\nfunction getRemainingQuantity() {\n  return Math.max(\n    0,\n    currentWork.value.target_quantity - currentWork.value.current_quantity,\n  );\n}\n\n// 달성률 계산\nfunction getCompletionRate() {\n  if (currentWork.value.target_quantity <= 0) return 100;\n  return Math.round(\n    (currentWork.value.output_qty / currentWork.value.target_quantity) * 100,\n  );\n}\n\n// ==============================================\n// 실제 데이터베이스 연동 - 디버깅 기능 포함\n// ==============================================\n\n// 컴포넌트 마운트 시 실제 작업번호 로딩\nonMounted(async () => {\n  console.log(\"PackageWork 컴포넌트 마운트 - 실제 DB 연동 시작\");\n  console.log(\"라인 정보:\", workInfo.value);\n  console.log(\"워크플로우 정보:\", workflowInfo.value);\n\n  try {\n    loading.value = true;\n    loadingMessage.value =\n      \"실제 데이터베이스에서 작업번호 목록을 불러오는 중...\";\n\n    // 1단계: 테이블 구조 확인 (선택사항)\n    await checkTableStructure();\n\n    // 2단계: 실제 작업번호 목록 조회\n    await loadRealWorkOrders();\n\n    // 3단계: 외포장 워크플로우 데이터 로드\n    if (workInfo.value.lineType === \"OUTER\") {\n      console.log(\"외포장 감지 - 워크플로우 데이터 로드\");\n      await loadWorkflowData();\n    }\n\n    // 4단계: URL에서 전달된 작업번호가 있으면 선택\n    if (route.query.work_order_no) {\n      await selectWorkOrderWithRetry(route.query.work_order_no);\n    } else {\n      // 자동 작업번호 선택\n      await autoSelectFirstAvailableWork();\n    }\n\n    // 워크플로우 안내 메시지\n    if (\n      workflowInfo.value.step === \"OUTER\" &&\n      workflowInfo.value.innerCompleted\n    ) {\n      addLog(\n        `외포장 단계입니다. 내포장(${workflowInfo.value.innerWorkNo})이 완료되었습니다.`,\n        \"success\",\n      );\n    }\n\n    // 이전 작업 완료 메시지 표시\n    if (route.query.message) {\n      addLog(route.query.message, \"success\");\n    }\n\n    addLog(\n      \"실제 데이터베이스에서 작업번호 목록 로딩이 완료되었습니다.\",\n      \"success\",\n    );\n  } catch (error) {\n    console.error(\"작업번호 로딩 실패:\", error);\n    addLog(`초기화 실패: ${error.message}`, \"error\");\n    availableWorkOrders.value = [];\n\n    // 디버깅 모드 자동 활성화\n    if (\n      error.message.includes(\"Unknown column\") ||\n      error.message.includes(\"table\") ||\n      error.message.includes(\"column\")\n    ) {\n      showDebugPanel.value = true;\n      addLog(\n        \"테이블 구조 문제가 감지되어 디버깅 패널을 활성화했습니다.\",\n        \"warning\",\n      );\n    }\n  } finally {\n    loading.value = false;\n  }\n});\n\n// 테이블 구조 확인\nasync function checkTableStructure() {\n  try {\n    console.log(\"테이블 구조 확인 중...\");\n\n    const response = await axios.get(\"/packages/debug/table-structure\");\n\n    if (response.data.success && response.data.data) {\n      debugInfo.value.tableStructure = response.data.data;\n      console.log(\"테이블 구조 확인 완료:\", debugInfo.value.tableStructure);\n      addLog(\n        `테이블 구조 확인: ${debugInfo.value.tableStructure.column_count}개 컬럼, ${debugInfo.value.tableStructure.total_rows}개 행`,\n        \"info\",\n      );\n    } else {\n      console.warn(\"테이블 구조 확인 실패:\", response.data.error);\n    }\n  } catch (error) {\n    console.warn(\"테이블 구조 확인 중 오류:\", error.message);\n    // 에러가 발생해도 계속 진행\n  }\n}\n\n// 실제 작업번호 목록 조회 - 새로운 실제 DB API 사용\nasync function loadRealWorkOrders() {\n  try {\n    console.log(\"실제 작업번호 목록 조회 시작\");\n\n    // 새로운 실제 DB 기반 API 사용\n    const packageType = workInfo.value.lineType; // INNER 또는 OUTER\n\n    const response = await axios.get(\"/packages/works\", {\n      params: {\n        package_type: packageType,\n        line_id: workInfo.value.lineId,\n        line_name: workInfo.value.lineName,\n      },\n    });\n\n    // API 응답 디버깅 정보 저장\n    debugInfo.value.lastApiResponse = response.data;\n\n    if (response.data.success && response.data.data) {\n      const workList = response.data.data;\n\n      console.log(`전체 작업 ${workList.length}개 조회됨`);\n      addLog(\n        `실제 DB에서 ${workList.length}개 작업을 조회했습니다.`,\n        \"success\",\n      );\n\n      // 메타데이터 정보 로깅\n      if (response.data.metadata) {\n        const metadata = response.data.metadata;\n        addLog(\n          `데이터 품질: 제품명 ${\n            metadata.data_quality?.with_product_name || 0\n          }개, 라인정보 ${metadata.data_quality?.with_line_info || 0}개`,\n          \"info\",\n        );\n\n        // 상태별 분포 로깅\n        if (metadata.status_breakdown) {\n          const statusInfo = Object.entries(metadata.status_breakdown)\n            .map(([status, count]) => `${status}: ${count}개`)\n            .join(\", \");\n          addLog(`작업 상태 분포: ${statusInfo}`, \"info\");\n        }\n      }\n\n      // 실제 DB 데이터를 UI 형식으로 변환\n      availableWorkOrders.value = workList.map((work) => ({\n        // 기본 정보\n        work_order_no: work.work_order_no,\n        step_name: work.step_name || work.final_product_name || \"포장작업\",\n        product_name:\n          work.final_product_name ||\n          work.product_name ||\n          extractProductFromStepName(work.step_name),\n        product_code: work.product_code,\n        step_status: work.step_status || \"READY\",\n\n        // 수량 정보\n        order_qty: work.order_qty || work.target_qty || work.input_qty || 1000,\n        target_qty: work.target_qty || work.order_qty || work.input_qty || 1000,\n        input_qty: work.input_qty || 0,\n        output_qty: work.output_qty || 0,\n        defect_qty: work.defect_qty || 0,\n        progress_rate: work.progress_rate || 0,\n\n        // 작업자 정보\n        employee_name: work.employee_name || work.emp_name || \"김포장\",\n        employee_id: work.employee_id || 2,\n\n        // 라인 정보\n        line_name: work.line_name || workInfo.value.lineName,\n        line_id: work.line_id || workInfo.value.lineId,\n        package_type: work.package_type || workInfo.value.lineType,\n        line_type:\n          work.line_type ||\n          (workInfo.value.lineType === \"INNER\" ? \"내포장\" : \"외포장\"),\n\n        // 시간 정보\n        start_time: work.start_time,\n        end_time: work.end_time,\n        reg_date: work.reg_date,\n\n        // 디버깅 정보\n        _original_keys: work._original_keys || Object.keys(work),\n        _processed_at: work._processed_at || new Date().toISOString(),\n      }));\n\n      addLog(\n        `${workInfo.value.lineName}의 작업번호 ${availableWorkOrders.value.length}개를 처리했습니다.`,\n        \"success\",\n      );\n    } else {\n      throw new Error(response.data.message || \"작업번호 목록 조회 실패\");\n    }\n  } catch (error) {\n    console.error(\"실제 작업번호 조회 실패:\", error);\n\n    if (error.response?.status === 404) {\n      addLog(\"해당 라인의 작업번호가 없습니다.\", \"warning\");\n      availableWorkOrders.value = [];\n    } else if (error.message.includes(\"Unknown column\")) {\n      addLog(\n        \"데이터베이스 컬럼 구조 문제가 발견되었습니다. 디버깅 패널을 확인하세요.\",\n        \"error\",\n      );\n      showDebugPanel.value = true;\n      throw error;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// 제품명 추출 함수\nfunction extractProductFromStepName(stepName) {\n  if (!stepName) return \"제품명없음\";\n\n  if (stepName.includes(\"타이레놀\")) return \"타이레놀정500mg\";\n  if (stepName.includes(\"게보린\")) return \"게보린정\";\n  if (stepName.includes(\"부루펜\")) return \"부루펜시럽\";\n  if (stepName.includes(\"베아르\")) return \"베아르정\";\n  if (stepName.includes(\"A라인\")) return \"A라인 제품\";\n  if (stepName.includes(\"B라인\")) return \"B라인 제품\";\n  if (stepName.includes(\"C라인\")) return \"C라인 제품\";\n\n  return stepName || \"제품명없음\";\n}\n\n// 워크플로우 데이터 로드 (외포장용)\nasync function loadWorkflowData() {\n  try {\n    console.log(\"외포장 워크플로우 데이터 로드 시작\");\n\n    const baseLineName = workInfo.value.lineName.replace(\n      /\\s*(내포장|외포장).*$/,\n      \"\",\n    );\n    console.log(\"기본 라인명:\", baseLineName);\n\n    // 1. API 시도\n    let innerData = null;\n    try {\n      const response = await axios.get(\"/packages/workflow/inner-completed\", {\n        params: { base_line_name: baseLineName },\n      });\n\n      if (response.data.success && response.data.data) {\n        innerData = response.data.data;\n        console.log(\"API에서 내포장 완료 정보 조회 성공:\", innerData);\n      }\n    } catch (apiError) {\n      console.log(\"API 호출 실패, 대안 데이터 소스 확인:\", apiError.message);\n    }\n\n    // 2. URL 파라미터 확인\n    if (!innerData && workflowInfo.value.innerOutputQty > 0) {\n      innerData = {\n        work_order_no: workflowInfo.value.innerWorkNo,\n        output_qty: workflowInfo.value.innerOutputQty,\n        completion_time: workflowInfo.value.innerCompletionTime,\n        step_status: \"완료\",\n      };\n      console.log(\"URL 파라미터에서 워크플로우 데이터 사용:\", innerData);\n    }\n\n    // 3. 메모리 확인\n    if (!innerData && window.workflowData) {\n      const workflowKey = `workflow_${baseLineName.replace(/\\s+/g, \"_\")}`;\n      const localData = window.workflowData[workflowKey];\n\n      if (localData && localData.inner_output_qty > 0) {\n        innerData = {\n          work_order_no: localData.inner_work_order_no,\n          output_qty: localData.inner_output_qty,\n          completion_time: localData.inner_completion_time,\n          step_status: \"완료\",\n        };\n        console.log(\"메모리에서 워크플로우 데이터 사용:\", innerData);\n      }\n    }\n\n    // 4. 데이터 적용\n    if (innerData && innerData.output_qty > 0) {\n      workflowInfo.value.innerCompleted = true;\n      workflowInfo.value.innerWorkNo = innerData.work_order_no;\n      workflowInfo.value.innerOutputQty = innerData.output_qty;\n      workflowInfo.value.innerCompletionTime = new Date(\n        innerData.completion_time || innerData.end_time,\n      );\n      workflowInfo.value.step = \"OUTER\";\n\n      // 투입수량 자동 설정\n      inputQuantity.value = innerData.output_qty;\n\n      addLog(`${baseLineName} 내포장 완료 정보를 연결했습니다.`, \"success\");\n      addLog(\n        `완료 작업: ${innerData.work_order_no}, 완료수량: ${formatNumber(\n          innerData.output_qty,\n        )}개`,\n        \"info\",\n      );\n      addLog(\n        `외포장 투입수량을 ${formatNumber(\n          innerData.output_qty,\n        )}개로 설정했습니다.`,\n        \"success\",\n      );\n\n      return true;\n    } else {\n      console.log(\"연결된 내포장 완료 정보 없음\");\n      addLog(\n        `${baseLineName}의 내포장 완료 정보를 찾을 수 없습니다.`,\n        \"warning\",\n      );\n      return false;\n    }\n  } catch (error) {\n    console.error(\"워크플로우 데이터 로드 실패:\", error);\n    addLog(\"워크플로우 연계에 실패했습니다. 수동으로 설정해주세요.\", \"warning\");\n    return false;\n  }\n}\n\n// ==============================================\n// 디버깅 기능들\n// ==============================================\n\n// 테이블 구조 테스트\nasync function testTableStructure() {\n  try {\n    loading.value = true;\n    loadingMessage.value = \"테이블 구조 테스트 중...\";\n\n    const response = await axios.get(\"/packages/debug/table-structure\");\n\n    if (response.data.success) {\n      debugInfo.value.tableStructure = response.data.data;\n      addLog(\n        `테이블 구조 테스트 완료: ${response.data.data.column_count}개 컬럼`,\n        \"success\",\n      );\n    } else {\n      addLog(`테이블 구조 테스트 실패: ${response.data.error}`, \"error\");\n    }\n  } catch (error) {\n    console.error(\"테이블 구조 테스트 실패:\", error);\n    addLog(`테이블 구조 테스트 실패: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 데이터 매핑 테스트\nasync function testDataMapping() {\n  try {\n    loading.value = true;\n    loadingMessage.value = \"데이터 매핑 테스트 중...\";\n\n    const response = await axios.get(\"/packages/debug/data-mapping-test\");\n\n    if (response.data.success) {\n      debugInfo.value.mappingTest = response.data.data;\n      addLog(\n        `데이터 매핑 테스트 완료: ${response.data.data.total_sample_count}개 샘플`,\n        \"success\",\n      );\n      addLog(\n        `성공적 매핑: ${response.data.data.summary.successful_mappings}개`,\n        \"info\",\n      );\n    } else {\n      addLog(`데이터 매핑 테스트 실패: ${response.data.error}`, \"error\");\n    }\n  } catch (error) {\n    console.error(\"데이터 매핑 테스트 실패:\", error);\n    addLog(`데이터 매핑 테스트 실패: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 필터링 테스트\nasync function testFiltering() {\n  try {\n    loading.value = true;\n    loadingMessage.value = \"필터링 테스트 중...\";\n\n    const response = await axios.get(\"/packages/debug/filter-test\", {\n      params: {\n        test_package_type: workInfo.value.lineType,\n        test_line_id: workInfo.value.lineId,\n        test_line_name: workInfo.value.lineName,\n      },\n    });\n\n    if (response.data.success) {\n      addLog(\n        `필터링 테스트 완료: 원본 ${response.data.data.original_data_count}개`,\n        \"success\",\n      );\n\n      response.data.data.filter_tests.forEach((test) => {\n        addLog(\n          `${test.filter_type} 필터: ${test.original_count} → ${test.filtered_count}개`,\n          \"info\",\n        );\n      });\n    } else {\n      addLog(`필터링 테스트 실패: ${response.data.error}`, \"error\");\n    }\n  } catch (error) {\n    console.error(\"필터링 테스트 실패:\", error);\n    addLog(`필터링 테스트 실패: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// ==============================================\n// 기존 작업 관리 함수들 (실제 DB 기반으로 수정)\n// ==============================================\n\n// 작업번호 변경 시\nasync function onWorkOrderChange() {\n  if (!selectedWorkOrder.value) {\n    resetCurrentWork();\n    return;\n  }\n\n  try {\n    loading.value = true;\n    loadingMessage.value = \"작업 정보를 불러오는 중...\";\n\n    console.log(`작업번호 ${selectedWorkOrder.value} 선택`);\n\n    // availableWorkOrders에서 해당 작업 찾기\n    const selectedWork = availableWorkOrders.value.find(\n      (work) => work.work_order_no === selectedWorkOrder.value,\n    );\n\n    if (!selectedWork) {\n      throw new Error(\n        `작업번호 ${selectedWorkOrder.value}를 찾을 수 없습니다.`,\n      );\n    }\n\n    console.log(\"선택된 작업 정보:\", selectedWork);\n\n    // 현재 작업 정보 설정\n    currentWork.value = {\n      work_order_no: selectedWork.work_order_no,\n      product_name:\n        selectedWork.final_product_name || selectedWork.product_name,\n      product_code: selectedWork.product_code,\n      package_type: selectedWork.package_type,\n      target_quantity:\n        selectedWork.target_qty || selectedWork.order_qty || 1000,\n      current_quantity: selectedWork.input_qty || 0,\n      remaining_quantity: 0,\n      output_qty: selectedWork.output_qty || 0,\n      defect_qty: selectedWork.defect_qty || 0,\n      progressRate: parseFloat(selectedWork.progress_rate) || 0,\n      passRate: 0,\n      defectRate: 0,\n      achievementRate: 0,\n      employee_id: selectedWork.employee_id || 2,\n      worker_name: selectedWork.employee_name || \"김포장\",\n      department: \"포장부\",\n      position: \"작업자\",\n      start_time: selectedWork.start_time,\n      end_time: selectedWork.end_time,\n      work_duration: 0,\n      estimated_duration: 0,\n      step_status: selectedWork.step_status || \"READY\",\n\n      // 디버깅 정보 포함\n      _original_keys: selectedWork._original_keys || [],\n      _processed_at: selectedWork._processed_at || new Date().toISOString(),\n    };\n\n    // 외포장 워크플로우 연계\n    if (\n      workInfo.value.lineType === \"OUTER\" &&\n      workflowInfo.value.innerCompleted &&\n      workflowInfo.value.innerOutputQty > 0\n    ) {\n      console.log(\n        `외포장 워크플로우 연계: ${workflowInfo.value.innerOutputQty}개`,\n      );\n      currentWork.value.current_quantity = workflowInfo.value.innerOutputQty;\n      inputQuantity.value = workflowInfo.value.innerOutputQty;\n      addLog(\n        `워크플로우 연계: 내포장 완료수량 ${formatNumber(\n          workflowInfo.value.innerOutputQty,\n        )}개를 투입량으로 설정`,\n        \"success\",\n      );\n    }\n\n    // 부분완료 작업 특별 처리\n    if (\n      currentWork.value.step_status === \"부분완료\" ||\n      currentWork.value.step_status === \"PARTIAL_COMPLETE\" ||\n      currentWork.value.step_status === \"partial_complete\"\n    ) {\n      const remainingQty =\n        currentWork.value.target_quantity - currentWork.value.output_qty;\n\n      addLog(`부분완료된 작업을 발견했습니다.`, \"warning\");\n      addLog(\n        `이전 생산량: ${formatNumber(currentWork.value.output_qty)}개`,\n        \"info\",\n      );\n      addLog(`남은 수량: ${formatNumber(remainingQty)}개`, \"warning\");\n\n      if (remainingQty > 0) {\n        inputQuantity.value = remainingQty;\n        addLog(\n          `투입수량을 남은 ${formatNumber(remainingQty)}개로 설정했습니다.`,\n          \"success\",\n        );\n      }\n    } else {\n      // 일반 작업의 경우 기본 투입수량 설정\n      if (!inputQuantity.value || inputQuantity.value === 0) {\n        inputQuantity.value = Math.min(\n          500,\n          currentWork.value.target_quantity || 500,\n        );\n      }\n    }\n\n    updateCurrentWorkInfo();\n    addLog(\n      `작업번호 ${selectedWorkOrder.value} 정보를 불러왔습니다. (실제 DB 데이터)`,\n      \"success\",\n    );\n\n    if (selectedWork._original_keys && selectedWork._original_keys.length > 0) {\n      addLog(\n        `원본 DB 컬럼 ${selectedWork._original_keys.length}개를 성공적으로 매핑했습니다.`,\n        \"info\",\n      );\n    }\n  } catch (error) {\n    console.error(`작업번호 ${selectedWorkOrder.value} 조회 실패:`, error);\n    showErrorMessage(\n      `작업번호 ${selectedWorkOrder.value} 정보를 불러올 수 없습니다: ${error.message}`,\n    );\n    resetCurrentWork();\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 작업 시작\nasync function startWork() {\n  if (!isWorking.value) {\n    try {\n      loading.value = true;\n      loadingMessage.value = \"작업을 시작하는 중...\";\n\n      // 실제 API 호출 (package service 사용)\n      const response = await axios.put(\n        `/packages/${currentWork.value.work_order_no}`,\n        {\n          step_status: \"WORKING\",\n          input_qty: inputQuantity.value,\n          start_time: new Date().toISOString(),\n          employee_id: currentWork.value.employee_id,\n        },\n      );\n\n      if (response.data.success) {\n        addLog(\"작업이 시작되었습니다. (실제 DB 업데이트됨)\", \"success\");\n\n        // 상태 업데이트\n        isWorking.value = true;\n        workStatus.value = \"WORKING\";\n        workStartTime.value = new Date();\n        currentWork.value.start_time = workStartTime.value;\n        currentWork.value.current_quantity = inputQuantity.value;\n\n        // 진행률 초기화\n        productionSettings.value.targetQty = inputQuantity.value;\n        productionSettings.value.currentProgress =\n          currentWork.value.output_qty || 0;\n\n        updateCurrentWorkInfo();\n        startWorkTimer();\n        startProductionSimulation();\n\n        addLog(\n          `목표수량: ${formatNumber(\n            inputQuantity.value,\n          )}개로 작업을 시작했습니다.`,\n          \"success\",\n        );\n      } else {\n        throw new Error(response.data.message || \"작업 시작 실패\");\n      }\n    } catch (error) {\n      console.error(\"작업 시작 실패:\", error);\n      showErrorMessage(`작업 시작 실패: ${error.message}`);\n    } finally {\n      loading.value = false;\n    }\n  } else {\n    pauseProduction();\n  }\n}\n\n// 작업 완료\nasync function confirmCompleteWork() {\n  try {\n    loading.value = true;\n    loadingMessage.value = \"작업을 완료하는 중...\";\n\n    // 실제 API 호출\n    const response = await axios.put(\n      `/packages/${currentWork.value.work_order_no}/complete`,\n      {\n        output_qty: currentWork.value.output_qty,\n        defect_qty: currentWork.value.defect_qty,\n        end_time: new Date().toISOString(),\n        employee_id: currentWork.value.employee_id,\n      },\n    );\n\n    if (response.data.success) {\n      addLog(\"작업이 완료되었습니다. (실제 DB 업데이트됨)\", \"success\");\n\n      // 내포장 완료 시 외포장 연계\n      if (workInfo.value.lineType === \"INNER\") {\n        await processInnerToOuterWorkflow();\n      }\n\n      isWorking.value = false;\n      workStatus.value = \"COMPLETED\";\n\n      if (workTimer) {\n        clearInterval(workTimer);\n        workTimer = null;\n      }\n      if (productionTimer) {\n        clearInterval(productionTimer);\n        productionTimer = null;\n      }\n\n      closeCompleteModal();\n\n      // 워크플로우에 따른 분기\n      if (workInfo.value.lineType === \"INNER\") {\n        addLog(\n          \"내포장 작업 완료 - 외포장 라인 선택으로 이동합니다...\",\n          \"success\",\n        );\n        startAutoTransitionToLineSelection();\n      } else {\n        addLog(\"모든 포장 작업이 완료되었습니다!\", \"success\");\n        startAutoTransitionToLineSelection();\n      }\n    } else {\n      throw new Error(response.data.message || \"작업 완료 실패\");\n    }\n  } catch (error) {\n    console.error(\"작업 완료 실패:\", error);\n    addLog(`작업 완료 처리 중 오류: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 내포장→외포장 워크플로우 연계\nasync function processInnerToOuterWorkflow() {\n  try {\n    console.log(\"내포장→외포장 워크플로우 연계 시작\");\n\n    const baseLineName = workInfo.value.lineName.replace(\n      /\\s*(내포장|외포장).*$/,\n      \"\",\n    );\n\n    const linkageData = {\n      base_line_name: baseLineName,\n      inner_work_order_no: currentWork.value.work_order_no,\n      inner_output_qty: currentWork.value.output_qty,\n      inner_completion_time: new Date().toISOString(),\n      completion_type: \"complete\",\n      completed_by: currentWork.value.employee_id,\n    };\n\n    const response = await axios.post(\n      \"/packages/workflow/update-outer-linkage\",\n      linkageData,\n    );\n\n    if (response.data.success) {\n      addLog(\n        `${baseLineName} 외포장에 워크플로우 연계 완료 (${formatNumber(\n          currentWork.value.output_qty,\n        )}개)`,\n        \"success\",\n      );\n\n      // 메모리에도 저장\n      if (!window.workflowData) window.workflowData = {};\n      const workflowKey = `workflow_${baseLineName.replace(/\\s+/g, \"_\")}`;\n      window.workflowData[workflowKey] = {\n        inner_work_order_no: currentWork.value.work_order_no,\n        inner_output_qty: currentWork.value.output_qty,\n        inner_completion_time: new Date().toISOString(),\n        completion_type: \"complete\",\n      };\n    } else {\n      console.warn(\"워크플로우 연계 실패:\", response.data.message);\n    }\n  } catch (error) {\n    console.error(\"워크플로우 연계 실패:\", error);\n    addLog(\"외포장 연계에 실패했지만 작업은 완료되었습니다.\", \"warning\");\n  }\n}\n\n// 작업번호에서 숫자 추출\nfunction extractWorkNumber(workNo) {\n  if (!workNo) return 0;\n  const match = workNo.toString().match(/\\d+/);\n  return match ? parseInt(match[0], 10) : 0;\n}\n\n// 자동 작업번호 선택\nasync function autoSelectFirstAvailableWork() {\n  if (availableWorkOrders.value.length === 0) {\n    console.log(\"자동 선택할 작업번호가 없음\");\n    return;\n  }\n\n  const priorityWorks = [\n    ...workingWorks.value,\n    ...pausedWorks.value,\n    ...readyWorks.value,\n  ];\n\n  if (priorityWorks.length > 0) {\n    const firstWork = priorityWorks[0];\n    console.log(\n      `자동 선택: ${firstWork.work_order_no} (상태: ${getWorkStatusText(\n        firstWork.step_status,\n      )})`,\n    );\n\n    selectedWorkOrder.value = firstWork.work_order_no;\n    await onWorkOrderChange();\n\n    addLog(\n      `자동 선택: ${firstWork.work_order_no} - ${\n        firstWork.product_name || firstWork.final_product_name\n      }`,\n      \"success\",\n    );\n  }\n}\n\n// 재시도 작업번호 선택\nasync function selectWorkOrderWithRetry(workNo, maxRetries = 2) {\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      console.log(`작업번호 ${workNo} 선택 시도 ${attempt}/${maxRetries}`);\n\n      const foundWork = availableWorkOrders.value.find(\n        (work) => work.work_order_no === workNo,\n      );\n\n      if (foundWork) {\n        selectedWorkOrder.value = workNo;\n        await onWorkOrderChange();\n        console.log(`작업번호 ${workNo} 선택 성공`);\n        addLog(`URL에서 작업번호 ${workNo}가 선택되었습니다.`, \"info\");\n        return;\n      } else {\n        console.log(\n          `시도 ${attempt}: 작업번호 ${workNo}를 목록에서 찾을 수 없음`,\n        );\n\n        if (attempt < maxRetries) {\n          await loadRealWorkOrders();\n        }\n      }\n    } catch (error) {\n      console.error(`시도 ${attempt} 실패:`, error);\n      if (attempt === maxRetries) {\n        addLog(`작업번호 ${workNo} 선택에 실패했습니다.`, \"warning\");\n      }\n    }\n  }\n}\n\n// 강력 새로고침\nasync function refreshWorkOrders() {\n  try {\n    addLog(\"강력 새로고침을 시작합니다...\", \"info\");\n    loading.value = true;\n    loadingMessage.value = \"강력 새로고침 중 (실제 DB 재조회)...\";\n\n    const currentSelectedWork = selectedWorkOrder.value;\n\n    // 초기화\n    availableWorkOrders.value = [];\n    debugInfo.value.lastApiResponse = null;\n\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    // 테이블 구조 재확인\n    await checkTableStructure();\n\n    // 다시 로드\n    await loadRealWorkOrders();\n\n    if (workInfo.value.lineType === \"OUTER\") {\n      await loadWorkflowData();\n    }\n\n    // 이전 선택 복원\n    if (currentSelectedWork) {\n      const stillExists = availableWorkOrders.value.find(\n        (work) => work.work_order_no === currentSelectedWork,\n      );\n      if (stillExists) {\n        selectedWorkOrder.value = currentSelectedWork;\n        await onWorkOrderChange();\n        addLog(`이전 작업(${currentSelectedWork})을 복원했습니다.`, \"success\");\n      } else {\n        addLog(\n          `이전 작업(${currentSelectedWork})을 찾을 수 없어 자동 선택합니다.`,\n          \"warning\",\n        );\n        await autoSelectFirstAvailableWork();\n      }\n    } else {\n      await autoSelectFirstAvailableWork();\n    }\n\n    addLog(\"강력 새로고침이 완료되었습니다. (실제 DB 기반)\", \"success\");\n  } catch (error) {\n    console.error(\"강력 새로고침 실패:\", error);\n    addLog(`강력 새로고침 실패: ${error.message}`, \"error\");\n\n    if (\n      error.message.includes(\"Unknown column\") ||\n      error.message.includes(\"table\")\n    ) {\n      showDebugPanel.value = true;\n      addLog(\n        \"데이터베이스 구조 문제가 감지되어 디버깅 패널을 활성화했습니다.\",\n        \"warning\",\n      );\n    }\n\n    if (confirm(\"새로고침에 실패했습니다. 페이지를 새로고침하시겠습니까?\")) {\n      window.location.reload();\n    }\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 투입수량 변경 감지\nwatch(inputQuantity, (newQuantity) => {\n  if (selectedWorkOrder.value && newQuantity > 0) {\n    if (\n      workInfo.value.lineType === \"OUTER\" &&\n      workflowInfo.value.innerCompleted &&\n      workflowInfo.value.innerOutputQty > 0\n    ) {\n      if (newQuantity !== workflowInfo.value.innerOutputQty) {\n        addLog(\n          `워크플로우 연계 중입니다. 투입수량은 내포장 완료수량으로 고정됩니다.`,\n          \"warning\",\n        );\n        nextTick(() => {\n          inputQuantity.value = workflowInfo.value.innerOutputQty;\n        });\n      }\n      return;\n    }\n\n    currentWork.value.current_quantity = newQuantity;\n    updateCurrentWorkInfo();\n  }\n});\n\nonUnmounted(() => {\n  if (workTimer) {\n    clearInterval(workTimer);\n    workTimer = null;\n  }\n  if (productionTimer) {\n    clearInterval(productionTimer);\n    productionTimer = null;\n  }\n});\n\n// 투입수량 변경 핸들러\nfunction onInputQuantityChange() {\n  if (selectedWorkOrder.value && inputQuantity.value > 0) {\n    if (\n      workInfo.value.lineType === \"OUTER\" &&\n      workflowInfo.value.innerCompleted &&\n      workflowInfo.value.innerOutputQty > 0\n    ) {\n      console.log(\"외포장 워크플로우 연계 중 - 투입수량 변경 제한\");\n      return;\n    }\n\n    currentWork.value.current_quantity = inputQuantity.value;\n    updateCurrentWorkInfo();\n  }\n}\n\n// 생산 일시정지\nfunction pauseProduction() {\n  isWorking.value = false;\n  workStatus.value = \"PAUSED\";\n\n  if (productionTimer) {\n    clearInterval(productionTimer);\n    productionTimer = null;\n  }\n\n  if (workTimer) {\n    clearInterval(workTimer);\n    workTimer = null;\n  }\n\n  addLog(\"작업을 일시정지했습니다.\", \"warning\");\n}\n\n// 생산 재시작\nfunction resumeProduction() {\n  isWorking.value = true;\n  workStatus.value = \"WORKING\";\n\n  startWorkTimer();\n  startProductionSimulation();\n\n  addLog(\"작업을 재시작했습니다.\", \"success\");\n}\n\n// 생산 시뮬레이션 시작\nfunction startProductionSimulation() {\n  if (productionTimer) {\n    clearInterval(productionTimer);\n  }\n\n  addLog(\"생산 시뮬레이션을 시작합니다...\", \"info\");\n\n  productionTimer = setInterval(() => {\n    if (!isWorking.value) return;\n\n    const increment = productionSettings.value.productionSpeed;\n    productionSettings.value.currentProgress = Math.min(\n      productionSettings.value.currentProgress + increment,\n      productionSettings.value.targetQty,\n    );\n\n    const totalProduced = productionSettings.value.currentProgress;\n    const defectQty = Math.floor(\n      totalProduced * productionSettings.value.defectRate,\n    );\n    const passQty = totalProduced - defectQty;\n\n    const totalTargetQty =\n      currentWork.value.target_quantity || productionSettings.value.targetQty;\n    currentWork.value.output_qty = passQty;\n    currentWork.value.defect_qty = defectQty;\n    currentWork.value.progressRate = Math.min(\n      100,\n      Math.round((passQty / totalTargetQty) * 100),\n    );\n    currentWork.value.passRate =\n      totalProduced > 0 ? Math.round((passQty / totalProduced) * 100) : 0;\n    currentWork.value.defectRate =\n      totalProduced > 0 ? Math.round((defectQty / totalProduced) * 100) : 0;\n\n    updateCurrentWorkInfo();\n\n    if (\n      totalProduced > 0 &&\n      totalProduced % (productionSettings.value.productionSpeed * 5) === 0\n    ) {\n      addLog(\n        `생산 진행: ${passQty}개 완료 (불량: ${defectQty}개, 진행률: ${currentWork.value.progressRate}%)`,\n        \"info\",\n      );\n    }\n\n    if (totalProduced >= productionSettings.value.targetQty) {\n      autoCompleteProduction();\n    }\n  }, 1000);\n}\n\n// 자동 완료\nfunction autoCompleteProduction() {\n  if (productionTimer) {\n    clearInterval(productionTimer);\n    productionTimer = null;\n  }\n\n  isWorking.value = false;\n  workStatus.value = \"COMPLETED\";\n\n  addLog(\"생산이 완료되었습니다!\", \"success\");\n  addLog('\"완료 처리\" 버튼을 눌러 작업을 마무리해주세요.', \"info\");\n}\n\n// 생산 완료 버튼\nfunction completeProduction() {\n  if (workStatus.value === \"COMPLETED\" || !isWorking.value) {\n    showCompleteModal.value = true;\n    return;\n  }\n\n  showCompleteModal.value = true;\n}\n\n// 작업 종료\nasync function stopWork() {\n  try {\n    isWorking.value = false;\n    workStatus.value = \"COMPLETED\";\n\n    if (workTimer) {\n      clearInterval(workTimer);\n      workTimer = null;\n    }\n    if (productionTimer) {\n      clearInterval(productionTimer);\n      productionTimer = null;\n    }\n\n    addLog(\"작업을 강제 종료했습니다.\", \"info\");\n  } catch (error) {\n    console.error(\"작업 종료 실패:\", error);\n    showErrorMessage(\"작업 종료 처리에 실패했습니다.\");\n  }\n}\n\n// 부분 완료 처리\nasync function confirmPartialComplete() {\n  try {\n    loading.value = true;\n    loadingMessage.value = \"부분 완료 처리 중...\";\n\n    const response = await axios.put(\n      `/packages/${currentWork.value.work_order_no}/partial-complete`,\n      {\n        output_qty: currentWork.value.output_qty,\n        defect_qty: currentWork.value.defect_qty,\n        remaining_qty: getRemainingQuantity(),\n        completion_rate: getCompletionRate(),\n        employee_id: currentWork.value.employee_id,\n      },\n    );\n\n    if (response.data.success) {\n      addLog(\n        `부분 완료 처리되었습니다. (달성률: ${getCompletionRate()}%) - 실제 DB 업데이트됨`,\n        \"warning\",\n      );\n\n      isWorking.value = false;\n      workStatus.value = \"PARTIAL_COMPLETE\";\n\n      if (workTimer) {\n        clearInterval(workTimer);\n        workTimer = null;\n      }\n      if (productionTimer) {\n        clearInterval(productionTimer);\n        productionTimer = null;\n      }\n\n      closeCompleteModal();\n\n      if (getRemainingQuantity() > 0) {\n        addLog(\n          `지시수량 미달성: ${formatNumber(getRemainingQuantity())}개 남음`,\n          \"warning\",\n        );\n        addLog(\n          `나중에 같은 작업번호를 선택하여 계속 작업할 수 있습니다.`,\n          \"info\",\n        );\n      }\n    }\n  } catch (error) {\n    console.error(\"부분 완료 처리 실패:\", error);\n    addLog(`부분 완료 처리 중 오류: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 나중에 계속하기\nasync function confirmContinueLater() {\n  try {\n    loading.value = true;\n    loadingMessage.value = \"일시정지 처리 중...\";\n\n    const response = await axios.put(\n      `/packages/${currentWork.value.work_order_no}/pause`,\n      {\n        output_qty: currentWork.value.output_qty,\n        defect_qty: currentWork.value.defect_qty,\n        remaining_qty: getRemainingQuantity(),\n        completion_rate: getCompletionRate(),\n        employee_id: currentWork.value.employee_id,\n      },\n    );\n\n    if (response.data.success) {\n      addLog(\n        \"일시정지되었습니다. 나중에 계속할 수 있습니다. (실제 DB 업데이트됨)\",\n        \"info\",\n      );\n    }\n\n    isWorking.value = false;\n    workStatus.value = \"PAUSED\";\n\n    if (workTimer) {\n      clearInterval(workTimer);\n      workTimer = null;\n    }\n    if (productionTimer) {\n      clearInterval(productionTimer);\n      productionTimer = null;\n    }\n\n    closeCompleteModal();\n\n    setTimeout(() => {\n      goBackToLineSelection();\n    }, 2000);\n  } catch (error) {\n    console.error(\"일시정지 처리 실패:\", error);\n    addLog(`일시정지 처리 중 오류: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 라인 초기화\nasync function resetLineStatus() {\n  if (!confirm(\"이 라인의 작업 상태를 초기화하시겠습니까?\")) {\n    return;\n  }\n\n  try {\n    loading.value = true;\n    loadingMessage.value = \"라인 상태 초기화 중...\";\n\n    addLog(\"라인 상태를 초기화했습니다.\", \"success\");\n\n    await refreshWorkOrders();\n  } catch (error) {\n    console.error(\"라인 초기화 실패:\", error);\n    addLog(`라인 초기화 실패: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 현재 작업 정보 업데이트\nfunction updateCurrentWorkInfo() {\n  if (currentWork.value.target_quantity > 0) {\n    currentWork.value.remaining_quantity = Math.max(\n      0,\n      currentWork.value.target_quantity - currentWork.value.current_quantity,\n    );\n\n    currentWork.value.achievementRate = Math.round(\n      (currentWork.value.output_qty / currentWork.value.target_quantity) * 100,\n    );\n  } else {\n    currentWork.value.remaining_quantity = 0;\n    currentWork.value.achievementRate = 0;\n  }\n\n  if (isWorking.value && productionSettings.value.productionSpeed > 0) {\n    const remainingQty =\n      productionSettings.value.targetQty -\n      productionSettings.value.currentProgress;\n    const remainingSeconds =\n      remainingQty / productionSettings.value.productionSpeed;\n    currentWork.value.end_time = new Date(Date.now() + remainingSeconds * 1000);\n    currentWork.value.estimated_duration = Math.ceil(remainingSeconds);\n  }\n}\n\n// 작업 정보 리셋\nfunction resetCurrentWork() {\n  currentWork.value = {\n    work_order_no: \"\",\n    result_detail_id: null,\n    result_id: \"\",\n    product_name: \"\",\n    product_code: \"\",\n    package_type: \"\",\n    target_quantity: 0,\n    current_quantity: 0,\n    remaining_quantity: 0,\n    output_qty: 0,\n    defect_qty: 0,\n    progressRate: 0,\n    passRate: 0,\n    defectRate: 0,\n    achievementRate: 0,\n    employee_id: 2,\n    worker_name: \"김포장\",\n    department: \"포장부\",\n    position: \"작업자\",\n    start_time: null,\n    end_time: null,\n    work_duration: 0,\n    estimated_duration: 0,\n    step_status: \"READY\",\n    process_code: \"\",\n    eq_type_code: \"\",\n    _original_keys: [],\n    _processed_at: null,\n  };\n}\n\n// 에러 처리\nfunction showErrorMessage(message) {\n  errorMessage.value = message;\n  showError.value = true;\n  addLog(message, \"error\");\n}\n\nfunction hideError() {\n  showError.value = false;\n}\n\nasync function retryConnection() {\n  hideError();\n  try {\n    await refreshWorkOrders();\n  } catch (error) {\n    showErrorMessage(\"재연결에 실패했습니다.\");\n  }\n}\n\n// 로그 추가\nfunction addLog(message, type = \"info\") {\n  workLogs.value.unshift({\n    id: Date.now(),\n    timestamp: new Date(),\n    message,\n    type,\n  });\n\n  if (workLogs.value.length > 50) {\n    workLogs.value = workLogs.value.slice(0, 50);\n  }\n\n  console.log(`[${type.toUpperCase()}] ${message}`);\n}\n\n// 모달 제어\nfunction closeCompleteModal() {\n  showCompleteModal.value = false;\n}\n\n// 라인 선택으로 돌아가기\nfunction goBackToLineSelection() {\n  if (isWorking.value) {\n    if (!confirm(\"진행 중인 작업이 있습니다. 정말 돌아가시겠습니까?\")) {\n      return;\n    }\n  }\n\n  const queryParams = {\n    from_work: \"true\",\n    maintain_type: workInfo.value.lineType,\n    current_work: currentWork.value.work_order_no,\n  };\n\n  if (workflowInfo.value.step === \"OUTER\") {\n    queryParams.inner_work_order_no = workflowInfo.value.innerWorkNo;\n    queryParams.inner_completed = \"true\";\n  }\n\n  router.push({\n    name: \"package_line\",\n    query: queryParams,\n  });\n}\n\n// 작업 버튼 핸들러\nfunction handleWorkButton() {\n  if (workStatus.value === \"READY\") {\n    startWork();\n  } else if (workStatus.value === \"WORKING\") {\n    pauseProduction();\n  } else if (workStatus.value === \"PAUSED\") {\n    resumeProduction();\n  }\n}\n\n// 자동 전환 함수\nfunction startAutoTransitionToLineSelection() {\n  console.log(\"자동 전환 시작\");\n  showAutoTransition.value = true;\n  transitionProgress.value = 0;\n\n  const duration = 3000;\n  const interval = 50;\n  const increment = 100 / (duration / interval);\n\n  const progressTimer = setInterval(() => {\n    transitionProgress.value += increment;\n\n    if (transitionProgress.value >= 100) {\n      clearInterval(progressTimer);\n      showAutoTransition.value = false;\n\n      let queryParams = {};\n\n      if (workInfo.value.lineType === \"INNER\") {\n        queryParams = {\n          inner_completed: \"true\",\n          prev_work: currentWork.value.work_order_no,\n          inner_work_order_no: currentWork.value.work_order_no,\n          inner_output_qty: currentWork.value.output_qty,\n          inner_completion_time: new Date().toISOString(),\n          auto_start_guide: \"true\",\n          message: `내포장 작업(${\n            currentWork.value.work_order_no\n          })이 완료되었습니다. 완료수량 ${formatNumber(\n            currentWork.value.output_qty,\n          )}개를 외포장에 투입하세요.`,\n          success_message: \"내포장 작업이 성공적으로 완료되었습니다!\",\n        };\n      } else {\n        queryParams = {\n          outer_completed: \"true\",\n          prev_work: currentWork.value.work_order_no,\n          prev_inner_work: workflowInfo.value.innerWorkNo,\n          message: `모든 포장 작업이 완료되었습니다! 내포장(${workflowInfo.value.innerWorkNo}) + 외포장(${currentWork.value.work_order_no})`,\n          success_message: \"전체 포장 프로세스가 성공적으로 완료되었습니다!\",\n        };\n      }\n\n      router.push({\n        name: \"package_line\",\n        query: queryParams,\n      });\n\n      addLog(\"라인 선택 페이지로 이동했습니다.\", \"success\");\n    }\n  }, interval);\n}\n\n// 워크플로우 관련 텍스트 함수들\nfunction getWorkflowStepText() {\n  if (workflowInfo.value.step === \"OUTER\") {\n    return \"외포장 (2단계)\";\n  } else if (workflowInfo.value.step === \"INNER\") {\n    return \"내포장 (1단계)\";\n  }\n  return workInfo.value.lineType === \"INNER\" ? \"내포장\" : \"외포장\";\n}\n\nfunction getCompleteModalTitle() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"내포장 작업 완료 확인\";\n  } else {\n    return \"외포장 작업 완료 확인\";\n  }\n}\n\nfunction getConfirmationText() {\n  if (isPartialCompletion.value) {\n    const remainingQty = getRemainingQuantity();\n    if (remainingQty > 0) {\n      return `지시량 ${formatNumber(\n        currentWork.value.target_quantity,\n      )}개 중 ${formatNumber(\n        currentWork.value.output_qty,\n      )}개만 완료되었습니다. 남은 ${formatNumber(\n        remainingQty,\n      )}개는 어떻게 처리하시겠습니까?`;\n    }\n  }\n\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"내포장 작업을 완료하고 외포장 라인 선택으로 이동하시겠습니까?\";\n  } else {\n    return \"외포장 작업을 완료하시겠습니까? 모든 포장 단계가 완료됩니다.\";\n  }\n}\n\nfunction getCompleteButtonText() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"내포장 완료 → 외포장 선택\";\n  } else {\n    return \"외포장 완료 → 전체 완료\";\n  }\n}\n\nfunction getPartialCompleteButtonText() {\n  const remainingQty = getRemainingQuantity();\n\n  if (remainingQty > 0) {\n    return `부분완료로 저장 (남은: ${formatNumber(remainingQty)}개)`;\n  } else if (workInfo.value.lineType === \"INNER\") {\n    return `내포장 완료 → 외포장 진행`;\n  } else {\n    return `외포장 완료`;\n  }\n}\n\nfunction getTransitionTitle() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"외포장 라인 선택으로 이동 중...\";\n  } else {\n    return \"작업 완료 - 라인 선택으로 이동 중...\";\n  }\n}\n\nfunction getTransitionMessage() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"내포장 작업이 완료되었습니다. 잠시 후 외포장이 활성화된 라인 선택 페이지로 이동합니다.\";\n  } else {\n    return \"모든 포장 작업이 완료되었습니다. 잠시 후 라인 선택 페이지로 이동합니다.\";\n  }\n}\n\n// 작업 버튼 텍스트\nfunction getWorkButtonText() {\n  if (isPartialWork.value && !isWorking.value) {\n    return \"부분완료 작업 시작\";\n  }\n\n  switch (workStatus.value) {\n    case \"READY\":\n      return \"작업 시작\";\n    case \"WORKING\":\n      return \"작업 일시정지\";\n    case \"PAUSED\":\n      return \"작업 재시작\";\n    case \"COMPLETED\":\n      return \"작업 완료됨\";\n    case \"PARTIAL_COMPLETE\":\n      return \"부분완료 작업 시작\";\n    default:\n      return \"작업 시작\";\n  }\n}\n\n// 작업 상태 텍스트\nfunction getWorkStatusText(status) {\n  const map = {\n    READY: \"준비\",\n    WORKING: \"작업중\",\n    IN_PROGRESS: \"작업중\",\n    PAUSED: \"일시정지\",\n    COMPLETED: \"완료\",\n    PARTIAL_COMPLETE: \"부분완료\",\n    partial_complete: \"부분완료\",\n    준비: \"준비\",\n    작업중: \"작업중\",\n    진행중: \"작업중\",\n    일시정지: \"일시정지\",\n    완료: \"완료\",\n    부분완료: \"부분완료\",\n  };\n  return map[status] || status || \"준비\";\n}\n\n// 작업 상태 클래스\nfunction getWorkStatusClass(status) {\n  const normalizedStatus = (status || \"\").toLowerCase();\n\n  if (\n    normalizedStatus.includes(\"ready\") ||\n    normalizedStatus.includes(\"준비\") ||\n    !status\n  ) {\n    return \"ready\";\n  } else if (\n    normalizedStatus.includes(\"working\") ||\n    normalizedStatus.includes(\"진행\") ||\n    normalizedStatus.includes(\"progress\")\n  ) {\n    return \"working\";\n  } else if (\n    normalizedStatus.includes(\"paused\") ||\n    normalizedStatus.includes(\"일시정지\")\n  ) {\n    return \"paused\";\n  } else if (\n    normalizedStatus.includes(\"completed\") ||\n    normalizedStatus.includes(\"완료\")\n  ) {\n    return \"completed\";\n  } else if (\n    normalizedStatus.includes(\"partial\") ||\n    normalizedStatus.includes(\"부분\")\n  ) {\n    return \"partial\";\n  }\n\n  return \"unknown\";\n}\n\n// 품질 등급 클래스\nfunction getQualityRateClass(rate) {\n  if (rate >= 98) return \"excellent\";\n  if (rate >= 95) return \"good\";\n  if (rate >= 90) return \"warning\";\n  return \"danger\";\n}\n\n// 달성률 클래스\nfunction getAchievementRateClass(rate) {\n  if (rate >= 100) return \"excellent\";\n  if (rate >= 90) return \"good\";\n  if (rate >= 70) return \"warning\";\n  return \"danger\";\n}\n\n// 유틸리티 함수들\nfunction formatNumber(num) {\n  return num ? num.toLocaleString() : \"0\";\n}\n\nfunction formatTime(date) {\n  if (!date) return \"-\";\n  return date instanceof Date\n    ? date.toLocaleTimeString(\"ko-KR\", { hour: \"2-digit\", minute: \"2-digit\" })\n    : new Date(date).toLocaleTimeString(\"ko-KR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n}\n\nfunction formatDateTime(date) {\n  if (!date) return \"-\";\n  return date instanceof Date\n    ? date.toLocaleString(\"ko-KR\", {\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n      })\n    : new Date(date).toLocaleString(\"ko-KR\", {\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n      });\n}\n\nfunction formatDuration(seconds) {\n  if (!seconds || seconds === 0) return \"-\";\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = seconds % 60;\n\n  if (hours > 0) {\n    return `${hours}시간 ${minutes}분`;\n  } else if (minutes > 0) {\n    return `${minutes}분 ${secs}초`;\n  } else {\n    return `${secs}초`;\n  }\n}\n\nfunction formatElapsedTime(ms) {\n  const hours = Math.floor(ms / (1000 * 60 * 60));\n  const minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((ms % (1000 * 60)) / 1000);\n\n  return `${hours.toString().padStart(2, \"0\")}:${minutes\n    .toString()\n    .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n}\n\n// 작업 타이머\nfunction startWorkTimer() {\n  workTimer = setInterval(() => {\n    if (workStartTime.value) {\n      const elapsed = new Date() - workStartTime.value;\n      workElapsedTime.value = formatElapsedTime(elapsed);\n      currentWork.value.work_duration = Math.floor(elapsed / 1000);\n    }\n  }, 1000);\n}\n</script>\n\n<style scoped>\n/* 디버깅 패널 스타일 */\n.debug-panel {\n  background: #1f2937;\n  color: white;\n  border-radius: 8px;\n  margin: 16px 24px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  border: 2px solid #374151;\n}\n\n.debug-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 20px;\n  border-bottom: 1px solid #374151;\n}\n\n.debug-header h3 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #f3f4f6;\n}\n\n.debug-close {\n  background: #374151;\n  color: #d1d5db;\n  border: none;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.debug-close:hover {\n  background: #4b5563;\n}\n\n.debug-content {\n  padding: 20px;\n}\n\n.debug-section {\n  margin-bottom: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #374151;\n}\n\n.debug-section:last-child {\n  border-bottom: none;\n  margin-bottom: 0;\n}\n\n.debug-section h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #10b981;\n}\n\n.debug-info {\n  font-size: 13px;\n  line-height: 1.5;\n}\n\n.debug-info p {\n  margin: 6px 0;\n  color: #d1d5db;\n}\n\n.debug-info strong {\n  color: #f3f4f6;\n}\n\n.column-list {\n  max-height: 150px;\n  overflow-y: auto;\n  margin: 8px 0;\n  padding-left: 16px;\n}\n\n.column-list li {\n  margin: 4px 0;\n  font-size: 12px;\n  color: #9ca3af;\n}\n\n.debug-actions {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.debug-btn {\n  background: #065f46;\n  color: white;\n  border: none;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.debug-btn:hover {\n  background: #047857;\n}\n\n.debug-toggle {\n  background: #374151;\n  color: #d1d5db;\n  border: none;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.debug-toggle:hover {\n  background: #4b5563;\n}\n\n.panel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.panel-header h3 {\n  margin: 0;\n}\n\n/* 디버깅 정보 스타일 */\n.debug-section {\n  background: #f8fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 12px;\n  margin-top: 8px;\n}\n\n.debug-section h4 {\n  color: #475569;\n  font-size: 14px;\n  margin: 0 0 8px 0;\n}\n\n.debug-keys {\n  font-family: monospace;\n  font-size: 11px;\n  color: #64748b;\n  background: #f1f5f9;\n  padding: 2px 4px;\n  border-radius: 3px;\n}\n\n/* 워크플로우 연계 관련 스타일 */\n.workflow-linked {\n  background: linear-gradient(135deg, #ecfdf5, #d1fae5) !important;\n  border-color: #10b981 !important;\n  color: #065f46 !important;\n  font-weight: 600;\n}\n\n.workflow-linked-info {\n  font-size: 12px;\n  color: #059669;\n  margin-top: 4px;\n  padding: 8px 12px;\n  background: #ecfdf5;\n  border-radius: 6px;\n  border: 1px solid #bbf7d0;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.control-input:disabled.workflow-linked {\n  opacity: 0.8;\n  cursor: not-allowed;\n}\n\n.info-value.workflow-linked {\n  color: #059669;\n  font-weight: 700;\n  background: #ecfdf5;\n  padding: 2px 6px;\n  border-radius: 4px;\n  border: 1px solid #bbf7d0;\n}\n\n/* 부분완료 작업 강조 스타일 */\n.control-input.partial-work {\n  background: linear-gradient(135deg, #fef3c7, #fde68a) !important;\n  border-color: #f59e0b !important;\n  color: #92400e !important;\n  font-weight: 600;\n}\n\n.partial-work-info {\n  font-size: 12px;\n  color: #d97706;\n  margin-top: 4px;\n  padding: 8px 12px;\n  background: #fef3c7;\n  border-radius: 6px;\n  border: 1px solid #fde68a;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.partial-completion-info {\n  margin: 20px 0;\n}\n\n.warning-box {\n  display: flex;\n  align-items: flex-start;\n  gap: 16px;\n  background: linear-gradient(135deg, #fef3c7, #fde68a);\n  border: 2px solid #f59e0b;\n  border-radius: 12px;\n  padding: 20px;\n}\n\n.warning-content h5 {\n  margin: 0 0 12px 0;\n  font-size: 16px;\n  font-weight: 700;\n  color: #92400e;\n}\n\n.completion-stats {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 8px;\n  margin: 12px 0;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.7);\n  border-radius: 8px;\n  border: 1px solid rgba(245, 158, 11, 0.3);\n}\n\n.stat-item {\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n}\n\n.stat-label {\n  color: #92400e;\n  font-weight: 500;\n}\n\n.stat-value {\n  color: #1e293b;\n  font-weight: 600;\n}\n\n.stat-value.shortage {\n  color: #dc2626;\n  font-weight: 700;\n}\n\n.warning-text {\n  margin: 12px 0 0 0;\n  color: #92400e;\n  line-height: 1.5;\n  font-weight: 500;\n}\n\n.completion-options {\n  display: flex;\n  gap: 8px;\n}\n\n.work-controls {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.main-actions {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.sub-actions {\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n}\n\n.btn {\n  padding: 10px 16px;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  min-width: 80px;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.btn-work {\n  background: #3b82f6;\n  color: white;\n}\n\n.btn-work.working {\n  background: #f59e0b;\n}\n\n.btn-complete {\n  background: #10b981;\n  color: white;\n}\n\n.btn-complete.ready {\n  background: #8b5cf6;\n}\n\n.btn-stop {\n  background: #ef4444;\n  color: white;\n}\n\n.btn-refresh,\n.btn-reset {\n  background: linear-gradient(135deg, #6b7280, #4b5563);\n  color: white;\n  min-width: 60px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n}\n\n.btn-refresh:hover:not(:disabled) {\n  background: linear-gradient(135deg, #4b5563, #374151);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(107, 114, 128, 0.3);\n}\n\n.btn-reset:hover:not(:disabled) {\n  background: linear-gradient(135deg, #4b5563, #374151);\n}\n\n.btn:hover:not(:disabled) {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.btn-partial {\n  background: #f59e0b;\n  color: white;\n  flex: 1;\n  padding: 14px 20px;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-partial:hover {\n  background: #d97706;\n  transform: translateY(-1px);\n}\n\n.btn-continue {\n  background: #6b7280;\n  color: white;\n  flex: 1;\n  padding: 14px 20px;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-continue:hover {\n  background: #4b5563;\n  transform: translateY(-1px);\n}\n\n@media (max-width: 768px) {\n  .work-controls {\n    gap: 8px;\n  }\n\n  .main-actions {\n    justify-content: center;\n  }\n\n  .sub-actions {\n    justify-content: center;\n    margin-left: 0;\n  }\n\n  .btn {\n    flex: 1;\n    min-width: 0;\n  }\n\n  .debug-panel {\n    margin: 16px;\n  }\n\n  .debug-actions {\n    justify-content: center;\n  }\n}\n\n/* 기존 스타일들 */\n.workflow-info {\n  color: #059669;\n  font-weight: 600;\n  font-size: 12px;\n}\n\n.workflow-suggestion {\n  font-size: 12px;\n  color: #f59e0b;\n  margin-top: 4px;\n  padding: 4px 8px;\n  background: #fef3c7;\n  border-radius: 4px;\n  border-left: 3px solid #f59e0b;\n}\n\n.output-qty {\n  color: #059669;\n  font-weight: 600;\n  background: #ecfdf5;\n  padding: 4px 8px;\n  border-radius: 6px;\n  border: 1px solid #bbf7d0;\n}\n\n.guide-stats {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n}\n\n.detail-value.highlight {\n  color: #059669;\n  font-weight: 700;\n  background: #ecfdf5;\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n/* 기본 스타일들 */\n.package-work-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f8fafc, #e2e8f0);\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n}\n\n.work-header {\n  background: white;\n  padding: 20px 24px;\n  border-bottom: 2px solid #e2e8f0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.breadcrumb {\n  font-size: 14px;\n  color: #64748b;\n  margin-bottom: 16px;\n}\n\n.breadcrumb-separator {\n  margin: 0 8px;\n}\n\n.breadcrumb-item.active {\n  color: #1e293b;\n  font-weight: 600;\n}\n\n.header-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n}\n\n.header-left h1 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1e293b;\n  margin: 0 0 8px 0;\n}\n\n.header-meta {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n}\n\n.line-type-badge,\n.work-status-badge,\n.workflow-badge {\n  padding: 4px 12px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: 600;\n}\n\n.line-type-badge.inner {\n  background: #dbeafe;\n  color: #1d4ed8;\n}\n\n.line-type-badge.outer {\n  background: #ecfdf5;\n  color: #166534;\n}\n\n.work-status-badge.ready {\n  background: #f3f4f6;\n  color: #374151;\n}\n\n.work-status-badge.working {\n  background: #dbeafe;\n  color: #1d4ed8;\n}\n\n.work-status-badge.paused {\n  background: #fef3c7;\n  color: #a16207;\n}\n\n.work-status-badge.completed {\n  background: #dcfce7;\n  color: #166534;\n}\n\n.workflow-badge {\n  background: linear-gradient(135deg, #10b981, #059669);\n  color: white;\n}\n\n.workflow-indicator {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 12px 20px;\n  background: #f8fafc;\n  border-radius: 12px;\n  border: 2px solid #e2e8f0;\n}\n\n.workflow-step {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  padding: 8px;\n  border-radius: 8px;\n  opacity: 0.5;\n  transition: all 0.3s ease;\n}\n\n.workflow-step.completed {\n  background: #ecfdf5;\n  border: 2px solid #10b981;\n  opacity: 1;\n}\n\n.workflow-step.active {\n  background: #eff6ff;\n  border: 2px solid #3b82f6;\n  opacity: 1;\n  animation: pulse 2s infinite;\n}\n\n.step-text {\n  font-size: 11px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.workflow-arrow {\n  font-size: 16px;\n  color: #9ca3af;\n}\n\n.workflow-guide {\n  display: flex;\n  align-items: flex-start;\n  gap: 16px;\n  background: linear-gradient(135deg, #eff6ff, #dbeafe);\n  border: 2px solid #3b82f6;\n  border-radius: 12px;\n  padding: 20px 24px;\n  margin: 20px 24px;\n}\n\n.guide-content h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  font-weight: 700;\n  color: #1e40af;\n}\n\n.guide-content p {\n  margin: 0 0 12px 0;\n  color: #1e40af;\n  line-height: 1.5;\n}\n\n.work-content {\n  padding: 24px;\n}\n\n.work-layout {\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: 24px;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n.work-main {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.control-panel,\n.progress-panel,\n.log-panel {\n  background: white;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border: 2px solid #e2e8f0;\n}\n\n.control-panel h3,\n.progress-panel h3,\n.log-panel h3 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 20px 0;\n}\n\n.control-section {\n  margin-bottom: 24px;\n}\n\n.control-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.control-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.control-label {\n  font-size: 14px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.available-count,\n.target-info,\n.line-info {\n  font-size: 12px;\n  color: #64748b;\n  font-weight: 500;\n}\n\n.control-select,\n.control-input {\n  padding: 12px 16px;\n  border: 2px solid #d1d5db;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: border-color 0.2s;\n  background: white;\n}\n\n.control-select:focus,\n.control-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n}\n\n.control-select:disabled,\n.control-input:disabled {\n  background: #f9fafb;\n  color: #6b7280;\n  cursor: not-allowed;\n}\n\n.control-display {\n  display: flex;\n  align-items: baseline;\n  gap: 8px;\n  padding: 12px 16px;\n  background: #f8fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n}\n\n.display-value {\n  font-size: 18px;\n  font-weight: 700;\n  color: #1e293b;\n}\n\n.display-unit {\n  font-size: 14px;\n  color: #64748b;\n}\n\n.remaining-qty {\n  color: #ef4444;\n}\n\n.remaining-qty-highlight {\n  background: #fef2f2;\n  padding: 2px 6px;\n  border-radius: 4px;\n  border: 1px solid #fecaca;\n}\n\n.no-work-message,\n.loading-work-message {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  padding: 16px;\n  background: #fef3c7;\n  border: 2px solid #f59e0b;\n  border-radius: 8px;\n  margin-top: 8px;\n}\n\n.input-warning {\n  font-size: 12px;\n  color: #dc2626;\n  margin-top: 4px;\n  padding: 4px 8px;\n  background: #fecaca;\n  border-radius: 4px;\n  border-left: 3px solid #dc2626;\n}\n\n.selected-work-preview {\n  background: #f8fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 12px;\n  padding: 20px;\n  margin-top: 20px;\n}\n\n.selected-work-preview h4 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 16px 0;\n}\n\n.preview-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n}\n\n.preview-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.preview-item .label {\n  font-size: 14px;\n  color: #64748b;\n  font-weight: 500;\n}\n\n.preview-item .value {\n  font-size: 14px;\n  color: #1e293b;\n  font-weight: 600;\n}\n\n.preview-item .value.ready {\n  color: #6b7280;\n}\n\n.preview-item .value.working {\n  color: #3b82f6;\n}\n\n.preview-item .value.paused {\n  color: #f59e0b;\n}\n\n.preview-item .value.completed {\n  color: #10b981;\n}\n\n.progress-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.progress-card {\n  background: #f8fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 12px;\n  padding: 16px;\n  text-align: center;\n  transition: all 0.3s ease;\n}\n\n.progress-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n}\n\n.progress-card.info {\n  border-color: #3b82f6;\n  background: #eff6ff;\n}\n\n.progress-card.success {\n  border-color: #10b981;\n  background: #ecfdf5;\n}\n\n.progress-card.danger {\n  border-color: #ef4444;\n  background: #fef2f2;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.card-title {\n  font-size: 12px;\n  font-weight: 600;\n  color: #64748b;\n}\n\n.card-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1e293b;\n  margin-bottom: 4px;\n}\n\n.card-unit {\n  font-size: 12px;\n  color: #64748b;\n}\n\n.progress-section {\n  background: #f8fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 12px;\n  padding: 16px;\n}\n\n.progress-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.progress-percent {\n  font-size: 18px;\n  font-weight: 700;\n  color: #3b82f6;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 12px;\n  background: #e2e8f0;\n  border-radius: 6px;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(135deg, #3b82f6, #2563eb);\n  transition: width 0.3s ease;\n}\n\n.log-container {\n  max-height: 300px;\n  overflow-y: auto;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  background: #f8fafc;\n}\n\n.log-item {\n  display: flex;\n  gap: 12px;\n  padding: 12px 16px;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 14px;\n}\n\n.log-item:last-child {\n  border-bottom: none;\n}\n\n.log-item.success {\n  background: #ecfdf5;\n  border-left: 4px solid #10b981;\n}\n\n.log-item.warning {\n  background: #fef3c7;\n  border-left: 4px solid #f59e0b;\n}\n\n.log-item.error {\n  background: #fef2f2;\n  border-left: 4px solid #ef4444;\n}\n\n.log-item.info {\n  background: #eff6ff;\n  border-left: 4px solid #3b82f6;\n}\n\n.log-time {\n  font-size: 12px;\n  color: #64748b;\n  white-space: nowrap;\n  font-family: monospace;\n  min-width: 80px;\n}\n\n.log-content {\n  flex: 1;\n  color: #1e293b;\n  line-height: 1.4;\n}\n\n.work-sidebar {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.workflow-panel,\n.info-panel,\n.line-change-panel {\n  background: white;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border: 2px solid #e2e8f0;\n}\n\n.workflow-panel h3,\n.info-panel h3 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 20px 0;\n}\n\n.workflow-chain {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.chain-step {\n  padding: 16px;\n  border-radius: 12px;\n  border: 2px solid #e2e8f0;\n}\n\n.chain-step.completed {\n  background: #ecfdf5;\n  border-color: #10b981;\n}\n\n.chain-step.current {\n  background: #eff6ff;\n  border-color: #3b82f6;\n  animation: pulse 2s infinite;\n}\n\n.step-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n}\n\n.step-title {\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.step-details {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.detail-item {\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n}\n\n.detail-label {\n  color: #64748b;\n}\n\n.detail-value {\n  color: #1e293b;\n  font-weight: 600;\n}\n\n.chain-arrow {\n  text-align: center;\n  font-size: 20px;\n  color: #3b82f6;\n  margin: 8px 0;\n}\n\n.info-section {\n  margin-bottom: 20px;\n}\n\n.info-section h4 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 12px 0;\n  padding-bottom: 8px;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.info-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f1f5f9;\n  font-size: 14px;\n}\n\n.info-row:last-child {\n  border-bottom: none;\n}\n\n.info-label {\n  color: #64748b;\n  font-weight: 500;\n}\n\n.info-value {\n  color: #1e293b;\n  font-weight: 600;\n  text-align: right;\n}\n\n.info-value.achievement-rate.excellent {\n  color: #10b981;\n}\n\n.info-value.achievement-rate.good {\n  color: #3b82f6;\n}\n\n.info-value.achievement-rate.warning {\n  color: #f59e0b;\n}\n\n.info-value.achievement-rate.danger {\n  color: #ef4444;\n}\n\n.info-value.work-duration,\n.info-value.estimated-time {\n  font-family: monospace;\n  font-size: 13px;\n}\n\n.info-value.estimated-time.time-warning {\n  color: #ef4444;\n  animation: blink 1s infinite;\n}\n\n@keyframes blink {\n  0%,\n  50% {\n    opacity: 1;\n  }\n  51%,\n  100% {\n    opacity: 0.5;\n  }\n}\n\n.info-value.quality-rate.excellent {\n  color: #10b981;\n}\n\n.info-value.quality-rate.good {\n  color: #3b82f6;\n}\n\n.info-value.quality-rate.warning {\n  color: #f59e0b;\n}\n\n.info-value.quality-rate.danger {\n  color: #ef4444;\n}\n\n.info-value.defect-rate {\n  color: #ef4444;\n}\n\n.info-value.worker-name {\n  color: #3b82f6;\n}\n\n.line-change-panel {\n  text-align: center;\n}\n\n.btn-line-change {\n  width: 100%;\n  padding: 14px 20px;\n  background: linear-gradient(135deg, #6b7280, #4b5563);\n  color: white;\n  border: none;\n  border-radius: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-bottom: 12px;\n}\n\n.btn-line-change:hover {\n  background: linear-gradient(135deg, #4b5563, #374151);\n  transform: translateY(-1px);\n}\n\n.line-change-help {\n  font-size: 12px;\n  color: #64748b;\n  margin: 0;\n  line-height: 1.4;\n}\n\n/* 모달 스타일들 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background: white;\n  border-radius: 16px;\n  max-width: 600px;\n  width: 90%;\n  max-height: 80vh;\n  overflow-y: auto;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n  animation: modalSlideIn 0.3s ease-out;\n  border: 2px solid #e2e8f0;\n}\n\n@keyframes modalSlideIn {\n  0% {\n    opacity: 0;\n    transform: translateY(-20px) scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 24px 28px;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.modal-header h3 {\n  font-size: 20px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0;\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 24px;\n  color: #64748b;\n  cursor: pointer;\n  padding: 0;\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.modal-close:hover {\n  background: #f1f5f9;\n}\n\n.modal-body {\n  padding: 28px;\n}\n\n.complete-summary {\n  background: #f8fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.complete-summary h4 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 16px 0;\n}\n\n.summary-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n}\n\n.summary-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.summary-label {\n  font-size: 14px;\n  color: #64748b;\n  font-weight: 500;\n}\n\n.summary-value {\n  font-size: 14px;\n  color: #1e293b;\n  font-weight: 600;\n}\n\n.next-step-info {\n  margin: 20px 0;\n}\n\n.info-box {\n  display: flex;\n  align-items: flex-start;\n  gap: 16px;\n  padding: 20px;\n  border-radius: 12px;\n  border: 2px solid;\n}\n\n.inner-completion .info-box {\n  background: #eff6ff;\n  border-color: #3b82f6;\n}\n\n.outer-completion .info-box {\n  background: #ecfdf5;\n  border-color: #10b981;\n}\n\n.info-content h5 {\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  font-weight: 700;\n  color: #1e293b;\n}\n\n.info-content p {\n  margin: 0 0 12px 0;\n  color: #374151;\n  line-height: 1.5;\n}\n\n.info-content ul {\n  margin: 0;\n  padding-left: 20px;\n  color: #374151;\n}\n\n.info-content li {\n  margin-bottom: 4px;\n}\n\n.completion-chain {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 16px;\n}\n\n.chain-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  padding: 12px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.chain-text {\n  font-size: 12px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.chain-status {\n  font-size: 10px;\n  color: #10b981;\n  font-weight: 500;\n}\n\n.confirmation-text {\n  font-size: 16px;\n  color: #1e293b;\n  margin: 0;\n  text-align: center;\n  font-weight: 500;\n}\n\n.modal-actions {\n  display: flex;\n  gap: 12px;\n  padding: 24px 28px;\n  border-top: 2px solid #e2e8f0;\n}\n\n.btn-cancel,\n.btn-confirm {\n  flex: 1;\n  padding: 14px 20px;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-cancel {\n  background: #f1f5f9;\n  color: #64748b;\n  border: 2px solid #e2e8f0;\n}\n\n.btn-cancel:hover {\n  background: #e2e8f0;\n  transform: translateY(-1px);\n}\n\n.btn-confirm {\n  background: linear-gradient(135deg, #3b82f6, #2563eb);\n  color: white;\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n}\n\n.btn-confirm:hover {\n  background: linear-gradient(135deg, #2563eb, #1d4ed8);\n  transform: translateY(-1px);\n}\n\n/* 자동 전환 오버레이 */\n.auto-transition-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1100;\n  backdrop-filter: blur(8px);\n}\n\n.transition-modal {\n  background: white;\n  border-radius: 16px;\n  padding: 40px;\n  text-align: center;\n  max-width: 500px;\n  width: 90%;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n  border: 2px solid #e2e8f0;\n}\n\n.transition-modal h3 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1e293b;\n  margin: 0 0 16px 0;\n}\n\n.transition-modal p {\n  font-size: 16px;\n  color: #64748b;\n  margin: 0 0 24px 0;\n  line-height: 1.5;\n}\n\n.transition-progress {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.transition-progress .progress-bar {\n  flex: 1;\n  height: 8px;\n  background: #e2e8f0;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.transition-progress .progress-fill {\n  height: 100%;\n  background: linear-gradient(135deg, #10b981, #059669);\n  transition: width 0.1s linear;\n}\n\n.progress-text {\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n  min-width: 40px;\n}\n\n/* 로딩 및 에러 오버레이 */\n.loading-overlay,\n.error-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  backdrop-filter: blur(4px);\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #e2e8f0;\n  border-top: 4px solid #3b82f6;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 16px;\n}\n\n.loading-text {\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  text-align: center;\n}\n\n.error-modal {\n  background: white;\n  border-radius: 16px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n  border: 2px solid #ef4444;\n}\n\n.error-header {\n  padding: 20px 24px;\n  border-bottom: 2px solid #e2e8f0;\n  background: #fef2f2;\n}\n\n.error-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #dc2626;\n  margin: 0;\n}\n\n.error-body {\n  padding: 24px;\n}\n\n.error-body p {\n  margin: 0 0 8px 0;\n  color: #374151;\n  line-height: 1.5;\n}\n\n.error-help {\n  font-size: 14px;\n  color: #64748b;\n}\n\n.error-actions {\n  display: flex;\n  gap: 12px;\n  padding: 20px 24px;\n  border-top: 2px solid #e2e8f0;\n}\n\n.btn-error-close,\n.btn-retry {\n  flex: 1;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-error-close {\n  background: #f1f5f9;\n  color: #64748b;\n}\n\n.btn-error-close:hover {\n  background: #e2e8f0;\n}\n\n.btn-retry {\n  background: #ef4444;\n  color: white;\n}\n\n.btn-retry:hover {\n  background: #dc2626;\n}\n\n/* 애니메이션 */\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes pulse {\n  0%,\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.05);\n    opacity: 0.8;\n  }\n}\n\n/* 반응형 */\n@media (max-width: 1024px) {\n  .work-layout {\n    grid-template-columns: 1fr;\n    gap: 16px;\n  }\n\n  .control-row {\n    grid-template-columns: 1fr;\n    gap: 16px;\n  }\n\n  .progress-cards {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .preview-grid,\n  .summary-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n@media (max-width: 768px) {\n  .work-content {\n    padding: 16px;\n  }\n\n  .header-info {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n\n  .workflow-indicator {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .workflow-arrow {\n    transform: rotate(90deg);\n  }\n\n  .workflow-guide {\n    flex-direction: column;\n    text-align: center;\n  }\n\n  .progress-cards {\n    grid-template-columns: 1fr;\n  }\n\n  .modal-content {\n    width: 95%;\n  }\n\n  .modal-actions {\n    flex-direction: column;\n  }\n\n  .completion-options {\n    flex-direction: column;\n  }\n}\n\n@media (max-width: 480px) {\n  .control-panel,\n  .progress-panel,\n  .log-panel,\n  .workflow-panel,\n  .info-panel {\n    padding: 16px;\n  }\n\n  .transition-modal {\n    padding: 24px;\n  }\n\n  .transition-modal h3 {\n    font-size: 20px;\n  }\n}\n\n/* 접근성 개선 */\n@media (prefers-reduced-motion: reduce) {\n  .workflow-step.active,\n  .chain-step.current,\n  .loading-spinner {\n    animation: none;\n  }\n\n  .info-value.estimated-time.time-warning {\n    animation: none;\n    color: #ef4444;\n  }\n}\n\n/* 인쇄 스타일 */\n@media print {\n  .loading-overlay,\n  .error-overlay,\n  .auto-transition-overlay,\n  .modal-overlay {\n    display: none !important;\n  }\n\n  .work-layout {\n    grid-template-columns: 1fr;\n  }\n\n  .work-controls,\n  .line-change-panel {\n    display: none !important;\n  }\n}\n</style>\n"],"names":["axios","router","useRouter","route","useRoute","workInfo","ref","workflowInfo","showDebugPanel","debugInfo","loading","loadingMessage","showError","errorMessage","workStatus","isWorking","workStartTime","workElapsedTime","selectedWorkOrder","inputQuantity","availableWorkOrders","showAutoTransition","transitionProgress","isPartialWork","computed","currentWork","readyWorks","work","status","a","b","aWorkNo","extractWorkNumber","bWorkNo","workingWorks","pausedWorks","workLogs","showCompleteModal","workTimer","productionTimer","isTimeWarning","now","productionSettings","canStartWork","hasInputQuantity","isPartialCompletion","getRemainingQuantity","getCompletionRate","onMounted","checkTableStructure","loadRealWorkOrders","loadWorkflowData","selectWorkOrderWithRetry","autoSelectFirstAvailableWork","addLog","error","response","packageType","workList","metadata","_a","_b","statusInfo","count","extractProductFromStepName","_c","stepName","baseLineName","innerData","apiError","workflowKey","localData","formatNumber","testTableStructure","testDataMapping","testFiltering","test","onWorkOrderChange","resetCurrentWork","selectedWork","remainingQty","updateCurrentWorkInfo","showErrorMessage","startWork","pauseProduction","startWorkTimer","startProductionSimulation","confirmCompleteWork","processInnerToOuterWorkflow","closeCompleteModal","startAutoTransitionToLineSelection","linkageData","workNo","match","priorityWorks","firstWork","getWorkStatusText","maxRetries","attempt","refreshWorkOrders","currentSelectedWork","resolve","watch","newQuantity","nextTick","onUnmounted","onInputQuantityChange","resumeProduction","increment","totalProduced","defectQty","passQty","totalTargetQty","autoCompleteProduction","completeProduction","stopWork","confirmPartialComplete","confirmContinueLater","goBackToLineSelection","resetLineStatus","remainingSeconds","message","hideError","retryConnection","type","queryParams","handleWorkButton","duration","interval","progressTimer","getWorkflowStepText","getCompleteModalTitle","getConfirmationText","getCompleteButtonText","getPartialCompleteButtonText","getTransitionTitle","getTransitionMessage","getWorkButtonText","getWorkStatusClass","normalizedStatus","getQualityRateClass","rate","getAchievementRateClass","num","formatTime","date","formatDateTime","formatDuration","seconds","hours","minutes","secs","formatElapsedTime","ms","elapsed","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","_normalizeClass","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_createTextVNode","_hoisted_13","_Fragment","_renderList","colInfo","colName","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","$event","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_normalizeStyle","_hoisted_99","_hoisted_100","log","_hoisted_101","_hoisted_102","_hoisted_103","_hoisted_104","_hoisted_105","_hoisted_106","_hoisted_107","_hoisted_108","_hoisted_109","_hoisted_110","_hoisted_111","_hoisted_112","_hoisted_113","_hoisted_114","_hoisted_115","_hoisted_116","_hoisted_117","_hoisted_118","_hoisted_119","_hoisted_120","_hoisted_121","_hoisted_122","_hoisted_123","_hoisted_124","_hoisted_125","_hoisted_126","_hoisted_127","_hoisted_128","_hoisted_129","_hoisted_130","_hoisted_131","_hoisted_132","_hoisted_133","_hoisted_134","_hoisted_135","_hoisted_136","_hoisted_137","_hoisted_138","_hoisted_139","_hoisted_140","_hoisted_141","_hoisted_142","_hoisted_143","_hoisted_144","_hoisted_145","_hoisted_146","_hoisted_147","_hoisted_148","_hoisted_149","_hoisted_150","_hoisted_151","_hoisted_152","_hoisted_153","_hoisted_154","_hoisted_155","_hoisted_156","_hoisted_157","_hoisted_158","_hoisted_159","_hoisted_160","_hoisted_161","_hoisted_162","_hoisted_163","_hoisted_164","_hoisted_165","_hoisted_166","_hoisted_167","_hoisted_168","_hoisted_169","_hoisted_170","_hoisted_171","_hoisted_172","_hoisted_173","_hoisted_174","_hoisted_175","_hoisted_176","_hoisted_177","_hoisted_178","_hoisted_179","_hoisted_180","_hoisted_181","_hoisted_182","_hoisted_183","_hoisted_184","_hoisted_185","_hoisted_186","_hoisted_187","_hoisted_188","_hoisted_189","_hoisted_190","_hoisted_191","_hoisted_192","_hoisted_193","_hoisted_194","_hoisted_195","_hoisted_196","_hoisted_197","_hoisted_198","_hoisted_199","_hoisted_200","_hoisted_201","_hoisted_202"],"mappings":"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"}