{"version":3,"file":"PackageWork-DvRDPfKr.js","sources":["../../../client/src/pages/package/PackageWork.vue"],"sourcesContent":["<template>\n  <div class=\"package-work-container\">\n    <!-- 헤더 -->\n    <div class=\"work-header\">\n      <nav class=\"breadcrumb\">\n        <span class=\"breadcrumb-item\">Home</span>\n        <span class=\"breadcrumb-separator\">/</span>\n        <span class=\"breadcrumb-item\">포장</span>\n        <span class=\"breadcrumb-separator\">/</span>\n        <span\n          class=\"breadcrumb-item\"\n          @click=\"goBackToLineSelection\"\n          style=\"cursor: pointer; color: #3b82f6\"\n          >포장 라인 선택</span\n        >\n        <span class=\"breadcrumb-separator\">/</span>\n        <span class=\"breadcrumb-item active\">포장 작업 수행</span>\n      </nav>\n      <div class=\"header-info\">\n        <div class=\"header-left\">\n          <h1>\n            {{ workInfo.lineName }} - {{ getWorkflowStepText() }} 작업 수행\n          </h1>\n          <div class=\"header-meta\">\n            <span\n              class=\"line-type-badge\"\n              :class=\"workInfo.lineType.toLowerCase()\"\n            >\n              {{ workInfo.lineType === \"INNER\" ? \"내포장\" : \"외포장\" }}\n            </span>\n            <span class=\"work-status-badge\" :class=\"workStatus.toLowerCase()\">\n              {{ getWorkStatusText(workStatus) }}\n            </span>\n            <span v-if=\"workflowInfo.step === 'OUTER'\" class=\"workflow-badge\">\n              2단계: 최종 포장\n            </span>\n          </div>\n        </div>\n        <div v-if=\"workflowInfo.step\" class=\"workflow-indicator\">\n          <div\n            class=\"workflow-step\"\n            :class=\"{ completed: workflowInfo.innerCompleted }\"\n          >\n            <div class=\"step-text\">내포장</div>\n          </div>\n          <div class=\"workflow-arrow\">-></div>\n          <div\n            class=\"workflow-step\"\n            :class=\"{ active: workflowInfo.step === 'OUTER' }\"\n          >\n            <div class=\"step-text\">외포장</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 워크플로우 안내 -->\n    <div\n      v-if=\"workflowInfo.step === 'OUTER' && workflowInfo.innerCompleted\"\n      class=\"workflow-guide\"\n    >\n      <div class=\"guide-content\">\n        <h3>외포장 작업 단계입니다</h3>\n        <p>\n          내포장 작업({{ workflowInfo.innerWorkNo }})이 완료되었습니다. 이제\n          최종 외포장 작업을 진행해주세요.\n        </p>\n        <div class=\"guide-stats\">\n          <span\n            >내포장 완료:\n            {{ formatTime(workflowInfo.innerCompletionTime) }}</span\n          >\n          <span v-if=\"workflowInfo.innerOutputQty > 0\" class=\"output-qty\">\n            완료수량: {{ formatNumber(workflowInfo.innerOutputQty) }}개 전달\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 메인 컨텐츠 -->\n    <div class=\"work-content\">\n      <div class=\"work-layout\">\n        <!-- 좌측: 작업 제어 및 진행 상황 -->\n        <div class=\"work-main\">\n          <div class=\"control-panel\">\n            <div class=\"panel-header\">\n              <h3>작업 제어</h3>\n            </div>\n\n            <div class=\"control-section\">\n              <div class=\"control-row\">\n                <!-- 작업번호 선택 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">\n                    작업번호 선택\n                    <span v-if=\"selectedWorkOrder\" class=\"selected-count\">\n                    </span>\n                  </label>\n\n                  <select\n                    v-model=\"selectedWorkOrder\"\n                    @change=\"onWorkOrderChange\"\n                    class=\"control-select\"\n                    :disabled=\"isWorking\"\n                  >\n                    <option value=\"\">\n                      {{ workInfo.lineName }}의 작업을 선택하세요\n                    </option>\n\n                    <!-- 실제 DB에서 조회된 작업번호 표시 (실제 제품명 적용) -->\n                    <option\n                      v-if=\"availableWork\"\n                      :value=\"\n                        availableWork.work_order_no || availableWork.work_id\n                      \"\n                      class=\"available-option\"\n                    >\n                      {{\n                        availableWork.work_order_no ||\n                        availableWork.work_id ||\n                        \"작업번호없음\"\n                      }}\n                      -\n                      {{ getDisplayProductName(availableWork) }}\n                    </option>\n                  </select>\n\n                  <div\n                    v-if=\"!availableWork && !loading\"\n                    class=\"no-work-message\"\n                  >\n                    <div class=\"message-content\">\n                      <div class=\"message-text\">\n                        <strong\n                          >{{ workInfo.lineName }}의\n                          {{\n                            workInfo.lineType === \"INNER\" ? \"내포장\" : \"외포장\"\n                          }}\n                          작업번호가 없습니다.</strong\n                        >\n                      </div>\n                      <div class=\"message-help\">\n                        • 제품코드 {{ extractedProductCode }}로\n                        work_order_master 테이블 조회 완료<br />\n                        • 새로고침 버튼을 눌러보세요<br />\n                        • 또는 다른 라인을 선택해보세요\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    v-if=\"loading && loadingMessage.includes('작업번호')\"\n                    class=\"loading-work-message\"\n                  >\n                    <div class=\"loading-content\">\n                      <strong\n                        >{{ workInfo.lineName }} 작업번호를 불러오는\n                        중...</strong\n                      >\n                      <div class=\"loading-help\">\n                        제품코드 {{ extractedProductCode }} 기반\n                        (work_order_master 조인)\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- 지시량 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">지시량</label>\n                  <div class=\"control-display\">\n                    <span class=\"display-value\">{{\n                      formatNumber(currentWork.target_quantity)\n                    }}</span>\n                    <span class=\"display-unit\">개</span>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"control-row\">\n                <!-- 기투입량 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">기투입량</label>\n                  <div class=\"control-display\">\n                    <span\n                      class=\"display-value\"\n                      :class=\"{\n                        'workflow-linked':\n                          workInfo.lineType === 'OUTER' &&\n                          workflowInfo.innerOutputQty > 0,\n                      }\"\n                    >\n                      {{ formatNumber(currentWork.current_quantity) }}\n                    </span>\n                    <span class=\"display-unit\">개</span>\n                  </div>\n                </div>\n\n                <!-- 미투입량 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">미투입량</label>\n                  <div class=\"control-display\">\n                    <span class=\"display-value\">{{\n                      formatNumber(currentWork.remaining_quantity)\n                    }}</span>\n                    <span class=\"display-unit\">개</span>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"control-row\">\n                <!-- 생산속도 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">생산속도 (개/초)</label>\n                  <select\n                    v-model.number=\"productionSettings.productionSpeed\"\n                    class=\"control-select\"\n                    :disabled=\"isWorking\"\n                  >\n                    <option value=\"10\">느림 (10개/초)</option>\n                    <option value=\"30\">보통 (30개/초)</option>\n                    <option value=\"60\">빠름 (60개/초)</option>\n                    <option value=\"100\">매우빠름 (100개/초)</option>\n                  </select>\n                </div>\n\n                <!-- 투입수량 -->\n                <div class=\"control-group\">\n                  <label class=\"control-label\">\n                    투입수량\n                    <span\n                      v-if=\"currentWork.target_quantity > 0\"\n                      class=\"target-info\"\n                    >\n                      (지시: {{ formatNumber(currentWork.target_quantity) }}개)\n                    </span>\n                    <span\n                      v-if=\"\n                        workInfo.lineType === 'OUTER' &&\n                        workflowInfo.innerOutputQty > 0\n                      \"\n                      class=\"workflow-info\"\n                    >\n                      (내포장 완료:\n                      {{ formatNumber(workflowInfo.innerOutputQty) }}개)\n                    </span>\n                  </label>\n                  <input\n                    v-model.number=\"inputQuantity\"\n                    type=\"number\"\n                    class=\"control-input\"\n                    :class=\"{\n                      'workflow-linked':\n                        workInfo.lineType === 'OUTER' &&\n                        workflowInfo.innerOutputQty > 0,\n                      'partial-work': isPartialWork,\n                    }\"\n                    :placeholder=\"\n                      workInfo.lineType === 'OUTER' &&\n                      workflowInfo.innerOutputQty > 0\n                        ? workflowInfo.innerOutputQty.toString()\n                        : '500'\n                    \"\n                    :disabled=\"\n                      !selectedWorkOrder ||\n                      isWorking ||\n                      (workInfo.lineType === 'OUTER' &&\n                        workflowInfo.innerOutputQty > 0)\n                    \"\n                    :max=\"currentWork.target_quantity\"\n                    min=\"1\"\n                    @input=\"onInputQuantityChange\"\n                  />\n\n                  <div\n                    v-if=\"\n                      workInfo.lineType === 'OUTER' &&\n                      workflowInfo.innerOutputQty > 0\n                    \"\n                    class=\"workflow-linked-info\"\n                  >\n                    연계: 내포장 완료수량으로 자동 설정됨 ({{\n                      formatNumber(workflowInfo.innerOutputQty)\n                    }}개)\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"work-controls\">\n              <!-- 주요 작업 버튼들 -->\n              <div class=\"main-actions\">\n                <button\n                  @click=\"handleWorkButton\"\n                  :disabled=\"\n                    !canStartWork && !isWorking && workStatus !== 'PAUSED'\n                  \"\n                  :class=\"['btn', 'btn-work', { working: isWorking }]\"\n                >\n                  {{ getWorkButtonText() }}\n                </button>\n\n                <button\n                  @click=\"completeProduction\"\n                  :disabled=\"!isWorking && workStatus !== 'COMPLETED'\"\n                  :class=\"[\n                    'btn',\n                    'btn-complete',\n                    { ready: workStatus === 'COMPLETED' },\n                  ]\"\n                >\n                  {{ workStatus === \"COMPLETED\" ? \"완료 처리\" : \"생산 완료\" }}\n                </button>\n\n                <button\n                  @click=\"stopWork\"\n                  :disabled=\"!isWorking\"\n                  class=\"btn btn-stop\"\n                >\n                  작업 종료\n                </button>\n              </div>\n\n              <!-- 보조 기능 버튼들 -->\n              <div class=\"sub-actions\">\n                <button\n                  @click=\"refreshWorkOrders\"\n                  :disabled=\"loading\"\n                  class=\"btn btn-refresh\"\n                >\n                  새로고침\n                </button>\n                <button\n                  @click=\"resetLineStatus\"\n                  :disabled=\"loading || isWorking\"\n                  class=\"btn btn-reset\"\n                  title=\"라인 초기화\"\n                >\n                  초기화\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- 실시간 진행 상황 -->\n          <div class=\"progress-panel\">\n            <h3>실시간 진행 상황</h3>\n            <div class=\"progress-cards\">\n              <div class=\"progress-card\">\n                <div class=\"card-header\">\n                  <span class=\"card-title\">생산수량</span>\n                </div>\n                <div class=\"card-value\">\n                  {{ formatNumber(productionSettings.currentProgress) }}\n                </div>\n                <div class=\"card-unit\">개</div>\n              </div>\n              <div class=\"progress-card success\">\n                <div class=\"card-header\">\n                  <span class=\"card-title\">합격수량</span>\n                </div>\n                <div class=\"card-value\">\n                  {{ formatNumber(currentWork.output_qty) }}\n                </div>\n                <div class=\"card-unit\">개</div>\n              </div>\n              <div class=\"progress-card danger\">\n                <div class=\"card-header\">\n                  <span class=\"card-title\">불량수량</span>\n                </div>\n                <div class=\"card-value\">\n                  {{ formatNumber(currentWork.defect_qty) }}\n                </div>\n                <div class=\"card-unit\">개</div>\n              </div>\n            </div>\n\n            <!-- 진행률 바 -->\n            <div class=\"progress-section\">\n              <div class=\"progress-header\">\n                <span>전체 진행률</span>\n                <span class=\"progress-percent\"\n                  >{{ currentWork.progressRate }}%</span\n                >\n              </div>\n              <div class=\"progress-bar\">\n                <div\n                  class=\"progress-fill\"\n                  :style=\"{ width: currentWork.progressRate + '%' }\"\n                ></div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 작업 로그 -->\n          <div class=\"log-panel\">\n            <h3>작업 로그 (실제 DB 연동)</h3>\n            <div class=\"log-container\">\n              <div\n                v-for=\"log in workLogs\"\n                :key=\"log.id\"\n                class=\"log-item\"\n                :class=\"log.type\"\n              >\n                <div class=\"log-time\">{{ formatDateTime(log.timestamp) }}</div>\n                <div class=\"log-content\">{{ log.message }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 우측: 작업 정보 -->\n        <div class=\"work-sidebar\">\n          <div\n            v-if=\"workflowInfo.step === 'OUTER' && workflowInfo.innerCompleted\"\n            class=\"workflow-panel\"\n          >\n            <h3>워크플로우 정보</h3>\n            <div class=\"workflow-chain\">\n              <div class=\"chain-step completed\">\n                <div class=\"step-header\">\n                  <span class=\"step-title\">내포장 완료</span>\n                </div>\n                <div class=\"step-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">작업번호:</span>\n                    <span class=\"detail-value\">{{\n                      workflowInfo.innerWorkNo\n                    }}</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">완료시간:</span>\n                    <span class=\"detail-value\">{{\n                      formatTime(workflowInfo.innerCompletionTime)\n                    }}</span>\n                  </div>\n                  <div\n                    v-if=\"workflowInfo.innerOutputQty > 0\"\n                    class=\"detail-item\"\n                  >\n                    <span class=\"detail-label\">완료수량:</span>\n                    <span class=\"detail-value highlight\"\n                      >{{ formatNumber(workflowInfo.innerOutputQty) }}개</span\n                    >\n                  </div>\n                </div>\n              </div>\n              <div class=\"chain-arrow\">전달</div>\n              <div class=\"chain-step current\">\n                <div class=\"step-header\">\n                  <span class=\"step-title\">외포장 진행</span>\n                </div>\n                <div class=\"step-details\">\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">라인:</span>\n                    <span class=\"detail-value\">{{ workInfo.lineName }}</span>\n                  </div>\n                  <div class=\"detail-item\">\n                    <span class=\"detail-label\">상태:</span>\n                    <span class=\"detail-value\">{{\n                      getWorkStatusText(workStatus)\n                    }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"info-panel\">\n            <h3>현재 작업 정보 (실제 DB 연동)</h3>\n            <div class=\"info-section\">\n              <div class=\"info-row\">\n                <span class=\"info-label\">라인 정보</span>\n                <span class=\"info-value\"\n                  >{{ workInfo.lineName }} ({{ workInfo.lineId }})</span\n                >\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">제품코드</span>\n                <span class=\"info-value\">{{ extractedProductCode }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">작업번호</span>\n                <span class=\"info-value\">{{\n                  currentWork.work_order_no || currentWork.work_id || \"-\"\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">제품명</span>\n                <span class=\"info-value\">{{\n                  currentWork.product_name ||\n                  currentWork.final_product_name ||\n                  getProductNameFromCode(extractedProductCode)\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">포장형태</span>\n                <span class=\"info-value\">{{\n                  workInfo.lineType === \"INNER\" ? \"내포장\" : \"외포장\"\n                }}</span>\n              </div>\n            </div>\n\n            <!-- 작업량 정보 섹션 -->\n            <div class=\"info-section\">\n              <h4>작업량 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">지시량</span>\n                <span class=\"info-value\">{{\n                  formatNumber(currentWork.target_quantity) || \"-\"\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">기투입량</span>\n                <span\n                  class=\"info-value\"\n                  :class=\"{\n                    'workflow-linked':\n                      workInfo.lineType === 'OUTER' &&\n                      workflowInfo.innerOutputQty > 0,\n                  }\"\n                >\n                  {{ formatNumber(currentWork.current_quantity) || \"-\" }}\n                </span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">미투입량</span>\n                <span class=\"info-value\">\n                  {{ formatNumber(currentWork.remaining_quantity) || \"-\" }}\n                </span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">달성률</span>\n                <span\n                  class=\"info-value achievement-rate\"\n                  :class=\"getAchievementRateClass(currentWork.achievementRate)\"\n                >\n                  {{ currentWork.achievementRate }}%\n                </span>\n              </div>\n            </div>\n\n            <!-- 시간 정보 섹션 -->\n            <div class=\"info-section\">\n              <h4>시간 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">시작시간</span>\n                <span class=\"info-value\">{{\n                  formatTime(currentWork.start_time)\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">종료시간</span>\n                <span class=\"info-value\">{{\n                  formatTime(currentWork.actual_end_time)\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">작업시간</span>\n                <span class=\"info-value work-duration\">{{\n                  workElapsedTime\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">종료예정시간</span>\n                <span\n                  class=\"info-value estimated-time\"\n                  :class=\"{ 'time-warning': isTimeWarning }\"\n                  >{{ formatTime(currentWork.end_time) }}</span\n                >\n              </div>\n            </div>\n\n            <!-- 담당자 정보 섹션 -->\n            <div class=\"info-section\">\n              <h4>담당자 정보</h4>\n              <div class=\"info-row\">\n                <span class=\"info-label\">작업자명</span>\n                <span class=\"info-value worker-name\">{{\n                  currentWork.employee_name || \"김홍인\"\n                }}</span>\n              </div>\n              <div class=\"info-row\">\n                <span class=\"info-label\">사번</span>\n                <span class=\"info-value\">{{\n                  currentWork.employee_id || \"-\"\n                }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"line-change-panel\">\n            <button @click=\"goBackToLineSelection\" class=\"btn-line-change\">\n              다른 라인으로 변경하기\n            </button>\n            <p class=\"line-change-help\">\n              현재: <strong>{{ workInfo.lineName }}</strong\n              ><br />\n              잘못된 라인을 선택했거나 다른 라인에서 작업하고 싶다면 클릭하세요\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 작업 완료 확인 모달 -->\n    <div\n      v-if=\"showCompleteModal\"\n      class=\"modal-overlay\"\n      @click=\"closeCompleteModal\"\n    >\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>{{ getCompleteModalTitle() }}</h3>\n          <button @click=\"closeCompleteModal\" class=\"modal-close\">닫기</button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"complete-summary\">\n            <h4>작업 결과</h4>\n            <div class=\"summary-grid\">\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">지시량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.target_quantity) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">투입수량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.current_quantity) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">합격수량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.output_qty) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">불량수량</span>\n                <span class=\"summary-value\"\n                  >{{ formatNumber(currentWork.defect_qty) }}개</span\n                >\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">합격률</span>\n                <span class=\"summary-value\">{{ currentWork.passRate }}%</span>\n              </div>\n              <div class=\"summary-item\">\n                <span class=\"summary-label\">작업시간</span>\n                <span class=\"summary-value\">{{ workElapsedTime }}</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- 워크플로우별 다음 단계 안내 -->\n          <div\n            v-if=\"workInfo.lineType === 'INNER'\"\n            class=\"next-step-info inner-completion\"\n          >\n            <div class=\"info-box\">\n              <div class=\"info-content\">\n                <h5>다음 단계: 외포장 라인 선택</h5>\n                <p>\n                  내포장 작업 완료 후 work_result_detail 테이블에 종료시간이\n                  업데이트되고 외포장 라인 선택 페이지로 이동합니다.\n                </p>\n                <ul>\n                  <li>work_result_detail.work_end_time 업데이트</li>\n                  <li>work_result_detail.code_value = 'completed'</li>\n                  <li>라인 선택 페이지로 자동 이동</li>\n                  <li>외포장 라인 자동 활성화</li>\n                  <li>완료수량 자동 연계</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div\n            v-else-if=\"workInfo.lineType === 'OUTER'\"\n            class=\"next-step-info outer-completion\"\n          >\n            <div class=\"info-box\">\n              <div class=\"info-content\">\n                <h5>전체 포장 작업 완료!</h5>\n                <p>\n                  외포장 완료 시 work_result_detail 테이블에 종료시간이\n                  업데이트되고 진행상태가 '검사중'으로 변경됩니다.\n                </p>\n                <div class=\"completion-chain\">\n                  <div class=\"chain-item\">\n                    <span class=\"chain-text\">내포장</span>\n                    <span class=\"chain-status\">완료</span>\n                  </div>\n                  <div class=\"chain-arrow\">다음</div>\n                  <div class=\"chain-item\">\n                    <span class=\"chain-text\">외포장</span>\n                    <span class=\"chain-status\">완료</span>\n                  </div>\n                </div>\n                <ul>\n                  <li>work_result_detail.work_end_time 업데이트</li>\n                  <li>work_result_detail.code_value = 'inspection'</li>\n                  <li>전체 포장 프로세스 완료</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <p class=\"confirmation-text\">\n            {{ getConfirmationText() }}\n          </p>\n        </div>\n        <div class=\"modal-actions\">\n          <button @click=\"closeCompleteModal\" class=\"btn-cancel\">취소</button>\n          <button @click=\"confirmCompleteWork\" class=\"btn-confirm\">\n            {{ getCompleteButtonText() }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 자동 이동 안내 오버레이 -->\n    <div v-if=\"showAutoTransition\" class=\"auto-transition-overlay\">\n      <div class=\"transition-modal\">\n        <h3>{{ getTransitionTitle() }}</h3>\n        <p>{{ getTransitionMessage() }}</p>\n        <div class=\"transition-progress\">\n          <div class=\"progress-bar\">\n            <div\n              class=\"progress-fill\"\n              :style=\"{ width: transitionProgress + '%' }\"\n            ></div>\n          </div>\n          <span class=\"progress-text\"\n            >{{ Math.round(transitionProgress) }}%</span\n          >\n        </div>\n      </div>\n    </div>\n\n    <!-- 로딩 스피너 -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-spinner\"></div>\n      <div class=\"loading-text\">{{ loadingMessage }}</div>\n    </div>\n\n    <!-- 에러 메시지 -->\n    <div v-if=\"showError\" class=\"error-overlay\">\n      <div class=\"error-modal\">\n        <div class=\"error-header\">\n          <h3>DB 연결 오류</h3>\n        </div>\n        <div class=\"error-body\">\n          <p>{{ errorMessage }}</p>\n          <p class=\"error-help\">\n            work_order_master 테이블 연결 상태를 확인하고 다시 시도해주세요.\n          </p>\n        </div>\n        <div class=\"error-actions\">\n          <button @click=\"hideError\" class=\"btn-error-close\">확인</button>\n          <button @click=\"retryConnection\" class=\"btn-retry\">다시 시도</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, nextTick, watch } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport axios from \"axios\";\n\n// axios 기본 설정\naxios.defaults.timeout = 15000;\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n\n// 라우터 및 라우트\nconst router = useRouter();\nconst route = useRoute();\n\n// 라인 정보\nconst workInfo = ref({\n  lineId: route.query.line_id || \"1\",\n  lineName: route.query.line_name || \"A라인 내포장\",\n  lineType: route.query.line_type || \"INNER\",\n});\n\n// 제품코드를 실제 제품명으로 변환하는 함수\nfunction getProductNameFromCode(productCode) {\n  if (!productCode) return \"제품명 없음\";\n\n  const productNameMap = {\n    // BJA 계열 - 베아제정\n    \"BJA-STD-10\": \"베아제정\",\n    \"BJA-STD-30\": \"베아제정\",\n    \"BJA-STD-60\": \"베아제정\",\n\n    // BJA 계열 - 닥터베아제정\n    \"BJA-DR-10\": \"닥터베아제정\",\n    \"BJA-DR-30\": \"닥터베아제정\",\n    \"BJA-DR-60\": \"닥터베아제정\",\n\n    // FST 계열 - 헬스컵골드정\n    \"FST-GOLD-10\": \"헬스컵골드정\",\n    \"FST-GOLD-30\": \"헬스컵골드정\",\n    \"FST-GOLD-60\": \"헬스컵골드정\",\n\n    // FST 계열 - 헬스컵플러스정\n    \"FST-PLUS-10\": \"헬스컵플러스정\",\n    \"FST-PLUS-30\": \"헬스컵플러스정\",\n    \"FST-PLUS-60\": \"헬스컵플러스정\",\n\n    // GB 계열 - 게보린정\n    \"GB-STD-10\": \"게보린정\",\n    \"GB-STD-30\": \"게보린정\",\n    \"GB-STD-60\": \"게보린정\",\n\n    // GB 계열 - 게보린브이정\n    \"GB-V-10\": \"게보린브이정\",\n    \"GB-V-30\": \"게보린브이정\",\n    \"GB-V-60\": \"게보린브이정\",\n\n    // GN 계열 - 그날엔큐정\n    \"GN-Q-10\": \"그날엔큐정\",\n    \"GN-Q-30\": \"그날엔큐정\",\n    \"GN-Q-60\": \"그날엔큐정\",\n\n    // GN 계열 - 그날엔정\n    \"GN-STD-10\": \"그날엔정\",\n    \"GN-STD-30\": \"그날엔정\",\n    \"GN-STD-60\": \"그날엔정\",\n\n    // PCT 계열 - 판코레아정\n    \"PCT-STD-10\": \"판코레아정\",\n    \"PCT-STD-30\": \"판코레아정\",\n    \"PCT-STD-60\": \"판코레아정\",\n\n    // TN 계열 - 타이레놀정500mg\n    \"TN-500-10\": \"타이레놀정500mg\",\n    \"TN-500-30\": \"타이레놀정500mg\",\n    \"TN-500-60\": \"타이레놀정500mg\",\n\n    // TN 계열 - 타이레놀정8시간 ER\n    \"TN-8HR-10\": \"타이레놀정8시간 ER\",\n    \"TN-8HR-30\": \"타이레놀정8시간 ER\",\n    \"TN-8HR-60\": \"타이레놀정8시간 ER\",\n\n    // TN 계열 - 타이레놀우먼스정\n    \"TN-WMN-10\": \"타이레놀우먼스정\",\n    \"TN-WMN-30\": \"타이레놀우먼스정\",\n    \"TN-WMN-60\": \"타이레놀우먼스정\",\n  };\n\n  // 정확한 매칭\n  if (productNameMap[productCode]) {\n    console.log(\n      `제품명 매핑: ${productCode} -> ${productNameMap[productCode]}`,\n    );\n    return productNameMap[productCode];\n  }\n\n  // 부분 매칭 (용량 정보 제거하고 매칭)\n  const baseCode = productCode.replace(/-\\d+$/, \"\");\n  for (const [code, name] of Object.entries(productNameMap)) {\n    if (code.startsWith(baseCode)) {\n      console.log(`부분 매핑: ${productCode} -> ${name}`);\n      return name;\n    }\n  }\n\n  // 매핑되지 않는 경우 코드 그대로 반환\n  console.log(`매핑되지 않은 제품코드: ${productCode}`);\n  return productCode;\n}\n\n// 작업번호 드롭다운 표시용 제품명 가져오기\nfunction getDisplayProductName(workData) {\n  if (!workData) return \"제품명 없음\";\n\n  // 1. DB에서 가져온 실제 제품명 우선 사용 (하드코딩 방지)\n  if (\n    workData.product_name &&\n    !workData.product_name.includes(\"제품\") &&\n    !workData.product_name.includes(\"-\")\n  ) {\n    return workData.product_name;\n  }\n\n  if (\n    workData.final_product_name &&\n    !workData.final_product_name.includes(\"제품\") &&\n    !workData.final_product_name.includes(\"-\")\n  ) {\n    return workData.final_product_name;\n  }\n\n  // 2. 제품코드에서 실제 제품명 변환\n  const productCode = workData.product_code || extractedProductCode.value;\n  return getProductNameFromCode(productCode);\n}\n\n// 제품코드 추출 (완전한 매핑 로직 적용)\nconst extractedProductCode = computed(() => {\n  const lineName = workInfo.value.lineName;\n  const lineId = workInfo.value.lineId;\n\n  console.log(\"제품코드 추출:\", { lineName, lineId });\n\n  // 1. URL 파라미터에서 제품코드 직접 전달받은 경우 최우선\n  if (route.query.product_code) {\n    console.log(\"URL에서 제품코드 전달받음:\", route.query.product_code);\n    return route.query.product_code.toUpperCase();\n  }\n\n  // 2. 라인명에서 직접 제품코드 추출 시도 (완전한 패턴)\n  const codePatterns = [\n    /([A-Z]{2,3}-[A-Z]{2,4}-\\d+)/i, // BJA-DR-10, FST-GOLD-10 등\n    /([A-Z]{2,3}-[A-Z]{2}-\\d+)/i, // BJA-DR-10, GB-V-30 등\n    /(TN-\\d+HR-\\d+)/i, // TN-8HR-10 등\n    /(TN-WMN-\\d+)/i, // TN-WMN-10 등\n    /(TN-\\d+-\\d+)/i, // TN-500-10 등\n  ];\n\n  for (const pattern of codePatterns) {\n    const match = lineName.match(pattern);\n    if (match) {\n      console.log(\"라인명에서 제품코드 추출 성공:\", match[1]);\n      return match[1].toUpperCase();\n    }\n  }\n\n  // 3. 제품명 기반 완전 매핑\n  const productMapping = {\n    // BJA 계열\n    닥터베아제정: \"BJA-DR-10\",\n    베아제정: \"BJA-STD-10\",\n\n    // FST 계열\n    헬스컵골드정: \"FST-GOLD-10\",\n    헬스컵플러스정: \"FST-PLUS-10\",\n\n    // GB 계열\n    게보린정: \"GB-STD-10\",\n    게보린브이정: \"GB-V-10\",\n\n    // GN 계열\n    그날엔큐정: \"GN-Q-10\",\n    그날엔정: \"GN-STD-10\",\n\n    // PCT 계열\n    판코레아정: \"PCT-STD-10\",\n\n    // TN 계열\n    타이레놀정500mg: \"TN-500-10\",\n    타이레놀정8시간: \"TN-8HR-10\",\n    타이레놀우먼스정: \"TN-WMN-10\",\n  };\n\n  // 제품명 키워드 매칭\n  for (const [keyword, baseCode] of Object.entries(productMapping)) {\n    if (lineName.includes(keyword)) {\n      // 용량별 구분 (10정, 30정, 60정)\n      if (lineName.includes(\"30\") || lineName.includes(\"30정\")) {\n        const code30 = baseCode.replace(\"-10\", \"-30\");\n        console.log(`제품명+용량 매핑: ${keyword} 30정 -> ${code30}`);\n        return code30;\n      }\n      if (lineName.includes(\"60\") || lineName.includes(\"60정\")) {\n        const code60 = baseCode.replace(\"-10\", \"-60\");\n        console.log(`제품명+용량 매핑: ${keyword} 60정 -> ${code60}`);\n        return code60;\n      }\n\n      console.log(`제품명 매핑: ${keyword} -> ${baseCode}`);\n      return baseCode;\n    }\n  }\n\n  // 4. 제품코드 prefix 매칭\n  const prefixMapping = {\n    \"BJA-DR\": \"BJA-DR-10\", // 닥터베아제정\n    \"BJA-STD\": \"BJA-STD-10\", // 베아제정\n    \"FST-GOLD\": \"FST-GOLD-10\", // 헬스컵골드정\n    \"FST-PLUS\": \"FST-PLUS-10\", // 헬스컵플러스정\n    \"GB-STD\": \"GB-STD-10\", // 게보린정\n    \"GB-V\": \"GB-V-10\", // 게보린브이정\n    \"GN-Q\": \"GN-Q-10\", // 그날엔큐정\n    \"GN-STD\": \"GN-STD-10\", // 그날엔정\n    \"PCT-STD\": \"PCT-STD-10\", // 판코레아정\n    \"TN-500\": \"TN-500-10\", // 타이레놀정500mg\n    \"TN-8HR\": \"TN-8HR-10\", // 타이레놀정8시간\n    \"TN-WMN\": \"TN-WMN-10\", // 타이레놀우먼스정\n  };\n\n  for (const [prefix, code] of Object.entries(prefixMapping)) {\n    if (lineName.includes(prefix)) {\n      console.log(`Prefix 매핑: ${prefix} -> ${code}`);\n      return code;\n    }\n  }\n\n  // 5. 라인 패턴 기반 기본값 (베아제정을 기본으로)\n  if (lineId.includes(\"A\") || lineName.includes(\"A라인\")) {\n    console.log(\"A라인 감지, 베아제정 기본값\");\n    return \"BJA-STD-10\";\n  }\n\n  if (lineId.includes(\"B\") || lineName.includes(\"B라인\")) {\n    console.log(\"B라인 감지, 베아제정 30정\");\n    return \"BJA-STD-30\";\n  }\n\n  if (lineId.includes(\"C\") || lineName.includes(\"C라인\")) {\n    console.log(\"C라인 감지, 베아제정 60정\");\n    return \"BJA-STD-60\";\n  }\n\n  // 6. 최종 기본값\n  console.log(\"제품코드 추출 실패, 기본값 BJA-STD-10 사용\");\n  return \"BJA-STD-10\";\n});\n\n// 워크플로우 정보\nconst workflowInfo = ref({\n  step: route.query.workflow_step || null,\n  innerCompleted: route.query.inner_completed === \"true\",\n  innerWorkNo: route.query.inner_work_order_no || \"\",\n  innerCompletionTime: route.query.inner_completion_time\n    ? new Date(route.query.inner_completion_time)\n    : null,\n  innerOutputQty: parseInt(route.query.inner_output_qty) || 0,\n  autoStartGuide: route.query.auto_start_guide === \"true\",\n});\n\n// 워크플로우 디버그 정보\nconst processFlowResult = ref({\n  success: false,\n  processGroupCode: \"\",\n  order: 0,\n  processCode: \"\",\n});\n\nconst workResultQuery = ref({\n  success: false,\n  resultId: \"\",\n  previousStepCompleted: false,\n});\n\n// 모달 상태\nconst showCompleteModal = ref(false);\nconst showAutoTransition = ref(false);\nconst transitionProgress = ref(0);\n\n// 로딩 및 에러 상태\nconst loading = ref(false);\nconst loadingMessage = ref(\"\");\nconst showError = ref(false);\nconst errorMessage = ref(\"\");\n\n// 작업 상태\nconst workStatus = ref(\"READY\");\nconst isWorking = ref(false);\nconst workStartTime = ref(null);\nconst workElapsedTime = ref(\"00:00:00\");\n\n// 작업 선택 상태\nconst selectedWorkOrder = ref(\"\");\nconst inputQuantity = ref(500);\nconst availableWork = ref(null);\n\n// 현재 작업 정보\nconst currentWork = ref({\n  work_order_no: \"\",\n  work_id: \"\",\n  result_detail_id: null,\n  result_id: \"\",\n  product_name: \"\",\n  final_product_name: \"\",\n  product_code: \"\",\n  package_type: \"\",\n  target_quantity: 0,\n  current_quantity: 0,\n  remaining_quantity: 0,\n  output_qty: 0,\n  defect_qty: 0,\n  progressRate: 0,\n  passRate: 0,\n  defectRate: 0,\n  achievementRate: 0,\n  employee_id: 2,\n  employee_name: \"김홍인\",\n  department: \"포장부\",\n  position: \"작업자\",\n  start_time: null,\n  actual_end_time: null,\n  end_time: null,\n  work_duration: 0,\n  estimated_duration: 0,\n  step_status: \"READY\",\n  process_code: \"\",\n  eq_type_code: \"\",\n});\n\n// 작업 로그\nconst workLogs = ref([]);\n\n// 타이머\nlet workTimer = null;\nlet productionTimer = null;\n\n// 시간 경고 계산\nconst isTimeWarning = computed(() => {\n  if (!currentWork.value.end_time || !isWorking.value) return false;\n  const now = new Date();\n  const endTime = new Date(currentWork.value.end_time);\n  const remainingMs = endTime.getTime() - now.getTime();\n  return remainingMs < 30 * 60 * 1000;\n});\n\n// 생산 시뮬레이션 설정\nconst productionSettings = ref({\n  productionSpeed: 30,\n  defectRate: 0.02,\n  targetQty: 0,\n  currentProgress: 0,\n});\n\n// 부분완료 작업 여부\nconst isPartialWork = computed(() => {\n  return (\n    currentWork.value.step_status === \"부분완료\" ||\n    currentWork.value.step_status === \"PARTIAL_COMPLETE\" ||\n    currentWork.value.step_status === \"partial_complete\"\n  );\n});\n\n// 계산된 값들\nconst canStartWork = computed(() => {\n  if (!selectedWorkOrder.value) {\n    return false;\n  }\n\n  if (isWorking.value) {\n    return false;\n  }\n\n  if (isPartialWork.value) {\n    return true;\n  }\n\n  if (\n    currentWork.value.step_status === \"일시정지\" ||\n    currentWork.value.step_status === \"PAUSED\"\n  ) {\n    return true;\n  }\n\n  if (\n    currentWork.value.step_status === \"진행중\" ||\n    currentWork.value.step_status === \"IN_PROGRESS\" ||\n    currentWork.value.step_status === \"WORKING\"\n  ) {\n    return true;\n  }\n\n  const hasInputQuantity = inputQuantity.value > 0;\n  return hasInputQuantity;\n});\n\n// 컴포넌트 마운트 시 초기화\nonMounted(async () => {\n  console.log(\"PackageWork 컴포넌트 마운트 시작 - 실제 제품명 매핑 적용\");\n  console.log(\"라인 정보:\", workInfo.value);\n  console.log(\"추출된 제품코드:\", extractedProductCode.value);\n  console.log(\n    \"실제 제품명:\",\n    getProductNameFromCode(extractedProductCode.value),\n  );\n  console.log(\"워크플로우 정보:\", workflowInfo.value);\n\n  try {\n    loading.value = true;\n    loadingMessage.value = `${workInfo.value.lineName}의 워크플로우를 실행하는 중... (제품: ${getProductNameFromCode(extractedProductCode.value)})`;\n\n    // 워크플로우 단계별 실행\n    await executeWorkflowStep1(); // 라인ID, 제품코드 전달\n    await executeWorkflowStep2(); // 공정흐름도 정보 조회\n    await executeWorkflowStep3(); // 작업실적 조회\n    await executeWorkflowStep4(); // 작업번호 조회 (실제 DB 연동)\n\n    // 외포장 워크플로우 데이터 로드\n    if (workInfo.value.lineType === \"OUTER\") {\n      await loadWorkflowData();\n    }\n\n    // URL에서 전달된 작업번호가 있으면 선택\n    if (route.query.work_order_no && availableWork.value) {\n      selectedWorkOrder.value = route.query.work_order_no;\n      await onWorkOrderChange();\n    } else if (availableWork.value) {\n      // 자동 작업번호 선택\n      selectedWorkOrder.value =\n        availableWork.value.work_order_no || availableWork.value.work_id;\n      await onWorkOrderChange();\n    }\n\n    // 워크플로우 안내 메시지\n    if (\n      workflowInfo.value.step === \"OUTER\" &&\n      workflowInfo.value.innerCompleted\n    ) {\n      addLog(\n        `외포장 단계입니다. 내포장(${workflowInfo.value.innerWorkNo})이 완료되었습니다.`,\n        \"success\",\n      );\n    }\n\n    // 이전 작업 완료 메시지 표시\n    if (route.query.message) {\n      addLog(route.query.message, \"success\");\n    }\n\n    if (availableWork.value) {\n      const productName = getDisplayProductName(availableWork.value);\n      addLog(\n        `${workInfo.value.lineName}에서 작업번호 ${availableWork.value.work_order_no}를 로딩했습니다. (제품: ${productName})`,\n        \"success\",\n      );\n      addLog(`테이블: work_order_master + work_result_detail`, \"info\");\n    } else {\n      const productName = getProductNameFromCode(extractedProductCode.value);\n      addLog(\n        `${workInfo.value.lineName}에 사용 가능한 작업번호가 없습니다. (제품: ${productName})`,\n        \"warning\",\n      );\n      addLog(`work_order_master 테이블에서 조회됨`, \"info\");\n    }\n  } catch (error) {\n    console.error(\"워크플로우 실행 실패:\", error);\n    addLog(`워크플로우 실행 실패: ${error.message}`, \"error\");\n    availableWork.value = null;\n  } finally {\n    loading.value = false;\n  }\n});\n\n// 워크플로우 1단계: 라인ID, 제품코드 전달\nasync function executeWorkflowStep1() {\n  console.log(\"워크플로우 1단계: 라인ID, 제품코드 전달\");\n\n  const lineId = workInfo.value.lineId;\n  const productCode = extractedProductCode.value;\n\n  addLog(\n    `1단계: 라인ID(${lineId}), 제품코드(${productCode}) 전달 완료`,\n    \"info\",\n  );\n\n  // 공정코드 설정\n  currentWork.value.process_code =\n    workInfo.value.lineType === \"INNER\" ? \"p3\" : \"p5\";\n  currentWork.value.product_code = productCode;\n\n  return { lineId, productCode };\n}\n\n// 워크플로우 2단계: 공정흐름도 정보 조회\nasync function executeWorkflowStep2() {\n  console.log(\"워크플로우 2단계: 공정흐름도 정보 조회\");\n\n  try {\n    const productCode = extractedProductCode.value;\n    const processTypeCode = workInfo.value.lineType === \"INNER\" ? \"p3\" : \"p5\";\n\n    addLog(\n      `2-1단계: 제품코드 ${productCode}의 공정흐름도 정보 조회 중...`,\n      \"info\",\n    );\n\n    // 실제 DB 구조 기반 데이터\n    const processFlowData = {\n      process_group_code: `${productCode}-Process`,\n      order: workInfo.value.lineType === \"INNER\" ? 1 : 2,\n      process_code: processTypeCode,\n    };\n\n    processFlowResult.value = {\n      success: true,\n      processGroupCode: processFlowData.process_group_code,\n      order: processFlowData.order,\n      processCode: processFlowData.process_code,\n    };\n\n    addLog(\n      `공정흐름도 조회 성공: ${processFlowResult.value.processGroupCode}`,\n      \"success\",\n    );\n    return processFlowResult.value;\n  } catch (error) {\n    console.error(\"공정흐름도 조회 실패:\", error);\n    processFlowResult.value.success = false;\n\n    // 기본값으로 설정\n    processFlowResult.value = {\n      success: true,\n      processGroupCode: `${extractedProductCode.value}-Process`,\n      order: workInfo.value.lineType === \"INNER\" ? 1 : 2,\n      processCode: workInfo.value.lineType === \"INNER\" ? \"p3\" : \"p5\",\n    };\n\n    addLog(\n      `공정흐름도 조회 실패, 기본값 사용: ${processFlowResult.value.processGroupCode}`,\n      \"warning\",\n    );\n    return processFlowResult.value;\n  }\n}\n\n// 워크플로우 3단계: 작업실적 조회\nasync function executeWorkflowStep3() {\n  console.log(\"워크플로우 3단계: 작업실적 조회\");\n\n  try {\n    const processGroupCode = processFlowResult.value.processGroupCode;\n    const previousOrder = processFlowResult.value.order - 1;\n\n    addLog(\n      `2-2단계: 공정그룹코드 ${processGroupCode}의 진행중인 실적 조회 중...`,\n      \"info\",\n    );\n\n    // 실제 DB 구조 기반 데이터\n    const workResultData = {\n      result_id: `RES_${Date.now()}`,\n      previous_step_completed: true,\n    };\n\n    workResultQuery.value = {\n      success: true,\n      resultId: workResultData.result_id,\n      previousStepCompleted: workResultData.previous_step_completed,\n    };\n\n    addLog(\n      `작업실적 조회 성공: 실적ID ${workResultQuery.value.resultId}`,\n      \"success\",\n    );\n    return workResultQuery.value;\n  } catch (error) {\n    console.error(\"작업실적 조회 실패:\", error);\n\n    // 기본값으로 설정\n    workResultQuery.value = {\n      success: true,\n      resultId: `RES_${Date.now()}`,\n      previousStepCompleted: true,\n    };\n\n    addLog(\n      `작업실적 조회 실패, 기본 실적ID 생성: ${workResultQuery.value.resultId}`,\n      \"warning\",\n    );\n    return workResultQuery.value;\n  }\n}\n\n// 워크플로우 4단계: 작업번호 조회 (실제 DB 연동)\nasync function executeWorkflowStep4() {\n  console.log(\"워크플로우 4단계: 작업번호 조회 (실제 제품명 매핑 적용)\");\n\n  try {\n    const productCode = extractedProductCode.value;\n    const lineType = workInfo.value.lineType;\n    const lineId = workInfo.value.lineId;\n\n    addLog(\n      `2-3단계: 제품코드 ${productCode}의 ${lineType} 작업번호 조회 중...`,\n      \"info\",\n    );\n    addLog(\n      `API 경로: /packages/works/${lineType.toLowerCase()}/${lineId}`,\n      \"info\",\n    );\n\n    // 실제 DB 조회 API 호출\n    const response = await axios.get(\n      `/packages/works/${lineType.toLowerCase()}/${lineId}`,\n      {\n        params: {\n          line_name: workInfo.value.lineName,\n          product_code: productCode,\n        },\n      },\n    );\n\n    console.log(\"API 응답:\", response.data);\n\n    if (response.data.success && response.data.data) {\n      availableWork.value = response.data.data;\n      const productName = getDisplayProductName(availableWork.value);\n      addLog(\n        `DB에서 작업번호 조회 성공: ${availableWork.value.work_order_no} (제품: ${productName})`,\n        \"success\",\n      );\n      addLog(`실적연동ID: ${availableWork.value.result_detail_id}`, \"info\");\n      addLog(\n        `데이터 소스: ${response.data.table_structure || \"work_order_master + work_result_detail\"}`,\n        \"success\",\n      );\n      return availableWork.value;\n    } else {\n      throw new Error(\n        response.data.message || \"DB에서 작업번호를 찾을 수 없습니다\",\n      );\n    }\n  } catch (error) {\n    console.error(\"DB 연동 실패:\", error);\n    addLog(`DB 연동 실패: ${error.message}`, \"error\");\n\n    // 에러가 404인 경우 (작업번호 없음)\n    if (error.response && error.response.status === 404) {\n      const productName = getProductNameFromCode(extractedProductCode.value);\n      addLog(\n        `${workInfo.value.lineName}에 대기중인 작업번호가 없습니다. (제품: ${productName})`,\n        \"warning\",\n      );\n      availableWork.value = null;\n      return null;\n    }\n\n    // 서버 연결 에러인 경우\n    if (error.code === \"ECONNREFUSED\" || error.code === \"NETWORK_ERROR\") {\n      addLog(\"서버 연결 실패. 서버 상태를 확인해주세요.\", \"error\");\n      showErrorMessage(\"서버에 연결할 수 없습니다. 서버 상태를 확인해주세요.\");\n      availableWork.value = null;\n      return null;\n    }\n\n    // 기타 오류 - 폴백 데이터 사용하지 않음\n    addLog(\"실제 DB 연동에 실패했습니다. 관리자에게 문의하세요.\", \"error\");\n    showErrorMessage(`DB 연동 실패: ${error.message}`);\n    availableWork.value = null;\n    return null;\n  }\n}\n\n// 외포장 워크플로우 데이터 로드 (실제 DB 연동)\nasync function loadWorkflowData() {\n  try {\n    console.log(\"외포장 워크플로우 데이터 로드 시작\");\n\n    const baseLineName = workInfo.value.lineName.replace(\n      /\\s*(내포장|외포장).*$/,\n      \"\",\n    );\n    console.log(\"기본 라인명:\", baseLineName);\n\n    let innerData = null;\n\n    // 실제 API 호출로 내포장 완료 정보 조회\n    try {\n      const response = await axios.get(\"/packages/workflow/inner-completed\", {\n        params: { base_line_name: baseLineName },\n        headers: {\n          \"X-Workflow-Source\": \"PackageWork.vue\",\n          \"X-Table-Structure\": \"work_order_master + work_result_detail\",\n        },\n      });\n\n      if (response.data.success && response.data.data) {\n        innerData = response.data.data;\n        console.log(\"DB에서 내포장 완료 정보 조회 성공:\", innerData);\n      }\n    } catch (apiError) {\n      console.log(\"DB API 호출 실패, 대안 데이터 소스 확인:\", apiError.message);\n    }\n\n    // URL 파라미터 확인 (백업)\n    if (!innerData && workflowInfo.value.innerOutputQty > 0) {\n      innerData = {\n        work_order_no: workflowInfo.value.innerWorkNo,\n        pass_qty: workflowInfo.value.innerOutputQty,\n        work_end_time: workflowInfo.value.innerCompletionTime,\n        code_value: \"완료\",\n      };\n      console.log(\"URL 파라미터에서 워크플로우 데이터 사용:\", innerData);\n    }\n\n    // 메모리 확인 (최종 백업)\n    if (!innerData && window.workflowData) {\n      const workflowKey = `workflow_${baseLineName.replace(/\\s+/g, \"_\")}`;\n      const localData = window.workflowData[workflowKey];\n\n      if (localData && localData.inner_output_qty > 0) {\n        innerData = {\n          work_order_no: localData.inner_work_order_no,\n          pass_qty: localData.inner_output_qty,\n          work_end_time: localData.inner_completion_time,\n          code_value: \"완료\",\n        };\n        console.log(\"메모리에서 워크플로우 데이터 사용:\", innerData);\n      }\n    }\n\n    // 데이터 적용\n    if (innerData && innerData.pass_qty > 0) {\n      workflowInfo.value.innerCompleted = true;\n      workflowInfo.value.innerWorkNo = innerData.work_order_no;\n      workflowInfo.value.innerOutputQty = innerData.pass_qty;\n      workflowInfo.value.innerCompletionTime = new Date(\n        innerData.work_end_time || innerData.completion_time,\n      );\n      workflowInfo.value.step = \"OUTER\";\n\n      inputQuantity.value = innerData.pass_qty;\n\n      addLog(\n        `3-1단계: ${baseLineName} 외포장에 워크플로우 연계 완료 (${formatNumber(innerData.pass_qty)}개)`,\n        \"success\",\n      );\n      addLog(\n        `완료 작업: ${innerData.work_order_no}, 완료수량: ${formatNumber(innerData.pass_qty)}개`,\n        \"info\",\n      );\n      addLog(`데이터 소스: work_result_detail 테이블`, \"info\");\n\n      return true;\n    } else {\n      console.log(\"연결된 내포장 완료 정보 없음\");\n      addLog(\n        `${baseLineName}의 내포장 완료 정보를 찾을 수 없습니다.`,\n        \"warning\",\n      );\n      return false;\n    }\n  } catch (error) {\n    console.error(\"워크플로우 데이터 로드 실패:\", error);\n    addLog(\"워크플로우 연계에 실패했습니다. 수동으로 설정해주세요.\", \"warning\");\n    return false;\n  }\n}\n\n// 작업번호 변경 시 (실제 제품명 적용)\nasync function onWorkOrderChange() {\n  if (!selectedWorkOrder.value || !availableWork.value) {\n    resetCurrentWork();\n    return;\n  }\n\n  try {\n    loading.value = true;\n    loadingMessage.value = \"작업 정보를 불러오는 중...\";\n\n    console.log(`선택된 작업번호: ${selectedWorkOrder.value}`);\n    console.log(\"availableWork 원본 데이터:\", availableWork.value);\n\n    // 제품코드에서 실제 제품명 변환\n    const productCode =\n      availableWork.value.product_code || extractedProductCode.value;\n    const realProductName = getProductNameFromCode(productCode);\n\n    // availableWork에서 직접 매핑 (실제 제품명 사용)\n    currentWork.value = {\n      work_order_no:\n        availableWork.value.work_order_no || availableWork.value.work_id,\n      work_id: availableWork.value.work_id,\n      result_detail_id: availableWork.value.result_detail_id,\n      product_name:\n        availableWork.value.product_name &&\n        !availableWork.value.product_name.includes(\"제품\")\n          ? availableWork.value.product_name\n          : realProductName,\n      final_product_name:\n        availableWork.value.final_product_name &&\n        !availableWork.value.final_product_name.includes(\"제품\")\n          ? availableWork.value.final_product_name\n          : realProductName,\n      product_code: productCode,\n      target_quantity:\n        availableWork.value.input_qty || availableWork.value.target_qty || 1000,\n      current_quantity: availableWork.value.output_qty || 0,\n      remaining_quantity:\n        (availableWork.value.input_qty ||\n          availableWork.value.target_qty ||\n          1000) - (availableWork.value.output_qty || 0),\n      output_qty: availableWork.value.output_qty || 0,\n      defect_qty: 0,\n      progressRate: parseFloat(availableWork.value.progress_rate) || 0,\n      passRate: 0,\n      defectRate: 0,\n      achievementRate: 0,\n      employee_id: availableWork.value.employee_id || 2,\n      employee_name: availableWork.value.employee_name || \"김홍인\",\n      department: \"포장부\",\n      position: availableWork.value.position || \"작업자\",\n      start_time: availableWork.value.start_time,\n      actual_end_time: availableWork.value.actual_end_time,\n      end_time: availableWork.value.end_time,\n      work_duration: 0,\n      estimated_duration: 0,\n      step_status: availableWork.value.step_status || \"READY\",\n      package_type: availableWork.value.package_type || workInfo.value.lineType,\n      process_code: workInfo.value.lineType === \"INNER\" ? \"p3\" : \"p5\",\n      eq_type_code: \"i8\",\n    };\n\n    console.log(\"currentWork 객체로 변환 완료:\", currentWork.value);\n    console.log(`실제 제품명 적용: ${realProductName}`);\n\n    // 외포장 워크플로우 연계\n    if (\n      workInfo.value.lineType === \"OUTER\" &&\n      workflowInfo.value.innerCompleted &&\n      workflowInfo.value.innerOutputQty > 0\n    ) {\n      console.log(\n        `외포장 워크플로우 연계: ${workflowInfo.value.innerOutputQty}개`,\n      );\n      currentWork.value.current_quantity = workflowInfo.value.innerOutputQty;\n      inputQuantity.value = workflowInfo.value.innerOutputQty;\n      addLog(\n        `워크플로우 연계: 내포장 완료수량 ${formatNumber(workflowInfo.value.innerOutputQty)}개를 투입량으로 설정`,\n        \"success\",\n      );\n    }\n\n    updateCurrentWorkInfo();\n    addLog(\n      `작업번호 ${selectedWorkOrder.value} 정보를 불러왔습니다.`,\n      \"success\",\n    );\n    addLog(`제품명: ${realProductName} (코드: ${productCode})`, \"info\");\n    addLog(`데이터 소스: work_order_master + work_result_detail`, \"success\");\n\n    if (currentWork.value.result_detail_id) {\n      addLog(\n        `실적 연동 활성화: ${currentWork.value.result_detail_id}`,\n        \"success\",\n      );\n    }\n  } catch (error) {\n    console.error(`작업번호 ${selectedWorkOrder.value} 조회 실패:`, error);\n    showErrorMessage(\n      `작업번호 ${selectedWorkOrder.value} 정보를 불러올 수 없습니다: ${error.message}`,\n    );\n    resetCurrentWork();\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 작업 시작 (실제 DB 업데이트)\nasync function startWork() {\n  if (!isWorking.value) {\n    try {\n      loading.value = true;\n      loadingMessage.value = \"작업을 시작하는 중... (DB 업데이트)\";\n\n      const startTime = new Date().toISOString();\n\n      // 2-4단계: 작업시작 시 - DB 업데이트\n      if (workInfo.value.lineType === \"INNER\") {\n        try {\n          await updateWorkResultDetailStatus(\"in_progress\");\n          await updateWorkResultDetailStartTime(startTime);\n          addLog(\n            \"2-4단계: 내포장 작업 시작 - work_result_detail 테이블 업데이트\",\n            \"success\",\n          );\n          addLog('- work_result_detail.code_value = \"in_progress\"', \"info\");\n          addLog(\"- work_result_detail.work_start_time 설정\", \"info\");\n        } catch (apiError) {\n          console.error(\"내포장 워크플로우 시작 실패:\", apiError.message);\n          addLog(\n            \"2-4단계: 내포장 워크플로우 시작 실패 - 로컬 모드로 진행\",\n            \"warning\",\n          );\n        }\n      } else {\n        // 외포장 작업 시작\n        try {\n          await updateWorkResultDetailStatus(\"in_progress\");\n          await updateWorkResultDetailStartTime(startTime);\n          addLog(\n            \"외포장 작업 시작 - work_result_detail 테이블 업데이트\",\n            \"success\",\n          );\n          addLog('- work_result_detail.code_value = \"in_progress\"', \"info\");\n          addLog(\"- work_result_detail.work_start_time 설정\", \"info\");\n        } catch (apiError) {\n          console.error(\"외포장 워크플로우 시작 실패:\", apiError.message);\n          addLog(\"외포장 워크플로우 시작 실패 - 로컬 모드로 진행\", \"warning\");\n        }\n      }\n\n      // 상태 업데이트\n      isWorking.value = true;\n      workStatus.value = \"WORKING\";\n      workStartTime.value = new Date(startTime);\n      currentWork.value.start_time = workStartTime.value;\n      currentWork.value.current_quantity = inputQuantity.value;\n      currentWork.value.step_status = \"WORKING\";\n\n      // 진행률 초기화\n      productionSettings.value.targetQty = inputQuantity.value;\n      productionSettings.value.currentProgress =\n        currentWork.value.output_qty || 0;\n\n      updateCurrentWorkInfo();\n      startWorkTimer();\n      startProductionSimulation();\n\n      const productName = getDisplayProductName(availableWork.value);\n      addLog(\n        `${workInfo.value.lineType === \"INNER\" ? \"내포장\" : \"외포장\"} 작업 시작: ${formatNumber(inputQuantity.value)}개 (${productName})`,\n        \"success\",\n      );\n    } catch (error) {\n      console.error(\"작업 시작 실패:\", error);\n      addLog(`작업 시작 실패: ${error.message}`, \"error\");\n    } finally {\n      loading.value = false;\n    }\n  } else {\n    pauseProduction();\n  }\n}\n\n// 작업 완료 처리 (실제 DB 업데이트)\nasync function confirmCompleteWork() {\n  try {\n    loading.value = true;\n    loadingMessage.value = \"작업을 완료하는 중... (DB 업데이트)\";\n\n    const endTime = new Date().toISOString();\n    const passQty =\n      currentWork.value.output_qty || Math.floor(inputQuantity.value * 0.95);\n    const defectQty =\n      currentWork.value.defect_qty || Math.floor(inputQuantity.value * 0.05);\n\n    // 워크플로우 완료 처리\n    if (workInfo.value.lineType === \"INNER\") {\n      try {\n        // 내포장 완료시 실적 상세 테이블에 종료시간 업데이트\n        await updateWorkResultDetailEndTime(endTime);\n        await updateWorkResultDetailStatus(\"completed\");\n\n        addLog(\"내포장 완료 처리:\", \"success\");\n        addLog(\"- work_result_detail.work_end_time 업데이트 완료\", \"info\");\n        addLog('- work_result_detail.code_value = \"completed\"', \"info\");\n        addLog(\"- DB 업데이트 성공\", \"success\");\n      } catch (apiError) {\n        console.error(\"내포장 워크플로우 완료 실패:\", apiError.message);\n        addLog(\"내포장 워크플로우 완료 실패 - 로컬 모드로 완료\", \"warning\");\n      }\n    } else {\n      // 3-2단계: 외포장공정 종료 시 - 진행상태 = 검사중\n      try {\n        await updateWorkResultDetailEndTime(endTime);\n        await updateWorkResultDetailStatus(\"inspection\");\n\n        addLog(\"3-2단계: 외포장 완료 처리:\", \"success\");\n        addLog(\"- work_result_detail.work_end_time 업데이트 완료\", \"info\");\n        addLog('- work_result_detail.code_value = \"inspection\"', \"info\");\n        addLog(\"- DB 업데이트 성공\", \"success\");\n      } catch (apiError) {\n        console.error(\"외포장 워크플로우 완료 실패:\", apiError.message);\n        addLog(\"외포장 워크플로우 완료 실패 - 로컬 모드로 완료\", \"warning\");\n      }\n    }\n\n    // 내포장 완료 시 워크플로우 처리\n    if (workInfo.value.lineType === \"INNER\") {\n      await processInnerToOuterWorkflow();\n\n      setTimeout(() => {\n        startDirectTransitionToOuter();\n      }, 2000);\n    } else {\n      // 외포장 완료 - 모든 포장 작업 완료\n      addLog(\"모든 포장 작업이 완료되었습니다!\", \"success\");\n      addLog(\"work_result_detail 테이블 업데이트 완료\", \"info\");\n      setTimeout(() => {\n        startAutoTransitionToLineSelection();\n      }, 3000);\n    }\n\n    // 작업 상태 업데이트\n    isWorking.value = false;\n    workStatus.value = \"COMPLETED\";\n    currentWork.value.output_qty = passQty;\n    currentWork.value.defect_qty = defectQty;\n    currentWork.value.actual_end_time = new Date(endTime); // 실제 종료시간 설정\n\n    if (workTimer) {\n      clearInterval(workTimer);\n      workTimer = null;\n    }\n    if (productionTimer) {\n      clearInterval(productionTimer);\n      productionTimer = null;\n    }\n\n    closeCompleteModal();\n  } catch (error) {\n    console.error(\"작업 완료 실패:\", error);\n    addLog(`작업 완료 처리 중 오류: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 내포장→외포장 워크플로우 연계\nasync function processInnerToOuterWorkflow() {\n  try {\n    console.log(\"내포장→외포장 워크플로우 연계 시작\");\n\n    const baseLineName = workInfo.value.lineName.replace(\n      /\\s*(내포장|외포장).*$/,\n      \"\",\n    );\n\n    if (!window.workflowData) window.workflowData = {};\n    const workflowKey = `workflow_${baseLineName.replace(/\\s+/g, \"_\")}`;\n    window.workflowData[workflowKey] = {\n      inner_work_order_no:\n        currentWork.value.work_order_no || currentWork.value.work_id,\n      inner_output_qty: currentWork.value.output_qty,\n      inner_completion_time: new Date().toISOString(),\n      completion_type: \"complete\",\n    };\n\n    addLog(\n      `${baseLineName} 외포장에 워크플로우 연계 완료 (${formatNumber(currentWork.value.output_qty)}개)`,\n      \"success\",\n    );\n  } catch (error) {\n    console.error(\"워크플로우 연계 실패:\", error);\n    addLog(\"외포장 연계에 실패했지만 작업은 완료되었습니다.\", \"warning\");\n  }\n}\n\n// 외포장으로 전환\nfunction startDirectTransitionToOuter() {\n  addLog(\"지시량 달성 완료 - 외포장 라인 선택으로 이동합니다.\", \"success\");\n\n  const queryParams = {\n    inner_completed: \"true\",\n    inner_work_order_no:\n      currentWork.value.work_order_no || currentWork.value.work_id,\n    inner_output_qty: currentWork.value.output_qty,\n    inner_completion_time: new Date().toISOString(),\n    auto_start_guide: \"true\",\n    workflow_type: \"direct_transition\",\n    message: `내포장 작업(${currentWork.value.work_order_no || currentWork.value.work_id})이 완료되었습니다. 완료수량 ${formatNumber(currentWork.value.output_qty)}개를 외포장에 투입하세요.`,\n    success_message: \"내포장 작업이 성공적으로 완료되었습니다!\",\n  };\n\n  // 자동 전환 애니메이션 표시\n  showAutoTransition.value = true;\n  transitionProgress.value = 0;\n\n  const duration = 2000;\n  const interval = 50;\n  const increment = 100 / (duration / interval);\n\n  const progressTimer = setInterval(() => {\n    transitionProgress.value += increment;\n\n    if (transitionProgress.value >= 100) {\n      clearInterval(progressTimer);\n      showAutoTransition.value = false;\n\n      router.push({\n        name: \"package_line\",\n        query: queryParams,\n      });\n    }\n  }, interval);\n}\n\n// 자동 전환 함수\nfunction startAutoTransitionToLineSelection() {\n  console.log(\"자동 전환 시작\");\n  showAutoTransition.value = true;\n  transitionProgress.value = 0;\n\n  const duration = 3000;\n  const interval = 50;\n  const increment = 100 / (duration / interval);\n\n  const progressTimer = setInterval(() => {\n    transitionProgress.value += increment;\n\n    if (transitionProgress.value >= 100) {\n      clearInterval(progressTimer);\n      showAutoTransition.value = false;\n\n      let queryParams = {};\n\n      if (workInfo.value.lineType === \"INNER\") {\n        queryParams = {\n          inner_completed: \"true\",\n          prev_work:\n            currentWork.value.work_order_no || currentWork.value.work_id,\n          inner_work_order_no:\n            currentWork.value.work_order_no || currentWork.value.work_id,\n          inner_output_qty: currentWork.value.output_qty,\n          inner_completion_time: new Date().toISOString(),\n          auto_start_guide: \"true\",\n          message: `내포장 작업(${currentWork.value.work_order_no || currentWork.value.work_id})이 완료되었습니다. 완료수량 ${formatNumber(currentWork.value.output_qty)}개를 외포장에 투입하세요.`,\n          success_message: \"내포장 작업이 성공적으로 완료되었습니다!\",\n        };\n      } else {\n        queryParams = {\n          outer_completed: \"true\",\n          prev_work:\n            currentWork.value.work_order_no || currentWork.value.work_id,\n          prev_inner_work: workflowInfo.value.innerWorkNo,\n          message: `모든 포장 작업이 완료되었습니다! 내포장(${workflowInfo.value.innerWorkNo}) + 외포장(${currentWork.value.work_order_no || currentWork.value.work_id})`,\n          success_message: \"전체 포장 프로세스가 성공적으로 완료되었습니다!\",\n        };\n      }\n\n      router.push({\n        name: \"package_line\",\n        query: queryParams,\n      });\n    }\n  }, interval);\n}\n\n// 데이터 새로고침 (실제 DB 연동)\nasync function refreshWorkOrders() {\n  try {\n    addLog(\"새로고침을 시작합니다...\", \"info\");\n    loading.value = true;\n    loadingMessage.value = \"새로고침 중...\";\n\n    const currentSelectedWork = selectedWorkOrder.value;\n\n    // 초기화\n    availableWork.value = null;\n    processFlowResult.value.success = false;\n    workResultQuery.value.success = false;\n\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    // 워크플로우 재실행\n    try {\n      await executeWorkflowStep1();\n      await executeWorkflowStep2();\n      await executeWorkflowStep3();\n      await executeWorkflowStep4();\n\n      if (workInfo.value.lineType === \"OUTER\") {\n        await loadWorkflowData();\n      }\n\n      addLog(\"전체 워크플로우 재실행 완료\", \"success\");\n    } catch (workflowError) {\n      console.error(\"워크플로우 재실행 실패:\", workflowError);\n      addLog(`워크플로우 오류: ${workflowError.message}`, \"error\");\n    }\n\n    // 이전 선택 복원\n    if (currentSelectedWork && availableWork.value) {\n      if (\n        availableWork.value.work_order_no === currentSelectedWork ||\n        availableWork.value.work_id === currentSelectedWork\n      ) {\n        selectedWorkOrder.value = currentSelectedWork;\n        await onWorkOrderChange();\n        addLog(`이전 작업(${currentSelectedWork})을 복원했습니다.`, \"success\");\n      } else {\n        selectedWorkOrder.value =\n          availableWork.value.work_order_no || availableWork.value.work_id;\n        await onWorkOrderChange();\n        addLog(`이전 작업을 찾을 수 없어 새 작업을 선택했습니다.`, \"warning\");\n      }\n    } else if (availableWork.value) {\n      selectedWorkOrder.value =\n        availableWork.value.work_order_no || availableWork.value.work_id;\n      await onWorkOrderChange();\n    }\n\n    addLog(\"새로고침이 완료되었습니다.\", \"success\");\n  } catch (error) {\n    console.error(\"새로고침 실패:\", error);\n    addLog(`새로고침 실패: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 생산 시뮬레이션 시작\nfunction startProductionSimulation() {\n  if (productionTimer) {\n    clearInterval(productionTimer);\n  }\n\n  addLog(\"생산 시뮬레이션을 시작합니다...\", \"info\");\n\n  productionTimer = setInterval(() => {\n    if (!isWorking.value) return;\n\n    const increment = productionSettings.value.productionSpeed;\n    productionSettings.value.currentProgress = Math.min(\n      productionSettings.value.currentProgress + increment,\n      productionSettings.value.targetQty,\n    );\n\n    const totalProduced = productionSettings.value.currentProgress;\n    const defectQty = Math.floor(\n      totalProduced * productionSettings.value.defectRate,\n    );\n    const passQty = totalProduced - defectQty;\n\n    const totalTargetQty =\n      currentWork.value.target_quantity || productionSettings.value.targetQty;\n    currentWork.value.output_qty = passQty;\n    currentWork.value.defect_qty = defectQty;\n    currentWork.value.progressRate = Math.min(\n      100,\n      Math.round((passQty / totalTargetQty) * 100),\n    );\n    currentWork.value.passRate =\n      totalProduced > 0 ? Math.round((passQty / totalProduced) * 100) : 0;\n    currentWork.value.defectRate =\n      totalProduced > 0 ? Math.round((defectQty / totalProduced) * 100) : 0;\n\n    updateCurrentWorkInfo();\n\n    if (\n      totalProduced > 0 &&\n      totalProduced % (productionSettings.value.productionSpeed * 5) === 0\n    ) {\n      addLog(\n        `생산 진행: ${passQty}개 완료 (불량: ${defectQty}개, 진행률: ${currentWork.value.progressRate}%)`,\n        \"info\",\n      );\n    }\n\n    if (totalProduced >= productionSettings.value.targetQty) {\n      autoCompleteProduction();\n    }\n  }, 1000);\n}\n\n// 자동 완료\nfunction autoCompleteProduction() {\n  if (productionTimer) {\n    clearInterval(productionTimer);\n    productionTimer = null;\n  }\n\n  isWorking.value = false;\n  workStatus.value = \"COMPLETED\";\n  currentWork.value.actual_end_time = new Date(); // 실제 종료시간 설정\n\n  addLog(\"생산이 완료되었습니다!\", \"success\");\n  addLog('\"완료 처리\" 버튼을 눌러 작업을 마무리해주세요.', \"info\");\n}\n\n// 생산 일시정지\nfunction pauseProduction() {\n  isWorking.value = false;\n  workStatus.value = \"PAUSED\";\n\n  if (productionTimer) {\n    clearInterval(productionTimer);\n    productionTimer = null;\n  }\n\n  if (workTimer) {\n    clearInterval(workTimer);\n    workTimer = null;\n  }\n\n  addLog(\"작업을 일시정지했습니다.\", \"warning\");\n}\n\n// 생산 재시작\nfunction resumeProduction() {\n  isWorking.value = true;\n  workStatus.value = \"WORKING\";\n\n  startWorkTimer();\n  startProductionSimulation();\n\n  addLog(\"작업을 재시작했습니다.\", \"success\");\n}\n\n// 작업 종료\nasync function stopWork() {\n  try {\n    isWorking.value = false;\n    workStatus.value = \"COMPLETED\";\n    currentWork.value.actual_end_time = new Date(); // 실제 종료시간 설정\n\n    if (workTimer) {\n      clearInterval(workTimer);\n      workTimer = null;\n    }\n    if (productionTimer) {\n      clearInterval(productionTimer);\n      productionTimer = null;\n    }\n\n    addLog(\"작업을 강제 종료했습니다.\", \"info\");\n  } catch (error) {\n    console.error(\"작업 종료 실패:\", error);\n    showErrorMessage(\"작업 종료 처리에 실패했습니다.\");\n  }\n}\n\n// 라인 초기화\nasync function resetLineStatus() {\n  if (!confirm(\"이 라인의 작업 상태를 초기화하시겠습니까?\")) {\n    return;\n  }\n\n  try {\n    loading.value = true;\n    loadingMessage.value = \"라인 상태 초기화 중...\";\n\n    // 상태 초기화\n    isWorking.value = false;\n    workStatus.value = \"READY\";\n    selectedWorkOrder.value = \"\";\n    inputQuantity.value = 500;\n    resetCurrentWork();\n\n    if (workTimer) {\n      clearInterval(workTimer);\n      workTimer = null;\n    }\n    if (productionTimer) {\n      clearInterval(productionTimer);\n      productionTimer = null;\n    }\n\n    addLog(\"라인 상태를 초기화했습니다.\", \"success\");\n\n    await refreshWorkOrders();\n  } catch (error) {\n    console.error(\"라인 초기화 실패:\", error);\n    addLog(`라인 초기화 실패: ${error.message}`, \"error\");\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 투입수량 변경 핸들러\nfunction onInputQuantityChange() {\n  if (selectedWorkOrder.value && inputQuantity.value > 0) {\n    if (\n      workInfo.value.lineType === \"OUTER\" &&\n      workflowInfo.value.innerCompleted &&\n      workflowInfo.value.innerOutputQty > 0\n    ) {\n      console.log(\"외포장 워크플로우 연계 중 - 투입수량 변경 제한\");\n      return;\n    }\n\n    currentWork.value.current_quantity = inputQuantity.value;\n    updateCurrentWorkInfo();\n  }\n}\n\n// 현재 작업 정보 업데이트\nfunction updateCurrentWorkInfo() {\n  if (currentWork.value.target_quantity > 0) {\n    currentWork.value.remaining_quantity = Math.max(\n      0,\n      currentWork.value.target_quantity - currentWork.value.current_quantity,\n    );\n\n    currentWork.value.achievementRate = Math.round(\n      (currentWork.value.output_qty / currentWork.value.target_quantity) * 100,\n    );\n  } else {\n    currentWork.value.remaining_quantity = 0;\n    currentWork.value.achievementRate = 0;\n  }\n\n  if (isWorking.value && productionSettings.value.productionSpeed > 0) {\n    const remainingQty =\n      productionSettings.value.targetQty -\n      productionSettings.value.currentProgress;\n    const remainingSeconds =\n      remainingQty / productionSettings.value.productionSpeed;\n    currentWork.value.end_time = new Date(Date.now() + remainingSeconds * 1000);\n    currentWork.value.estimated_duration = Math.ceil(remainingSeconds);\n  }\n}\n\n// 작업 정보 리셋\nfunction resetCurrentWork() {\n  currentWork.value = {\n    work_order_no: \"\",\n    work_id: \"\",\n    result_detail_id: null,\n    result_id: \"\",\n    product_name: \"\",\n    final_product_name: \"\",\n    product_code: \"\",\n    package_type: \"\",\n    target_quantity: 0,\n    current_quantity: 0,\n    remaining_quantity: 0,\n    output_qty: 0,\n    defect_qty: 0,\n    progressRate: 0,\n    passRate: 0,\n    defectRate: 0,\n    achievementRate: 0,\n    employee_id: 2,\n    worker_name: \"\",\n    department: \"포장부\",\n    position: \"작업자\",\n    start_time: null,\n    actual_end_time: null,\n    end_time: null,\n    work_duration: 0,\n    estimated_duration: 0,\n    step_status: \"READY\",\n    process_code: \"\",\n    eq_type_code: \"\",\n  };\n}\n\n// 작업 완료 버튼\nfunction completeProduction() {\n  if (workStatus.value === \"COMPLETED\" || !isWorking.value) {\n    showCompleteModal.value = true;\n    return;\n  }\n\n  showCompleteModal.value = true;\n}\n\n// 작업 버튼 핸들러\nfunction handleWorkButton() {\n  if (workStatus.value === \"READY\") {\n    startWork();\n  } else if (workStatus.value === \"WORKING\") {\n    pauseProduction();\n  } else if (workStatus.value === \"PAUSED\") {\n    resumeProduction();\n  }\n}\n\n// 에러 처리\nfunction showErrorMessage(message) {\n  errorMessage.value = message;\n  showError.value = true;\n  addLog(message, \"error\");\n}\n\nfunction hideError() {\n  showError.value = false;\n}\n\nasync function retryConnection() {\n  hideError();\n  try {\n    await refreshWorkOrders();\n  } catch (error) {\n    showErrorMessage(\"재연결에 실패했습니다.\");\n  }\n}\n\n// work_result_detail 상태 업데이트 API\nasync function updateWorkResultDetailStatus(status) {\n  try {\n    const response = await axios.post(\n      \"/packages/workflow/start-inner\",\n      {\n        work_order_no: currentWork.value.work_order_no,\n        product_code: currentWork.value.product_code,\n        process_group_code: processFlowResult.value.processGroupCode,\n      },\n      {\n        headers: {\n          \"X-Workflow-Source\": \"PackageWork.vue\",\n          \"X-Table-Structure\": \"work_order_master + work_result_detail\",\n        },\n      },\n    );\n\n    if (response.data.success) {\n      addLog(\n        `work_result_detail.code_value = \"${status}\" 업데이트 성공`,\n        \"success\",\n      );\n    }\n  } catch (error) {\n    console.error(\"work_result_detail 상태 업데이트 실패:\", error);\n    throw error;\n  }\n}\n\n// work_result_detail 시작시간 업데이트 API\nasync function updateWorkResultDetailStartTime(startTime) {\n  try {\n    const response = await axios.put(\n      \"/packages/workflow/update-start-time\",\n      {\n        work_order_no: currentWork.value.work_order_no,\n        start_time: startTime,\n        result_detail_id: currentWork.value.result_detail_id,\n      },\n      {\n        headers: {\n          \"X-Workflow-Source\": \"PackageWork.vue\",\n          \"X-Table-Structure\": \"work_order_master + work_result_detail\",\n        },\n      },\n    );\n\n    if (response.data.success) {\n      addLog(\"work_result_detail.work_start_time 업데이트 성공\", \"success\");\n    }\n  } catch (error) {\n    console.error(\"work_result_detail 시작시간 업데이트 실패:\", error);\n    throw error;\n  }\n}\n\n// work_result_detail 종료시간 업데이트 API\nasync function updateWorkResultDetailEndTime(endTime) {\n  try {\n    const response = await axios.put(\n      \"/packages/workflow/update-end-time\",\n      {\n        work_order_no: currentWork.value.work_order_no,\n        end_time: endTime,\n        result_detail_id: currentWork.value.result_detail_id,\n        pass_qty: currentWork.value.output_qty,\n        defect_qty: currentWork.value.defect_qty,\n      },\n      {\n        headers: {\n          \"X-Workflow-Source\": \"PackageWork.vue\",\n          \"X-Table-Structure\": \"work_order_master + work_result_detail\",\n        },\n      },\n    );\n\n    if (response.data.success) {\n      addLog(\"work_result_detail.work_end_time 업데이트 성공\", \"success\");\n    }\n  } catch (error) {\n    console.error(\"work_result_detail 종료시간 업데이트 실패:\", error);\n    throw error;\n  }\n}\n\n// 작업 타이머 시작\nfunction startWorkTimer() {\n  if (workTimer) {\n    clearInterval(workTimer);\n  }\n\n  workTimer = setInterval(() => {\n    if (isWorking.value && workStartTime.value) {\n      const now = new Date();\n      const elapsed = now - workStartTime.value;\n      const hours = Math.floor(elapsed / (1000 * 60 * 60));\n      const minutes = Math.floor((elapsed % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((elapsed % (1000 * 60)) / 1000);\n\n      workElapsedTime.value = `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n    }\n  }, 1000);\n}\n\n// 로그 추가\nfunction addLog(message, type = \"info\") {\n  const log = {\n    id: Date.now() + Math.random(),\n    timestamp: new Date(),\n    message,\n    type,\n  };\n\n  workLogs.value.unshift(log);\n\n  // 로그 개수 제한 (최대 100개)\n  if (workLogs.value.length > 100) {\n    workLogs.value = workLogs.value.slice(0, 100);\n  }\n}\n\n// 라인 선택으로 돌아가기\nfunction goBackToLineSelection() {\n  if (isWorking.value) {\n    if (\n      !confirm(\"작업 중입니다. 정말로 라인 선택 페이지로 돌아가시겠습니까?\")\n    ) {\n      return;\n    }\n  }\n\n  router.push({ name: \"package_line\" });\n}\n\n// 모달 제어\nfunction closeCompleteModal() {\n  showCompleteModal.value = false;\n}\n\n// 텍스트 및 상태 함수들\nfunction getWorkflowStepText() {\n  if (workflowInfo.value.step === \"OUTER\") {\n    return \"외포장\";\n  }\n  return workInfo.value.lineType === \"INNER\" ? \"내포장\" : \"외포장\";\n}\n\nfunction getWorkStatusText(status) {\n  const statusMap = {\n    READY: \"대기\",\n    WORKING: \"진행중\",\n    PAUSED: \"일시정지\",\n    COMPLETED: \"완료\",\n    PARTIAL_COMPLETE: \"부분완료\",\n    partial_complete: \"부분완료\",\n    부분완료: \"부분완료\",\n    대기: \"대기\",\n    진행중: \"진행중\",\n    일시정지: \"일시정지\",\n    완료: \"완료\",\n    in_progress: \"진행중\",\n    completed: \"완료\",\n    inspection: \"검사중\",\n  };\n  return statusMap[status] || status || \"대기\";\n}\n\nfunction getWorkStatusClass(status) {\n  const classMap = {\n    READY: \"ready\",\n    WORKING: \"working\",\n    PAUSED: \"paused\",\n    COMPLETED: \"completed\",\n    PARTIAL_COMPLETE: \"partial\",\n    partial_complete: \"partial\",\n    부분완료: \"partial\",\n    대기: \"ready\",\n    진행중: \"working\",\n    일시정지: \"paused\",\n    완료: \"completed\",\n    in_progress: \"working\",\n    completed: \"completed\",\n    inspection: \"inspection\",\n  };\n  return classMap[status] || \"ready\";\n}\n\nfunction getWorkButtonText() {\n  if (workStatus.value === \"READY\") {\n    return \"작업 시작\";\n  } else if (workStatus.value === \"WORKING\") {\n    return \"일시정지\";\n  } else if (workStatus.value === \"PAUSED\") {\n    return \"재시작\";\n  }\n  return \"작업 시작\";\n}\n\nfunction getCompleteModalTitle() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"내포장 작업 완료\";\n  } else {\n    return \"외포장 작업 완료\";\n  }\n}\n\nfunction getConfirmationText() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"내포장 작업을 완료하고 외포장 라인 선택으로 이동하시겠습니까?\";\n  } else {\n    return \"외포장 작업을 완료하고 전체 포장 프로세스를 마무리하시겠습니까?\";\n  }\n}\n\nfunction getCompleteButtonText() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"완료 후 외포장으로\";\n  } else {\n    return \"전체 완료\";\n  }\n}\n\nfunction getTransitionTitle() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"외포장 라인 선택으로 이동 중...\";\n  } else {\n    return \"포장 라인 선택으로 이동 중...\";\n  }\n}\n\nfunction getTransitionMessage() {\n  if (workInfo.value.lineType === \"INNER\") {\n    return \"내포장 작업이 완료되었습니다. 외포장 라인을 선택하세요.\";\n  } else {\n    return \"모든 포장 작업이 완료되었습니다!\";\n  }\n}\n\nfunction getAchievementRateClass(rate) {\n  if (rate >= 100) return \"excellent\";\n  if (rate >= 80) return \"good\";\n  if (rate >= 60) return \"normal\";\n  return \"low\";\n}\n\n// 포맷팅 함수들\nfunction formatNumber(number) {\n  if (number == null || number === undefined) return \"0\";\n  return new Intl.NumberFormat(\"ko-KR\").format(number);\n}\n\nfunction formatTime(time) {\n  if (!time) return \"-\";\n\n  if (typeof time === \"string\") {\n    time = new Date(time);\n  }\n\n  if (!(time instanceof Date) || isNaN(time.getTime())) {\n    return \"-\";\n  }\n\n  return time.toLocaleString(\"ko-KR\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  });\n}\n\nfunction formatDateTime(time) {\n  if (!time) return \"-\";\n\n  if (typeof time === \"string\") {\n    time = new Date(time);\n  }\n\n  if (!(time instanceof Date) || isNaN(time.getTime())) {\n    return \"-\";\n  }\n\n  return time.toLocaleString(\"ko-KR\", {\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  });\n}\n\n// 컴포넌트 언마운트 시 정리\nonUnmounted(() => {\n  if (workTimer) {\n    clearInterval(workTimer);\n  }\n  if (productionTimer) {\n    clearInterval(productionTimer);\n  }\n});\n</script>\n\n<style scoped>\n.package-work-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  padding: 20px;\n}\n\n/* 헤더 스타일 */\n.work-header {\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.breadcrumb {\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  font-size: 14px;\n  color: #6b7280;\n}\n\n.breadcrumb-item {\n  transition: color 0.2s;\n}\n\n.breadcrumb-item.active {\n  color: #1f2937;\n  font-weight: 600;\n}\n\n.breadcrumb-separator {\n  margin: 0 8px;\n  color: #d1d5db;\n}\n\n.header-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.header-left h1 {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 12px 0;\n}\n\n.header-meta {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.line-type-badge,\n.work-status-badge,\n.workflow-badge {\n  padding: 4px 12px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n}\n\n.line-type-badge.inner {\n  background: #dbeafe;\n  color: #1e40af;\n}\n\n.line-type-badge.outer {\n  background: #f3e8ff;\n  color: #7c3aed;\n}\n\n.work-status-badge.ready {\n  background: #f3f4f6;\n  color: #6b7280;\n}\n\n.work-status-badge.working {\n  background: #dcfce7;\n  color: #16a34a;\n}\n\n.work-status-badge.paused {\n  background: #fef3c7;\n  color: #d97706;\n}\n\n.work-status-badge.completed {\n  background: #dbeafe;\n  color: #2563eb;\n}\n\n.workflow-badge {\n  background: #f0f9ff;\n  color: #0284c7;\n}\n\n.workflow-indicator {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.workflow-step {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 40px;\n  border-radius: 8px;\n  background: #f3f4f6;\n  color: #6b7280;\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 0.3s;\n}\n\n.workflow-step.completed {\n  background: #dcfce7;\n  color: #16a34a;\n}\n\n.workflow-step.active {\n  background: #dbeafe;\n  color: #2563eb;\n}\n\n.workflow-arrow {\n  color: #9ca3af;\n  font-size: 14px;\n  font-weight: 600;\n}\n\n/* 워크플로우 안내 */\n.workflow-guide {\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  border: 1px solid #0ea5e9;\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 24px;\n}\n\n.guide-content h3 {\n  color: #0c4a6e;\n  font-size: 18px;\n  font-weight: 700;\n  margin: 0 0 8px 0;\n}\n\n.guide-content p {\n  color: #0369a1;\n  margin: 0 0 16px 0;\n  line-height: 1.6;\n}\n\n.guide-stats {\n  display: flex;\n  gap: 16px;\n  font-size: 14px;\n  color: #0284c7;\n}\n\n.output-qty {\n  font-weight: 600;\n  color: #0c4a6e;\n}\n\n/* 메인 레이아웃 */\n.work-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.work-layout {\n  display: grid;\n  grid-template-columns: 1fr 350px;\n  gap: 24px;\n}\n\n@media (max-width: 1200px) {\n  .work-layout {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* 메인 작업 영역 */\n.work-main {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n/* 제어 패널 */\n.control-panel {\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.panel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.panel-header h3 {\n  font-size: 18px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0;\n}\n\n.control-section {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.control-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n}\n\n@media (max-width: 768px) {\n  .control-row {\n    grid-template-columns: 1fr;\n  }\n}\n\n.control-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.control-label {\n  font-size: 14px;\n  font-weight: 600;\n  color: #374151;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.line-info {\n  font-size: 12px;\n  color: #6b7280;\n  font-weight: 400;\n}\n\n.selected-count {\n  font-size: 12px;\n  color: #059669;\n  font-weight: 400;\n}\n\n.target-info,\n.workflow-info {\n  font-size: 12px;\n  color: #6b7280;\n  font-weight: 400;\n}\n\n.workflow-info {\n  color: #0284c7;\n}\n\n.control-display {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 12px;\n  background: #f9fafb;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n}\n\n.display-value {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.display-value.workflow-linked {\n  color: #0284c7;\n}\n\n.display-unit {\n  font-size: 14px;\n  color: #6b7280;\n}\n\n.control-select,\n.control-input {\n  padding: 10px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.control-select:focus,\n.control-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.control-input.workflow-linked {\n  background: #f0f9ff;\n  border-color: #0ea5e9;\n  color: #0c4a6e;\n}\n\n.control-input.partial-work {\n  background: #fefce8;\n  border-color: #eab308;\n}\n\n.control-select:disabled,\n.control-input:disabled {\n  background: #f3f4f6;\n  color: #9ca3af;\n  cursor: not-allowed;\n}\n\n.workflow-linked-info {\n  font-size: 12px;\n  color: #0284c7;\n  font-style: italic;\n}\n\n/* 작업번호 메시지 */\n.no-work-message,\n.loading-work-message {\n  padding: 16px;\n  border-radius: 8px;\n  margin-top: 8px;\n}\n\n.no-work-message {\n  background: #fef3c7;\n  border: 1px solid #f59e0b;\n}\n\n.loading-work-message {\n  background: #f0f9ff;\n  border: 1px solid #0ea5e9;\n}\n\n.message-content,\n.loading-content {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.message-text,\n.loading-content strong {\n  font-weight: 600;\n  color: #92400e;\n}\n\n.loading-content strong {\n  color: #0c4a6e;\n}\n\n.message-help,\n.loading-help {\n  font-size: 13px;\n  line-height: 1.5;\n  color: #b45309;\n}\n\n.loading-help {\n  color: #0369a1;\n}\n\n/* 작업 제어 버튼 */\n.work-controls {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 24px;\n  padding-top: 24px;\n  border-top: 1px solid #e5e7eb;\n}\n\n.main-actions,\n.sub-actions {\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n}\n\n.btn {\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  border: 1px solid transparent;\n  text-align: center;\n  min-width: 120px;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.btn-work {\n  background: #10b981;\n  color: white;\n  border-color: #059669;\n}\n\n.btn-work:hover:not(:disabled) {\n  background: #059669;\n}\n\n.btn-work.working {\n  background: #f59e0b;\n  border-color: #d97706;\n}\n\n.btn-work.working:hover:not(:disabled) {\n  background: #d97706;\n}\n\n.btn-complete {\n  background: #3b82f6;\n  color: white;\n  border-color: #2563eb;\n}\n\n.btn-complete:hover:not(:disabled) {\n  background: #2563eb;\n}\n\n.btn-complete.ready {\n  background: #059669;\n  border-color: #047857;\n}\n\n.btn-complete.ready:hover:not(:disabled) {\n  background: #047857;\n}\n\n.btn-stop {\n  background: #ef4444;\n  color: white;\n  border-color: #dc2626;\n}\n\n.btn-stop:hover:not(:disabled) {\n  background: #dc2626;\n}\n\n.btn-refresh,\n.btn-reset {\n  background: #f3f4f6;\n  color: #374151;\n  border-color: #d1d5db;\n  min-width: auto;\n  padding: 10px 16px;\n}\n\n.btn-refresh:hover:not(:disabled),\n.btn-reset:hover:not(:disabled) {\n  background: #e5e7eb;\n  border-color: #9ca3af;\n}\n\n/* 진행 상황 패널 */\n.progress-panel {\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.progress-panel h3 {\n  font-size: 18px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 20px 0;\n}\n\n.progress-cards {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n@media (max-width: 640px) {\n  .progress-cards {\n    grid-template-columns: 1fr;\n  }\n}\n\n.progress-card {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.progress-card.success {\n  background: #f0fdf4;\n  border-color: #bbf7d0;\n}\n\n.progress-card.danger {\n  background: #fef2f2;\n  border-color: #fecaca;\n}\n\n.card-header {\n  margin-bottom: 8px;\n}\n\n.card-title {\n  font-size: 14px;\n  color: #64748b;\n  font-weight: 500;\n}\n\n.card-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1e293b;\n  margin-bottom: 4px;\n}\n\n.progress-card.success .card-value {\n  color: #166534;\n}\n\n.progress-card.danger .card-value {\n  color: #991b1b;\n}\n\n.card-unit {\n  font-size: 12px;\n  color: #64748b;\n}\n\n.progress-section {\n  background: #f8fafc;\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.progress-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.progress-header span:first-child {\n  font-size: 14px;\n  color: #64748b;\n  font-weight: 500;\n}\n\n.progress-percent {\n  font-size: 16px;\n  font-weight: 700;\n  color: #1e293b;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 8px;\n  background: #e2e8f0;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #10b981 0%, #059669 100%);\n  transition: width 0.3s ease;\n}\n\n/* 로그 패널 */\n.log-panel {\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.log-panel h3 {\n  font-size: 18px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 16px 0;\n}\n\n.log-container {\n  max-height: 300px;\n  overflow-y: auto;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  background: #f9fafb;\n}\n\n.log-item {\n  display: flex;\n  gap: 12px;\n  padding: 8px 12px;\n  border-bottom: 1px solid #e5e7eb;\n  font-size: 13px;\n}\n\n.log-item:last-child {\n  border-bottom: none;\n}\n\n.log-item.info {\n  background: #f8fafc;\n}\n\n.log-item.success {\n  background: #f0fdf4;\n}\n\n.log-item.warning {\n  background: #fffbeb;\n}\n\n.log-item.error {\n  background: #fef2f2;\n}\n\n.log-time {\n  color: #6b7280;\n  font-weight: 500;\n  min-width: 80px;\n}\n\n.log-content {\n  color: #374151;\n  flex: 1;\n  line-height: 1.4;\n}\n\n.log-item.success .log-content {\n  color: #166534;\n}\n\n.log-item.warning .log-content {\n  color: #92400e;\n}\n\n.log-item.error .log-content {\n  color: #991b1b;\n}\n\n/* 사이드바 */\n.work-sidebar {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n/* 워크플로우 패널 */\n.workflow-panel {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.workflow-panel h3 {\n  font-size: 16px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 16px 0;\n}\n\n.workflow-chain {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.chain-step {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 12px;\n}\n\n.chain-step.completed {\n  background: #f0fdf4;\n  border-color: #bbf7d0;\n}\n\n.chain-step.current {\n  background: #f0f9ff;\n  border-color: #bfdbfe;\n}\n\n.step-header {\n  margin-bottom: 8px;\n}\n\n.step-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.chain-step.completed .step-title {\n  color: #166534;\n}\n\n.chain-step.current .step-title {\n  color: #1e40af;\n}\n\n.step-details {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.detail-item {\n  display: flex;\n  justify-content: space-between;\n  font-size: 13px;\n}\n\n.detail-label {\n  color: #64748b;\n}\n\n.detail-value {\n  color: #1e293b;\n  font-weight: 500;\n}\n\n.detail-value.highlight {\n  color: #059669;\n  font-weight: 600;\n}\n\n.chain-arrow {\n  text-align: center;\n  color: #64748b;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 4px 0;\n}\n\n/* 정보 패널 */\n.info-panel {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.info-panel h3 {\n  font-size: 16px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 16px 0;\n}\n\n.info-section {\n  margin-bottom: 20px;\n}\n\n.info-section:last-child {\n  margin-bottom: 0;\n}\n\n.info-section h4 {\n  font-size: 14px;\n  font-weight: 600;\n  color: #374151;\n  margin: 0 0 12px 0;\n  padding-bottom: 6px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.info-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 6px 0;\n  font-size: 13px;\n}\n\n.info-label {\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.info-value {\n  color: #1f2937;\n  font-weight: 600;\n  text-align: right;\n  max-width: 60%;\n  word-break: break-all;\n}\n\n.info-value.workflow-linked {\n  color: #0284c7;\n}\n\n.achievement-rate.excellent {\n  color: #059669;\n}\n\n.achievement-rate.good {\n  color: #0284c7;\n}\n\n.achievement-rate.normal {\n  color: #d97706;\n}\n\n.achievement-rate.low {\n  color: #dc2626;\n}\n\n.work-duration {\n  font-family: \"Monaco\", \"Menlo\", monospace;\n  color: #1f2937;\n}\n\n.estimated-time.time-warning {\n  color: #dc2626;\n  font-weight: 700;\n}\n\n.worker-name {\n  color: #1f2937;\n}\n\n/* 라인 변경 패널 */\n.line-change-panel {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.btn-line-change {\n  width: 100%;\n  padding: 12px;\n  background: #f3f4f6;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  color: #374151;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-bottom: 12px;\n}\n\n.btn-line-change:hover {\n  background: #e5e7eb;\n  border-color: #9ca3af;\n}\n\n.line-change-help {\n  font-size: 12px;\n  color: #6b7280;\n  line-height: 1.5;\n  margin: 0;\n}\n\n/* 모달 스타일 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 20px;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 12px;\n  max-width: 600px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 24px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.modal-header h3 {\n  font-size: 18px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0;\n}\n\n.modal-close {\n  padding: 8px 16px;\n  background: #f3f4f6;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  color: #374151;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.modal-close:hover {\n  background: #e5e7eb;\n}\n\n.modal-body {\n  padding: 24px;\n}\n\n/* 완료 모달 */\n.complete-summary {\n  margin-bottom: 24px;\n}\n\n.complete-summary h4 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0 0 16px 0;\n}\n\n.summary-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 12px;\n}\n\n@media (max-width: 480px) {\n  .summary-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n.summary-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px;\n  background: #f8fafc;\n  border-radius: 6px;\n  font-size: 14px;\n}\n\n.summary-label {\n  color: #64748b;\n  font-weight: 500;\n}\n\n.summary-value {\n  color: #1e293b;\n  font-weight: 700;\n}\n\n.next-step-info {\n  margin: 24px 0;\n  padding: 20px;\n  border-radius: 8px;\n}\n\n.next-step-info.inner-completion {\n  background: #f0f9ff;\n  border: 1px solid #0ea5e9;\n}\n\n.next-step-info.outer-completion {\n  background: #f0fdf4;\n  border: 1px solid #22c55e;\n}\n\n.info-box {\n  background: white;\n  border-radius: 6px;\n  padding: 16px;\n}\n\n.info-content h5 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 8px 0;\n}\n\n.info-content p {\n  color: #64748b;\n  margin: 0 0 12px 0;\n  line-height: 1.6;\n}\n\n.info-content ul {\n  margin: 0;\n  padding-left: 20px;\n  color: #64748b;\n}\n\n.info-content li {\n  margin-bottom: 4px;\n  line-height: 1.5;\n}\n\n.completion-chain {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  margin: 16px 0;\n}\n\n.chain-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n}\n\n.chain-text {\n  font-size: 14px;\n  color: #64748b;\n}\n\n.chain-status {\n  font-size: 12px;\n  font-weight: 600;\n  color: #059669;\n  background: #dcfce7;\n  padding: 2px 8px;\n  border-radius: 12px;\n}\n\n.confirmation-text {\n  font-size: 16px;\n  color: #374151;\n  text-align: center;\n  margin: 0;\n  line-height: 1.6;\n}\n\n.modal-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding: 20px 24px;\n  border-top: 1px solid #e5e7eb;\n}\n\n.btn-cancel,\n.btn-confirm {\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-cancel {\n  background: #f3f4f6;\n  color: #374151;\n  border: 1px solid #d1d5db;\n}\n\n.btn-cancel:hover {\n  background: #e5e7eb;\n}\n\n.btn-confirm {\n  background: #3b82f6;\n  color: white;\n  border: 1px solid #2563eb;\n}\n\n.btn-confirm:hover {\n  background: #2563eb;\n}\n\n/* 자동 전환 오버레이 */\n.auto-transition-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1100;\n}\n\n.transition-modal {\n  background: white;\n  border-radius: 12px;\n  padding: 32px;\n  text-align: center;\n  max-width: 400px;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n}\n\n.transition-modal h3 {\n  font-size: 20px;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 12px 0;\n}\n\n.transition-modal p {\n  color: #6b7280;\n  margin: 0 0 24px 0;\n  line-height: 1.6;\n}\n\n.transition-progress {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.transition-progress .progress-bar {\n  flex: 1;\n  height: 8px;\n  background: #e5e7eb;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.transition-progress .progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #3b82f6 0%, #1d4ed8 100%);\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  font-size: 14px;\n  font-weight: 600;\n  color: #374151;\n  min-width: 40px;\n}\n\n/* 로딩 및 에러 오버레이 */\n.loading-overlay,\n.error-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #e5e7eb;\n  border-top: 4px solid #3b82f6;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 16px;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.loading-text {\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  text-align: center;\n}\n\n.error-modal {\n  background: white;\n  border-radius: 12px;\n  max-width: 400px;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n}\n\n.error-header {\n  padding: 20px 24px;\n  border-bottom: 1px solid #fee2e2;\n  background: #fef2f2;\n  border-radius: 12px 12px 0 0;\n}\n\n.error-header h3 {\n  font-size: 18px;\n  font-weight: 700;\n  color: #991b1b;\n  margin: 0;\n}\n\n.error-body {\n  padding: 24px;\n}\n\n.error-body p {\n  color: #374151;\n  margin: 0 0 12px 0;\n  line-height: 1.6;\n}\n\n.error-help {\n  color: #6b7280;\n  font-size: 14px;\n}\n\n.error-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding: 20px 24px;\n  border-top: 1px solid #e5e7eb;\n}\n\n.btn-error-close,\n.btn-retry {\n  padding: 10px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-error-close {\n  background: #f3f4f6;\n  color: #374151;\n  border: 1px solid #d1d5db;\n}\n\n.btn-error-close:hover {\n  background: #e5e7eb;\n}\n\n.btn-retry {\n  background: #3b82f6;\n  color: white;\n  border: 1px solid #2563eb;\n}\n\n.btn-retry:hover {\n  background: #2563eb;\n}\n\n/* 스크롤바 스타일 */\n.log-container::-webkit-scrollbar,\n.modal-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.log-container::-webkit-scrollbar-track,\n.modal-content::-webkit-scrollbar-track {\n  background: #f1f5f9;\n  border-radius: 3px;\n}\n\n.log-container::-webkit-scrollbar-thumb,\n.modal-content::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.log-container::-webkit-scrollbar-thumb:hover,\n.modal-content::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n/* 반응형 디자인 */\n@media (max-width: 1024px) {\n  .package-work-container {\n    padding: 16px;\n  }\n\n  .work-header {\n    padding: 20px;\n  }\n\n  .header-info {\n    flex-direction: column;\n    gap: 16px;\n  }\n\n  .workflow-indicator {\n    align-self: flex-start;\n  }\n}\n\n@media (max-width: 768px) {\n  .control-panel,\n  .progress-panel,\n  .log-panel,\n  .info-panel {\n    padding: 16px;\n  }\n\n  .btn {\n    min-width: auto;\n    flex: 1;\n  }\n\n  .main-actions,\n  .sub-actions {\n    flex-direction: column;\n  }\n\n  .modal-content {\n    margin: 16px;\n    max-width: calc(100vw - 32px);\n  }\n\n  .transition-modal {\n    margin: 16px;\n    max-width: calc(100vw - 32px);\n  }\n}\n\n@media (max-width: 480px) {\n  .package-work-container {\n    padding: 12px;\n  }\n\n  .work-header {\n    padding: 16px;\n  }\n\n  .header-left h1 {\n    font-size: 20px;\n  }\n\n  .workflow-step {\n    width: 80px;\n    height: 32px;\n    font-size: 12px;\n  }\n\n  .progress-cards {\n    gap: 12px;\n  }\n\n  .card-value {\n    font-size: 20px;\n  }\n}\n</style>\n"],"names":["axios","router","useRouter","route","useRoute","workInfo","ref","getProductNameFromCode","productCode","productNameMap","baseCode","code","name","getDisplayProductName","workData","extractedProductCode","computed","lineName","lineId","codePatterns","pattern","match","productMapping","keyword","code30","code60","prefixMapping","prefix","workflowInfo","processFlowResult","workResultQuery","showCompleteModal","showAutoTransition","transitionProgress","loading","loadingMessage","showError","errorMessage","workStatus","isWorking","workStartTime","workElapsedTime","selectedWorkOrder","inputQuantity","availableWork","currentWork","workLogs","workTimer","productionTimer","isTimeWarning","now","productionSettings","isPartialWork","canStartWork","onMounted","executeWorkflowStep1","executeWorkflowStep2","executeWorkflowStep3","executeWorkflowStep4","loadWorkflowData","onWorkOrderChange","addLog","productName","error","processTypeCode","processFlowData","processGroupCode","previousOrder","workResultData","lineType","response","showErrorMessage","baseLineName","innerData","apiError","workflowKey","localData","formatNumber","resetCurrentWork","realProductName","updateCurrentWorkInfo","startWork","pauseProduction","startTime","updateWorkResultDetailStatus","updateWorkResultDetailStartTime","startWorkTimer","startProductionSimulation","confirmCompleteWork","endTime","passQty","defectQty","updateWorkResultDetailEndTime","processInnerToOuterWorkflow","startDirectTransitionToOuter","startAutoTransitionToLineSelection","closeCompleteModal","queryParams","duration","interval","increment","progressTimer","refreshWorkOrders","currentSelectedWork","resolve","workflowError","totalProduced","totalTargetQty","autoCompleteProduction","resumeProduction","stopWork","resetLineStatus","onInputQuantityChange","remainingSeconds","completeProduction","handleWorkButton","message","hideError","retryConnection","status","elapsed","hours","minutes","seconds","type","log","goBackToLineSelection","getWorkflowStepText","getWorkStatusText","getWorkButtonText","getCompleteModalTitle","getConfirmationText","getCompleteButtonText","getTransitionTitle","getTransitionMessage","getAchievementRateClass","rate","number","formatTime","time","formatDateTime","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","_normalizeClass","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","$event","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_normalizeStyle","_hoisted_69","_hoisted_70","_Fragment","_renderList","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","_hoisted_103","_hoisted_104","_hoisted_105","_hoisted_106","_hoisted_107","_hoisted_108","_hoisted_109","_hoisted_110","_hoisted_111","_hoisted_112","_hoisted_113","_hoisted_114","_hoisted_115","_hoisted_116","_hoisted_117","_hoisted_118","_hoisted_119","_hoisted_120","_hoisted_121","_hoisted_122","_hoisted_123","_hoisted_124","_hoisted_125","_hoisted_126","_hoisted_127","_hoisted_128","_hoisted_129","_hoisted_130","_hoisted_131","_hoisted_132","_hoisted_133","_hoisted_134","_hoisted_135","_hoisted_136","_hoisted_137","_hoisted_138","_hoisted_139","_hoisted_140","_hoisted_141","_hoisted_142","_hoisted_143","_hoisted_144","_hoisted_145","_hoisted_146","_hoisted_147","_hoisted_148","_hoisted_149","_hoisted_150","_hoisted_151","_hoisted_152","_hoisted_153"],"mappings":"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"}