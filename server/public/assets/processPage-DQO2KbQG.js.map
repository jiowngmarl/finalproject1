{"version":3,"file":"processPage-DQO2KbQG.js","sources":["../../../client/src/pages/modals/MaterialAddPopup.vue","../../../client/src/pages/modals/PopupDetail.vue","../../../client/src/pages/process/processPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"popup-overlay\" v-if=\"visible\">\r\n    <div class=\"popup-content\">\r\n      <div class=\"popup-header\">\r\n        <h3>자재 선택</h3>\r\n        <input v-model=\"searchText\" placeholder=\"자재코드 또는 자재명 검색\" class=\"search-input\" />\r\n      </div>\r\n\r\n      <table class=\"material-table\">\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>자재코드</th>\r\n            <th>자재명</th>\r\n            <th>분류</th>\r\n            <th>단위</th>\r\n            <th>규격</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"item in filtered\" :key=\"item.material_code\">\r\n            <td><input type=\"checkbox\" v-model=\"selectedCodes\" :value=\"item.material_code\" /></td>\r\n            <td>{{ item.material_code }}</td>\r\n            <td>{{ item.material_name }}</td>\r\n            <td>{{ item.material_cls }}</td>\r\n            <td>{{ item.material_unit }}</td>\r\n            <td>{{ item.material_stand }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div class=\"popup-footer\">\r\n        <button class=\"btn save\" @click=\"addSelected\">추가</button>\r\n        <button class=\"btn\" @click=\"$emit('update:visible', false)\">닫기</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, defineProps, defineEmits } from 'vue'\r\nimport type { MaterialOption } from '@/types'\r\n\r\nconst props = defineProps<{\r\n  visible: boolean\r\n  materials: MaterialOption[]\r\n}>()\r\n\r\nconst emit = defineEmits(['update:visible', 'add'])\r\n\r\nconst searchText = ref('')\r\nconst selectedCodes = ref<string[]>([])\r\n\r\nconst filtered = computed(() => {\r\n  const keyword = searchText.value.trim().toLowerCase()\r\n  if (!keyword) return props.materials\r\n  return props.materials.filter(\r\n    m =>\r\n      m.material_code.toLowerCase().includes(keyword) ||\r\n      m.material_name.toLowerCase().includes(keyword)\r\n  )\r\n})\r\n\r\nfunction addSelected() {\r\n  const selected = props.materials.filter(m => selectedCodes.value.includes(m.material_code))\r\n  emit('add', selected)\r\n  emit('update:visible', false)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.popup-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n.popup-content {\r\n  background: white;\r\n  padding: 24px;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 900px;\r\n  max-height: 85vh;\r\n  overflow: auto;\r\n}\r\n.popup-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n.search-input {\r\n  width: 300px;\r\n  padding: 6px;\r\n  font-size: 14px;\r\n}\r\n.material-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n.material-table th,\r\n.material-table td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: center;\r\n}\r\n.popup-footer {\r\n  text-align: right;\r\n  margin-top: 10px;\r\n}\r\n.btn {\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n}\r\n.btn.save {\r\n  background-color: #2f80ed;\r\n  color: white;\r\n}\r\n</style>","<template>\r\n  <div class=\"popup-overlay\" v-if=\"visible\">\r\n    <div class=\"popup-content wide\">\r\n      <div class=\"popup-header\">\r\n        <div>\r\n          <button class=\"btn add\" @click=\"materialSearchVisible = true\">재료추가</button>\r\n          <button class=\"btn delete\" @click=\"$emit('deleteSelectedMaterials')\">재료삭제</button>\r\n        </div>\r\n      </div>\r\n\r\n      <table class=\"material-table\">\r\n        <thead>\r\n          <tr>\r\n            <th><input type=\"checkbox\" disabled/></th>\r\n            <th>자재코드</th>\r\n            <th>자재명</th>\r\n            <th>단위</th>\r\n            <th>투입량</th>\r\n            <th>담당자</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(row, index) in materialList\" :key=\"index\">\r\n            <td><input type=\"checkbox\" v-model=\"row.selected\" /></td>\r\n            <td>\r\n              <select v-model=\"row.material_code\" @change=\"$emit('materialCodeChange', row)\">\r\n                <option disabled value=\"\">자재 선택</option>\r\n                <option v-for=\"item in materialOptions\" :key=\"item.material_code\" :value=\"item.material_code\">\r\n                  {{ item.material_code }}\r\n                </option>\r\n              </select>\r\n            </td>\r\n            <td>{{ row.material_name }}</td>\r\n            <td>{{ row.material_unit }}</td>\r\n            <td>{{ row.usage_qty }}</td>\r\n            <td><input type=\"text\" v-model=\"row.responsible\" /></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div class=\"popup-footer\">\r\n        <button class=\"btn save\" @click=\"$emit('save')\">저장</button>\r\n        <button class=\"btn\" @click=\"$emit('update:visible', false)\">취소</button>\r\n      </div>\r\n\r\n      <MaterialAddPopup\r\n        v-if=\"materialSearchVisible\"\r\n        :visible=\"materialSearchVisible\"\r\n        :materials=\"materialOptions\"\r\n        @update:visible=\"materialSearchVisible = $event\"\r\n        @add=\"handleMaterialAdd\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, defineEmits, ref } from 'vue'\r\nimport MaterialAddPopup from '../modals/MaterialAddPopup.vue'\r\nimport type { MaterialRow, MaterialOption } from '@/types'\r\n\r\nconst props = defineProps<{\r\n  visible: boolean\r\n  processCode: string\r\n  productCode: string\r\n  materialOptions: MaterialOption[]\r\n  materialList: MaterialRow[]\r\n  bomCode: string\r\n}>()\r\n\r\nconst emit = defineEmits([\r\n  'update:visible', 'save', 'materialCodeChange', 'addMaterial', 'deleteSelectedMaterials'\r\n])\r\n\r\nconst materialSearchVisible = ref(false)\r\n\r\nfunction handleMaterialAdd(selected: MaterialOption[]) {\r\n  for (const item of selected) {\r\n    props.materialList.push({\r\n      process_code: props.processCode,\r\n      material_code: item.material_code,\r\n      material_name: item.material_name,\r\n      material_unit: item.material_unit,\r\n      BOM_code: props.bomCode,\r\n      usage_qty: item.usage_qty ?? 0,\r\n      responsible: '',\r\n      selected: false\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.popup-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.popup-content {\r\n  background: white;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\r\n  min-width: 300px;\r\n}\r\n\r\n.popup-content.wide {\r\n  min-width: 60%;\r\n  max-width: 800px;\r\n}\r\n\r\n.popup-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.material-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.material-table th,\r\n.material-table td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.popup-footer {\r\n  text-align: center;\r\n}\r\n\r\n.btn {\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn.save {\r\n  background-color: #2f80ed;\r\n  color: white;\r\n}\r\n\r\n.btn.delete {\r\n  background-color: #eb5757;\r\n  color: white;\r\n}\r\n\r\n.btn.add {\r\n  background-color: #2f80ed;\r\n  color: white;\r\n}\r\n</style>","<template>\r\n  <div class=\"process-page\">\r\n    <h2 class=\"title\">공정 흐름도 관리</h2>\r\n\r\n    <!-- 제품 검색 -->\r\n    <div class=\"product-search va-row va-gap-2 va-items-center\">\r\n      <label>제품코드: </label>\r\n      <input v-model=\"search.product_code\" placeholder=\"제품코드 입력\" />\r\n\r\n      <label>제품명: </label>\r\n      <input v-model=\"search.product_name\" placeholder=\"제품명 입력\" />\r\n\r\n      <label>규격:</label>\r\n      <input v-model=\"search.product_stand\" placeholder=\"규격 입력\" />\r\n\r\n      <button class=\"btn search\" @click=\"handleProductSearch\">검색</button>\r\n      <button class=\"btn reset\" @click=\"resetSearch\">초기화</button>\r\n      <button class=\"btn save\" @click=\"saveProcesses\">저장</button>\r\n    </div>\r\n\r\n    <div class=\"times\">\r\n      <span class=\"product-label\">총 소요시간: {{ totalProcessTime }}분</span>\r\n    </div>\r\n\r\n    <!-- 공정 목록 -->\r\n    <div class=\"process-table\">\r\n      <div class=\"table-header\">\r\n        <h3>공정순서</h3>\r\n        <div>\r\n          <button class=\"btn add\" @click=\"addProcess\">공정추가</button>\r\n          <button class=\"btn delete\" @click=\"deleteSelectedProcesses\">공정삭제</button>\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th><input type=\"checkbox\" disabled /></th>\r\n            <th>순번</th>\r\n            <th>예상소요시간</th>\r\n            <th>시험작업</th>\r\n            <th>설비유형</th>\r\n            <th>상세추가</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(process, index) in processes\" :key=\"index\">\r\n            <td><input type=\"checkbox\" v-model=\"process.selected\" /></td>\r\n            <td>{{ index + 1 }}</td>\r\n            <td><input class=\"time-input\" v-model=\"process.process_time\" placeholder=\"예: 60분\" /></td>\r\n            <td>\r\n              <select class=\"name-input\" v-model=\"process.process_int\">\r\n                <option disabled value=\"\">공정 명</option>\r\n                <option \r\n                  v-for=\"item in processIntList\" \r\n                  :key=\"item.process_int\" \r\n                  :value=\"item.process_int\"\r\n                >\r\n                  {{ item.process_name }}\r\n                </option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select v-if=\"equipmentCodes.length\" class=\"equipment-select\" v-model=\"process.code_value\">\r\n                <option disabled value=\"\">선택</option>\r\n                <option v-for=\"item in equipmentCodes\" :key=\"item.value\" :value=\"item.value\">\r\n                  {{ item.label }}\r\n                </option>\r\n              </select>\r\n              <span v-else style=\"color: red;\">🚫 설비 코드 없음</span>\r\n            </td>\r\n            <td>\r\n              <button class=\"btn save\" @click=\"handlePopupOpen(process.process_code, index)\">\r\n                상세추가\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- 팝업 컴포넌트 -->\r\n    <PopupDetail\r\n      v-if=\"popupVisible\"\r\n      :visible=\"popupVisible\"\r\n      :processCode=\"popupProcessCode\"\r\n      :productCode=\"popupProductCode\"\r\n      :materialOptions=\"materialOptions\"\r\n      :materialList=\"materialList\"\r\n      :bomCode=\"bomCode\"\r\n      @update:visible=\"popupVisible = $event\"\r\n      @save=\"saveMaterial\"\r\n      @materialCodeChange=\"onMaterialCodeChange\"\r\n      @addMaterial=\"addMaterial\"\r\n      @deleteSelectedMaterials=\"deleteSelectedMaterials\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport PopupDetail from '../modals/PopupDetail.vue'\r\nimport axios from 'axios'\r\nimport { onMounted ,computed, ref, watch } from 'vue'\r\n\r\ninterface Product {\r\n  product_code: string\r\n  product_name: string\r\n  product_stand: string\r\n}\r\n\r\ninterface Process {\r\n  process_code: string\r\n  process_time: string\r\n  process_name: string\r\n  code_value: string\r\n  process_int: string\r\n  selected?: boolean\r\n}\r\n\r\ninterface ProcessPayload {\r\n  process_code: string\r\n  process_name: string\r\n  process_time: string\r\n  process_seq: number\r\n  product_code: string\r\n  code_value: string\r\n  process_group_code: string\r\n  process_int: string\r\n}\r\n\r\ninterface EquipmentCode {\r\n  value: string\r\n  label: string\r\n}\r\n\r\ninterface MaterialRow {\r\n  process_code: string\r\n  material_code: string\r\n  material_name: string\r\n  material_unit: string\r\n  BOM_code: string\r\n  usage_qty: number\r\n  responsible: string\r\n  selected?: boolean\r\n}\r\n\r\ninterface MaterialOption {\r\n  material_code: string\r\n  material_name: string\r\n  material_unit: string\r\n  usage_qty: number\r\n}\r\n\r\ninterface ProcessGroupPayload {\r\n  process_group_code: string\r\n  product_code: string\r\n}\r\n\r\nconst selectedProductCode = ref<string>('')\r\nconst products = ref<Product[]>([])\r\nconst processes = ref<Process[]>([])\r\nconst equipmentCodes = ref<EquipmentCode[]>([])\r\nconst popupVisible = ref(false)\r\nconst popupProcessCode = ref('')\r\nconst materialList = ref<MaterialRow[]>([])\r\nconst materialOptions = ref<MaterialOption[]>([])\r\nconst popupProductCode = ref<string>('')\r\nconst bomCode = ref('')\r\n\r\nconst search = ref({\r\n  product_code: '',\r\n  product_name: '',\r\n  product_stand: ''\r\n})\r\n\r\nconst handleProductSearch = () => {\r\n  let found: Product | null = null\r\n\r\n  // 우선 제품코드로 찾기\r\n  if (search.value.product_code) {\r\n    found = products.value.find(p => p.product_code === search.value.product_code) ?? null\r\n  }\r\n\r\n  // 아니면 제품명 + 규격으로 찾기\r\n  if (!found && search.value.product_name && search.value.product_stand) {\r\n    found = products.value.find(p =>\r\n      p.product_name === search.value.product_name &&\r\n      p.product_stand === search.value.product_stand\r\n    ) ?? null\r\n  }\r\n\r\n  if (!found) {\r\n    alert('해당 제품을 찾을 수 없습니다.')\r\n    return\r\n  }\r\n\r\n  // ✅ 작성 중 공정이 있고, 선택된 제품과 다른 경우 확인 알림\r\n  const isEditing = processes.value.length > 0\r\n  const isDifferentProduct = selectedProductCode.value && selectedProductCode.value !== found.product_code\r\n\r\n  if (isEditing && isDifferentProduct) {\r\n    const confirmed = confirm('현재 공정 정보를 작성 중입니다.\\n제품을 변경하시겠습니까?')\r\n    if (!confirmed) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ✅ 제품 변경 실행\r\n  selectedProductCode.value = found.product_code\r\n}\r\n\r\nconst resetSearch = () => {\r\n  search.value = {\r\n    product_code: '',\r\n    product_name: '',\r\n    product_stand: ''\r\n  }\r\n  selectedProductCode.value = ''\r\n  processes.value = []\r\n}\r\n\r\nconst processIntList = ref<{ process_int: string; process_name: string }[]>([])\r\n\r\nconst fetchProcessInt = async () => {\r\n  try {\r\n    const res = await axios.get('/processInit')  // 공정명 리스트 API\r\n    processIntList.value = res.data  // 👈 객체 배열 유지\r\n  } catch (err) {\r\n    console.error('❌ 공정 기본 목록 불러오기 실패:', err)\r\n  }\r\n}\r\n\r\nconst fetchProducts = async () => {\r\n  try {\r\n    const res = await axios.get('/product')\r\n    products.value = res.data\r\n  } catch (err) {\r\n    console.log('❌ 제품 목록 조회 실패:', err)\r\n  }\r\n}\r\n\r\nconst fetchEquipmentCodes = async () => {\r\n  try{\r\n    const res = await axios.get('/common-codes/?groups=0T')\r\n    equipmentCodes.value = res.data['0T'] || []\r\n  } catch(err) {\r\n    console.error('❌ 설비유형 불러오기 실패:', err)\r\n  }\r\n}\r\n\r\nconst fetchMaterials = async () => {\r\n  try {\r\n    const res = await axios.get(`/bom/processList/${popupProductCode.value}`)\r\n    \r\n    materialOptions.value = res.data\r\n    bomCode.value = res.data[0].bom_code\r\n    console.log(\"자재:\",res.data);\r\n  } catch (err) {\r\n    console.log('❌ 자재 목록 조회 실패:', err)\r\n  }\r\n}\r\n\r\nconst fetchProcess = async () => {\r\n  try {\r\n    const res = await axios.get(`/process/${selectedProductCode.value}`)\r\n    const fetched = res.data\r\n\r\n    // process_int 역추적\r\n    processes.value = fetched.map((item: any) => {\r\n      const match = processIntList.value.find(pi => pi.process_name === item.process_name)\r\n      return {\r\n        process_code: item.process_code,\r\n        process_time: item.process_time,\r\n        process_name: item.process_name,\r\n        code_value: item.code_value,\r\n        process_int: match?.process_int || '',  // 없으면 빈값 처리\r\n        selected: false\r\n      }\r\n    })\r\n  } catch (err) {\r\n    console.log('❌ 공정정보 조회 실패:', err)\r\n  }\r\n}\r\n\r\nconst fetchProcessDetail = async () => {\r\n  try {\r\n    const res = await axios.get(`/processDetail/${popupProcessCode.value}`)\r\n    const fetchedDetails = res.data\r\n\r\n    // material_code 기준으로 name, unit 채워 넣기\r\n    materialList.value = fetchedDetails.map((item: any) => {\r\n      const matched = materialOptions.value.find(opt => opt.material_code === item.material_code)\r\n\r\n      return {\r\n        process_code: item.process_code || popupProcessCode.value,\r\n        material_code: item.material_code,\r\n        BOM_code: item.BOM_code || '', // 필요 시\r\n        usage_qty: item.usage_qty,\r\n        responsible: item.name,\r\n        material_name: matched?.material_name || '',\r\n        material_unit: matched?.material_unit || '',\r\n        selected: false\r\n      }\r\n    })\r\n  } catch (err) {\r\n    console.log('❌ 상세정보 조회 실패:', err)\r\n  }\r\n}\r\n\r\nwatch(popupProcessCode, (newCode) => {\r\n  if (newCode) {\r\n    fetchProcessDetail()\r\n  }\r\n})\r\n\r\nwatch(selectedProductCode, (newCode) => {\r\n  if (newCode) {\r\n    fetchProcess()\r\n  }\r\n})\r\n\r\nconst onMaterialCodeChange = (row: MaterialRow) => {\r\n  const selected = materialOptions.value.find(m => m.material_code === row.material_code)\r\n  if (selected) {\r\n    row.material_name = selected.material_name\r\n    row.material_unit = selected.material_unit\r\n    row.usage_qty = selected.usage_qty\r\n  }\r\n}\r\n\r\nconst totalProcessTime = computed(() => {\r\n  return processes.value.reduce((sum, p) => {\r\n    const time = parseInt(p.process_time.replace(/[^\\d]/g, ''))\r\n    return sum + (isNaN(time) ? 0 : time)\r\n  }, 0)\r\n})\r\n\r\nconst addProcess = () => {\r\n  processes.value.push({\r\n    process_code:'',\r\n    process_time: '',\r\n    process_name: '',\r\n    code_value: '',\r\n    process_int: '', \r\n    selected: false\r\n  })\r\n}\r\n\r\nconst deleteSelectedProcesses = async () => {\r\n  for (const p of processes.value) {\r\n    if (p.selected && p.process_code) {\r\n      try {\r\n        await axios.delete(`/process/${p.process_code}`)\r\n        console.log(`🗑️ 서버에서 공정 삭제 완료: ${p.process_code}`)\r\n      } catch (err) {\r\n        console.error(`❌ 공정 삭제 실패: ${p.process_code}`, err)\r\n        alert(`공정 ${p.process_code} 삭제 실패!`)\r\n      }\r\n    }\r\n  }\r\n  // ✅ 선택된 항목은 모두 제거 (등록 전/후 상관없이)\r\n  processes.value = processes.value.filter(p => !p.selected)\r\n}\r\n\r\nconst addMaterial = () => {\r\n  materialList.value.push({\r\n    process_code: '',\r\n    material_code: '',\r\n    material_name: '',\r\n    material_unit: '',\r\n    BOM_code: '',\r\n    usage_qty: 0,\r\n    responsible: '',\r\n    selected: false\r\n  })\r\n}\r\n\r\nconst deleteSelectedMaterials = async () => {\r\n  for (const row of materialList.value) {\r\n    console.log(\"✅ 삭제 후보:\", row) // 이 로그로 값 제대로 들어오는지 확인\r\n    if (row.selected && row.process_code && row.material_code) {\r\n      try {\r\n        await axios.delete(`/processDetail/${row.process_code}/${row.material_code}`)\r\n      } catch (err) {\r\n      }\r\n    }\r\n  }\r\n  materialList.value = materialList.value.filter(row => !row.selected)\r\n}\r\n\r\nconst saveMaterial = async (): Promise<void> => {\r\n  // 현재 공정에 해당하는 모든 자재 먼저 삭제\r\n  try {\r\n    await axios.delete(`/processDetail/${popupProcessCode.value}`)\r\n    console.log(`✅ ${popupProcessCode.value} 에 해당하는 기존 자재 삭제 완료`)\r\n  } catch (err) {\r\n    console.error('❌ 기존 자재 삭제 실패:', err)\r\n    alert('기존 자재 삭제 중 오류 발생!')\r\n    return\r\n  }\r\n\r\n  // 새로운 자재 저장 (삭제 후 insert)\r\n  const payload = materialList.value.map(p => ({\r\n    process_code: popupProcessCode.value,\r\n    material_code: p.material_code,\r\n    BOM_code: bomCode.value,\r\n    name: p.responsible,\r\n  }))\r\n\r\n  console.log('📦 저장할 재료 데이터:', payload)\r\n\r\n  try {\r\n    const res = await axios.post(`/process/${popupProcessCode.value}`, payload)\r\n    if (res.data.isSuccessed === true) {\r\n      alert('모든 재료 등록 완료!')\r\n      await fetchProcessDetail()\r\n    } else {\r\n      alert('등록 실패!')\r\n    }\r\n  } catch (err) {\r\n    console.error('❌ 자재 등록 실패:', err)\r\n    alert('서버 오류 발생!')\r\n  }\r\n}\r\n\r\nconst saveProcesses = async (): Promise<void> => {\r\n  const insertList: ProcessPayload[] = [];\r\n  const updateList: ProcessPayload[] = [];\r\n\r\n  const group_code = `${selectedProductCode.value}-Process`;\r\n  const groupItem: ProcessGroupPayload = {\r\n    process_group_code: group_code,\r\n    product_code: selectedProductCode.value\r\n  };\r\n\r\n  processes.value.forEach((p, idx) => {\r\n    const code = `${selectedProductCode.value}Process${idx + 1}`;\r\n\r\n    // 🧠 process_int로부터 process_name 동기화\r\n    const matched = processIntList.value.find(item => item.process_int === p.process_int);\r\n    const name = matched?.process_name || '';\r\n\r\n    const payload: ProcessPayload = {\r\n      process_code: code,\r\n      process_name: name,\r\n      process_time: p.process_time,\r\n      process_seq: idx + 1,\r\n      code_value: p.code_value,\r\n      product_code: selectedProductCode.value,\r\n      process_group_code: group_code,\r\n      process_int: p.process_int\r\n    };\r\n\r\n    if (!p.process_code) {\r\n      insertList.push(payload);\r\n    } else {\r\n      updateList.push(payload);\r\n    }\r\n  });\r\n\r\n  try {\r\n    const groupCheckRes = await axios.get(`/processG/${group_code}`);\r\n    const groupExists = Array.isArray(groupCheckRes.data) && groupCheckRes.data.length > 0;\r\n\r\n    if (insertList.length > 0) {\r\n      if (!groupExists) {\r\n        const groupRes = await axios.post('/processG', groupItem);\r\n        if (!groupRes.data.isSuccessed) throw new Error('공정 그룹 등록 실패');\r\n      }\r\n\r\n      const processRes = await axios.post('/process', insertList);\r\n      if (!processRes.data.isSuccessed) throw new Error('공정 등록 실패');\r\n    }\r\n\r\n    for (const payload of updateList) {\r\n      try {\r\n        const res = await axios.put(`/process/${payload.process_code}`, [payload]);\r\n        if (!res.data.isSuccessed) {\r\n          console.warn(`⚠️ 수정 실패: ${payload.process_code}`);\r\n        }\r\n      } catch (err) {\r\n        console.error(`❌ 수정 중 오류: ${payload.process_code}`, err);\r\n        alert(`공정 수정 중 오류 발생: ${payload.process_code}`);\r\n      }\r\n    }\r\n\r\n    alert('공정 저장 완료!');\r\n    await fetchProcess();\r\n  } catch (err) {\r\n    console.error('❌ 저장 실패:', err);\r\n    alert('저장 중 오류 발생!');\r\n  }\r\n};\r\n\r\n\r\nconst openPopup = (processCode: string,  productCode: string): void => {\r\n  popupProcessCode.value = processCode\r\n  popupProductCode.value = productCode\r\n  popupVisible.value = true\r\n  fetchMaterials()\r\n}\r\n\r\nconst handlePopupOpen = (processCode: string, index: number): void => {\r\n  if (!processCode) {\r\n    alert('공정을 먼저 저장해야 상세정보를 추가할 수 있습니다.')\r\n    return\r\n  }\r\n\r\n  const fullCode = `${selectedProductCode.value}Process${index + 1}`\r\n  openPopup(fullCode, selectedProductCode.value)\r\n}\r\n\r\nonMounted(() => {\r\n  fetchProducts()\r\n  fetchEquipmentCodes()\r\n  fetchMaterials()\r\n  fetchProcess()\r\n  fetchProcessInt()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.process-page {\r\n  padding: 30px;\r\n  font-family: 'Pretendard', sans-serif;\r\n  background: #fff;\r\n}\r\n\r\n.times {\r\n  text-align: center;\r\n}\r\n\r\nh3 {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\nh2.title {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-select {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-label {\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n\r\n.btn {\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn.save {\r\n  background-color: #2f80ed;\r\n  color: white;\r\n}\r\n\r\n.btn.let {\r\n  background-color: #535658;\r\n  color: white;\r\n}\r\n\r\n.btn.delete {\r\n  background-color: #eb5757;\r\n  color: white;\r\n}\r\n\r\n.btn.add {\r\n  background-color: #2f80ed;\r\n  color: white;\r\n  font-weight: 500;\r\n}\r\n\r\n.process-table .table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.process-table table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.process-table th, .process-table td {\r\n  border: 1px solid #e0e0e0;\r\n  padding: 10px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.time-input, .name-input, .equipment-select {\r\n  width: 100%;\r\n  padding: 6px;\r\n  font-size: 14px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.btn.search {\r\n  background-color: #27ae60;\r\n  color: white;\r\n}\r\n\r\n.btn.reset {\r\n  background-color: #7f8c8d;\r\n  color: white;\r\n}\r\n</style>"],"names":["props","__props","emit","__emit","searchText","ref","selectedCodes","filtered","computed","keyword","m","addSelected","selected","visible","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","$event","_hoisted_4","_Fragment","_renderList","item","_toDisplayString","_hoisted_6","$emit","materialSearchVisible","handleMaterialAdd","materialList","row","index","_vModelCheckbox","materialOptions","_hoisted_7","_vModelSelect","_vModelText","_hoisted_9","_createBlock","MaterialAddPopup","selectedProductCode","products","processes","equipmentCodes","popupVisible","popupProcessCode","popupProductCode","bomCode","search","handleProductSearch","found","p","isEditing","isDifferentProduct","resetSearch","processIntList","fetchProcessInt","res","axios","err","fetchProducts","fetchEquipmentCodes","fetchMaterials","fetchProcess","fetched","match","pi","fetchProcessDetail","fetchedDetails","matched","opt","watch","newCode","onMaterialCodeChange","totalProcessTime","sum","time","addProcess","deleteSelectedProcesses","addMaterial","deleteSelectedMaterials","saveMaterial","payload","saveProcesses","insertList","updateList","group_code","groupItem","idx","code","name","groupCheckRes","groupExists","openPopup","processCode","productCode","handlePopupOpen","fullCode","onMounted","_hoisted_5","process","_hoisted_11","_hoisted_12","_hoisted_13","PopupDetail"],"mappings":"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"}