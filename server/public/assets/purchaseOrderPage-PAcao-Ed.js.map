{"version":3,"file":"purchaseOrderPage-PAcao-Ed.js","sources":["../../../client/src/pages/material/purchaseOrderPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"mrp-page\">\r\n\r\n    <!-- 생산계획 테이블 -->\r\n    <div class=\"table-section\">\r\n      <h3 class=\"table-title\">발주 요청 자재</h3>\r\n      <va-data-table\r\n        :items=\"orderList\"\r\n        :columns=\"orderColumns\"\r\n        :per-page=\"5\"\r\n        :current-page.sync=\"page\"\r\n        track-by=\"purchase_order_id\"\r\n      >\r\n        <template #cell(action)=\"{ row }\">\r\n          <va-button size=\"small\" @click=\"onSelectMt(row.source)\">선택</va-button>\r\n        </template>\r\n      </va-data-table>\r\n\r\n      <!-- 페이지네이션 UI 추가 -->\r\n      <va-pagination\r\n        v-model=\"page\"\r\n        :pages=\"Math.ceil(orderList.length / 5)\"\r\n        class=\"mt-2\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 부족 자재 리스트 -->\r\n    <div class=\"table-section\">\r\n      <h3 class=\"table-title\">발주 등록</h3>\r\n      <va-data-table\r\n        :items=\"shortageList\"\r\n        :columns=\"shortageColumns\"\r\n        track-by=\"purchase_order_id\"\r\n      >\r\n      <template #cell(select)=\"{ row }\">\r\n        <va-checkbox\r\n          :model-value=\"selectedRows.includes(row.source.purchase_order_id)\"\r\n          @update:modelValue=\"(checked) => {\r\n            const id = row.source.purchase_order_id\r\n            if (checked) {\r\n              selectedRows.push(id)\r\n            } else {\r\n              selectedRows.splice(selectedRows.indexOf(id), 1)\r\n            }\r\n          }\"\r\n        />\r\n      </template>\r\n            <!-- 날짜 포맷 -->\r\n        <template #cell(purchase_order_date)=\"{ row }\">\r\n          {{ formatDateForView(row.source.purchase_order_date) }}\r\n        </template>\r\n\r\n        <!-- 납기일: 캘린더 선택 -->\r\n        <template #cell(due_date)=\"{ rowIndex }\">\r\n          <va-date-input\r\n            v-model=\"shortageList[rowIndex].due_date\"\r\n            placeholder=\"납기일\"\r\n            :clearable=\"false\"\r\n            style=\"width: 130px; min-width: 0;\"\r\n          />\r\n        </template>\r\n\r\n        <template #cell(account_id)=\"{ rowIndex }\">\r\n          <va-input\r\n            v-model=\"shortageList[rowIndex].account_id\"\r\n            placeholder=\"거래처 코드\"\r\n            size=\"small\"\r\n            class=\"input-compact\"\r\n            @input=\"onAccountIdInput(rowIndex)\"\r\n          />\r\n        </template>\r\n\r\n        <!-- 거래처 명 -->\r\n        <template #cell(account_name)=\"{ rowIndex }\">\r\n          <va-input\r\n            v-model=\"shortageList[rowIndex].account_name\"\r\n            placeholder=\"거래처명\"\r\n            size=\"small\"\r\n            class=\"input-compact\"\r\n            @input=\"onAccountNameInput(rowIndex)\"\r\n          />\r\n        </template>\r\n\r\n        <!-- 담당자: input -->\r\n        <template #cell(name)=\"{ rowIndex }\">\r\n          <va-input\r\n            v-model=\"shortageList[rowIndex].name\"\r\n            placeholder=\"담당자\"\r\n            size=\"small\"\r\n            class=\"input-compact\"\r\n          />\r\n        </template>\r\n      </va-data-table class=\"input-compact\">\r\n      <div class=\"button-wrap\">\r\n        <va-button @click=\"onRegisterOrder\">등록</va-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport axios from 'axios'\r\nimport { ref, onMounted } from 'vue'\r\n\r\ninterface PurchaseOrder {\r\n  purchase_order_id: string\r\n  material_code: string\r\n  material_name: string\r\n  material_unit: string\r\n  material_cls: string\r\n  purchase_order_quantity: string\r\n}\r\n\r\ninterface Shortage {\r\n  purchase_order_id: string\r\n  purchase_order_name: string\r\n  material_code: string\r\n  material_name: string\r\n  purchase_order_quantity: number\r\n  purchase_order_date: string\r\n  material_unit: string\r\n  due_date: string | Date | null;\r\n  account_id: string\r\n  account_name: string\r\n  name: string\r\n}\r\n\r\ninterface Account {\r\n  account_id: string\r\n  account_name: string\r\n}\r\n\r\nconst accountList = ref<Account[]>([])\r\nconst orderList = ref<PurchaseOrder[]>([])\r\nconst shortageList = ref<Shortage[]>([])\r\nconst selectedPlan = ref<PurchaseOrder | null>(null)\r\nconst page = ref(1)\r\nconst selectedRows = ref<string[]>([])\r\n\r\nconst orderColumns = [\r\n  { key: 'material_code', label: '자재코드' },\r\n  { key: 'material_name', label: '자재명' },\r\n  { key: 'material_safty', label: '안전재고' },\r\n  { key: 'material_unit', label: '단위' },\r\n  { key: 'material_cls', label: '분류' },\r\n  { key: 'purchase_order_quantity', label: '발주수량' },\r\n  { key: 'action', label: '선택' }\r\n]\r\n\r\nconst shortageColumns = [\r\n  { key: 'select', label: '선택' },\r\n  { key: 'purchase_order_name', label: '발주명' },\r\n  { key: 'material_code', label: '자재코드' },\r\n  { key: 'material_name', label: '자재명' },\r\n  { key: 'purchase_order_quantity', label: '요청수량' },\r\n  { key: 'purchase_order_date', label: '발주 요청일' },\r\n  { key: 'material_unit', label: '단위' },\r\n  { key: 'due_date', label: '납기일' },\r\n  { key: 'account_id', label: '거래처코드' },\r\n  { key: 'account_name', label: '거래처 명' },\r\n  { key: 'name', label: '담당자' },\r\n]\r\n\r\nconst formatDateForView = (date: Date | string | null | undefined): string => {\r\n  if (!date) return ''\r\n  const d = typeof date === 'string' ? new Date(date) : date\r\n  return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`\r\n}\r\n\r\nconst fetchPlans = async () => {\r\n  try {\r\n    const res = await axios.get('/purchase')\r\n    orderList.value = Array.isArray(res.data) ? res.data : []\r\n  } catch (err) {\r\n    console.error('계획 조회 실패', err)\r\n    orderList.value = [] // 실패 시에도 빈 배열로 초기화\r\n  }\r\n}\r\n\r\nconst fetchOrder = async () => {\r\n  try {\r\n    const res = await axios.get('/purchaseIn')\r\n    shortageList.value = Array.isArray(res.data) ? res.data : []\r\n  } catch (err) {\r\n    console.error('계획 조회 실패', err)\r\n    orderList.value = [] // 실패 시에도 빈 배열로 초기화\r\n  }\r\n}\r\n\r\nconst fetchAccounts = async () => {\r\n  try {\r\n    const res = await axios.get('/account') // 예: 거래처 API\r\n    accountList.value = res.data\r\n  } catch (err) {\r\n    console.error('거래처 목록 불러오기 실패', err)\r\n  }\r\n}\r\n\r\nconst onSelectMt = async (order: PurchaseOrder) => {\r\n  try {\r\n    selectedPlan.value = order\r\n    await axios.put(`/purchase/${order.purchase_order_id}`)\r\n    await fetchPlans()\r\n    await fetchOrder()\r\n  } catch (err) {\r\n    console.error('MRP 계산 실패', err)\r\n  }\r\n}\r\n\r\nconst onRegisterOrder = async () => {\r\n  if (selectedRows.value.length === 0) {\r\n    alert('선택된 항목이 없습니다.')\r\n    return\r\n  }\r\n\r\n  const selectedItems = shortageList.value.filter(item =>\r\n    selectedRows.value.includes(item.purchase_order_id)\r\n  )\r\n\r\n  // 예: 서버 전송용 변환\r\n  const payload = selectedItems.map(item => ({\r\n    purchase_order_id: item.purchase_order_id,\r\n    due_date: formatDateForView(item.due_date),\r\n    account_id: item.account_id,\r\n    name: item.name,\r\n  }))\r\n\r\n  try {\r\n    for (const item of payload) {\r\n      const res = await axios.put(`/puOrder/${item.purchase_order_id}`, item);\r\n      if (!res.data.isSuccessed) {\r\n        console.warn(`❌ 발주 등록 실패: ${item.purchase_order_id}`);\r\n      }\r\n    }\r\n\r\n    alert('발주 등록 완료!');\r\n    selectedRows.value = [];\r\n    fetchOrder();\r\n  } catch (err) {\r\n    console.error('발주 등록 실패:', err);\r\n    alert('서버 오류 발생');\r\n  }\r\n}\r\n\r\nconst onAccountIdInput = (index: number) => {\r\n  const code = String(shortageList.value[index].account_id);\r\n  const matched = accountList.value.find(a => String(a.account_id) === code);\r\n  if (matched) {\r\n    shortageList.value[index].account_name = matched.account_name\r\n  }\r\n}\r\n\r\nconst onAccountNameInput = (index: number) => {\r\n  const name = shortageList.value[index].account_name\r\n  const matched = accountList.value.find(a => a.account_name === name)\r\n  if (matched) {\r\n    shortageList.value[index].account_id = matched.account_id\r\n  }\r\n}\r\n\r\n\r\nonMounted(() => {\r\n  fetchPlans()\r\n  fetchOrder()\r\n  fetchAccounts()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.mrp-page {\r\n  padding: 1.5rem;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.page-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.table-section {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.table-title {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.button-wrap {\r\n  text-align: right;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.input-compact {\r\n  width: 120px;\r\n}\r\n\r\n</style>\r\n"],"names":["accountList","ref","orderList","shortageList","selectedPlan","page","selectedRows","orderColumns","shortageColumns","formatDateForView","date","d","fetchPlans","res","axios","err","fetchOrder","fetchAccounts","onSelectMt","order","onRegisterOrder","payload","item","onAccountIdInput","index","code","matched","a","onAccountNameInput","name","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_createVNode","_component_va_data_table","_withCtx","row","_component_va_button","$event","_component_va_pagination","_hoisted_3","_component_va_checkbox","checked","id","_createTextVNode","_toDisplayString","rowIndex","_component_va_date_input","_component_va_input","_hoisted_4"],"mappings":"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"}