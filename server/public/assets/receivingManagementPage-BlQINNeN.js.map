{"version":3,"file":"receivingManagementPage-BlQINNeN.js","sources":["../../../client/src/pages/material/receivingManagementPage.vue"],"sourcesContent":["<template>\n  <div class=\"receipt-page\">\n    <h2 class=\"page-title\">자재 입고</h2>\n\n    <!-- 발주 리스트 -->\n    <div class=\"table-section\">\n      <h3 class=\"table-title\">발주 리스트</h3>\n      <va-data-table\n        :items=\"orderCheckList\"\n        :columns=\"orderColumns\"\n        :per-page=\"5\"\n        :current-page.sync=\"orderPage\"\n        track-by=\"purchase_order_id\"\n      >\n        <template #cell(purchase_order_date)=\"{ row }\">\n          {{ formatToKST(row.source.purchase_order_date) }}\n        </template>\n\n        <template #cell(receive_qty)=\"{ row }\">\n          <va-input\n            v-model=\"row.source.receive_qty\"\n            type=\"number\"\n            min=\"1\"\n            placeholder=\"수령 수\"\n          />\n        </template>\n\n        <template #cell(select)=\"{ row }\">\n          <va-checkbox\n            :model-value=\"\n              selectedRows.some(\n                (r) => r.purchase_order_id === row.source.purchase_order_id,\n              )\n            \"\n            @update:modelValue=\"\n              (checked) => {\n                if (checked) {\n                  selectedRows.push(row.source);\n                } else {\n                  const index = selectedRows.findIndex(\n                    (r) => r.purchase_order_id === row.source.purchase_order_id,\n                  );\n                  if (index !== -1) selectedRows.splice(index, 1);\n                }\n              }\n            \"\n            :disabled=\"!row.source.receive_qty\"\n          />\n        </template>\n      </va-data-table>\n      <va-button\n        class=\"mt-4\"\n        @click=\"handleReceive\"\n        :disabled=\"selectedRows.length === 0\"\n      >\n        선택 항목 수령\n      </va-button>\n    </div>\n\n    <!-- 자재 입고 등록 -->\n    <div class=\"table-section\">\n      <h3 class=\"table-title\">입고 자재</h3>\n      <va-data-table\n        :items=\"materialOrderList\"\n        :columns=\"receiptColumns\"\n        :per-page=\"5\"\n        :current-page.sync=\"receiptPage\"\n        track-by=\"material_code\"\n      >\n        <template #cell(material_expiration_date)=\"{ row }\">\n          {{ formatToKST(row.source.material_expiration_date) }}\n        </template>\n\n        <template #cell(lot_number)=\"{ row }\">\n          {{ generateLotNumber(row.source.material_code) }}\n        </template>\n\n        <template #cell(action)=\"{ row }\">\n          <va-button size=\"small\" @click=\"saveMaterialLot(row.source)\"\n            >입고</va-button\n          >\n        </template>\n      </va-data-table>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport axios from \"axios\";\nimport { ref, onMounted } from \"vue\";\n\ninterface MaterialReceipt {\n  purchase_order_id: string;\n  material_code: string;\n  material_name: string;\n  purchase_order_quantity: number;\n  received_quantity: number;\n  material_unit: string;\n  mat_qual_test_status: string;\n  lot_number: string;\n  material_expiration_date: string;\n  purchase_order_date: string;\n  account_id: string;\n  account_name: string;\n  receive_qty?: number;\n}\n\nconst formatToKST = (isoDate: string | null | undefined): string => {\n  if (!isoDate) return \"\";\n  const date = new Date(isoDate);\n  if (isNaN(date.getTime())) return \"\";\n  const kst = new Date(date.getTime() + 9 * 60 * 60 * 1000);\n  return `${kst.getFullYear()}-${String(kst.getMonth() + 1).padStart(2, \"0\")}-${String(kst.getDate()).padStart(2, \"0\")} ${String(kst.getHours()).padStart(2, \"0\")}:${String(kst.getMinutes()).padStart(2, \"0\")}`;\n};\n\nconst toDateOnly = (iso: string | null | undefined): string => {\n  if (!iso || typeof iso !== \"string\" || !iso.includes(\"T\")) return \"\";\n  return iso.split(\"T\")[0];\n};\n\nconst generateLotNumber = (materialCode: string): string => {\n  const now = new Date();\n  const yyyyMMdd = `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, \"0\")}${String(now.getDate()).padStart(2, \"0\")}`;\n  const random = Math.floor(100 + Math.random() * 900);\n  return `LOT${materialCode}-${yyyyMMdd} - ${random}`;\n};\n\nconst materialOrderList = ref<MaterialReceipt[]>([]);\nconst orderCheckList = ref<MaterialReceipt[]>([]);\nconst orderPage = ref(1);\nconst receiptPage = ref(1);\nconst selectedRows = ref<MaterialReceipt[]>([]);\n\nconst orderColumns = [\n  { key: \"select\", label: \"선택\" },\n  { key: \"purchase_order_id\", label: \"발주코드\" },\n  { key: \"material_code\", label: \"자재코드\" },\n  { key: \"material_name\", label: \"자재명\" },\n  { key: \"material_unit\", label: \"단위\" },\n  { key: \"purchase_order_quantity\", label: \"발주 수량\" },\n  { key: \"received_quantity\", label: \"받은 수량\" },\n  { key: \"receive_qty\", label: \"수령 수량\" },\n  { key: \"purchase_order_date\", label: \"발주일\" },\n  { key: \"account_id\", label: \"거래처코드\" },\n  { key: \"account_name\", label: \"거래처명\" },\n];\n\nconst receiptColumns = [\n  { key: \"purchase_order_id\", label: \"발주코드\" },\n  { key: \"material_code\", label: \"자재코드\" },\n  { key: \"material_name\", label: \"자재명\" },\n  { key: \"purchase_order_quantity\", label: \"입고 수량\" },\n  { key: \"material_unit\", label: \"단위\" },\n  { key: \"material_expiration_date\", label: \"유통기한\" },\n  { key: \"lot_number\", label: \"LOT번호\" },\n  { key: \"action\", label: \"입고\" },\n];\n\nconst fetchMaterialsOrder = async () => {\n  const res = await axios.get(\"/materialLot\");\n  materialOrderList.value = res.data;\n};\n\nconst fetchOrder = async () => {\n  const res = await axios.get(\"/orderCheck\");\n  orderCheckList.value = res.data;\n};\n\nconst saveMaterialLot = async (item: MaterialReceipt) => {\n  const lotNum = generateLotNumber(item.material_code);\n  const payload = {\n    lot_number: lotNum,\n    material_code: item.material_code,\n    expiry_date: toDateOnly(item.material_expiration_date),\n    quantity: item.purchase_order_quantity,\n    purchase_order_id: item.purchase_order_id,\n  };\n\n  const res = await axios.post(\"/materialLot\", payload);\n  const res2 = await axios.put(`/materialLot/${payload.purchase_order_id}`);\n  if (res.data.isSuccessed && res2.data.isUpdated) {\n    alert(\"LOT 등록 완료!\");\n    await fetchMaterialsOrder();\n  } else {\n    alert(\"등록 실패\");\n  }\n};\n\nconst handleReceive = async () => {\n  for (const item of selectedRows.value) {\n    const id = item.purchase_order_id;\n    const inputQty = Number(item.receive_qty || 0);\n\n    const res1 = await axios.put(`/receiveQty/${id}`, {\n      receive_qty: inputQty,\n    });\n\n    if (!res1.data.isUpdated) {\n      alert(`[${id}] 수령 수량 업데이트 실패`);\n      continue;\n    }\n\n    const res2 = await axios.get(`/orderCheck/${id}`);\n    const order = res2.data[0];\n    console.log(order.received_quantity);\n    console.log(order.purchase_order_quantity);\n    console.log(`${id}`);\n\n    if (order.received_quantity === order.purchase_order_quantity) {\n      const now = new Date();\n      const yyyyMMdd = `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, \"0\")}${String(now.getDate()).padStart(2, \"0\")}`;\n      const random = Math.floor(100 + Math.random() * 900);\n      const materialQualNum = `QUN-${yyyyMMdd}-${random}`;\n\n      await axios.put(`/orderCheck/${id}`);\n      await axios.post(\"/qualityTest\", {\n        material_qual_num: materialQualNum,\n        purchase_order_id: id,\n        material_code: order.material_code,\n      });\n\n      alert(`[${id}] 수령 및 품질검사 등록 완료!`);\n    } else {\n      alert(`[${id}] 수령 완료! (누적 수령 중)`);\n    }\n  }\n\n  selectedRows.value = [];\n  await fetchOrder();\n};\n\nonMounted(() => {\n  fetchMaterialsOrder();\n  fetchOrder();\n});\n</script>\n\n<style scoped>\n.receipt-page {\n  padding: 1.5rem;\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.page-title {\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-bottom: 2rem;\n}\n\n.table-section {\n  margin-bottom: 2rem;\n}\n\n.table-title {\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n</style>\n"],"names":["formatToKST","isoDate","date","kst","toDateOnly","iso","generateLotNumber","materialCode","now","yyyyMMdd","random","materialOrderList","ref","orderCheckList","orderPage","receiptPage","selectedRows","orderColumns","receiptColumns","fetchMaterialsOrder","res","axios","fetchOrder","saveMaterialLot","item","payload","res2","handleReceive","id","inputQty","order","materialQualNum","onMounted","_openBlock","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_hoisted_2","_createVNode","_component_va_data_table","_withCtx","row","_createTextVNode","_toDisplayString","_component_va_input","$event","_component_va_checkbox","r","checked","index","_component_va_button","_hoisted_3"],"mappings":"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"}