{"version":3,"file":"BomManager-tw78HCsd.js","sources":["../../../client/src/pages/bom/BomManager.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-[1060px] h-[739px] mx-auto p-4 bg-gray-50 overflow-hidden\">\r\n    <!-- 상단 타이틀 -->\r\n    <div class=\"mb-4\">\r\n      <h1 class=\"text-2xl font-bold text-gray-800 mb-2\">BOM 관리</h1>\r\n    </div>\r\n\r\n    <div class=\"grid grid-cols-2 gap-4 h-[calc(100%-80px)]\">\r\n      <!-- 좌측: BOM 리스트 -->\r\n      <div class=\"flex flex-col bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-xs font-medium text-blue-600 mb-2\">제품명</label>\r\n          <select \r\n            v-model=\"selectedProduct\" \r\n            @change=\"filterBomList\" \r\n            class=\"w-full px-2 py-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 bg-white text-xs\"\r\n          >\r\n            <option value=\"\">제품명 선택</option>\r\n            <option v-for=\"prod in uniqueProductOptions\" :key=\"prod.base_product_code\" :value=\"prod.product_name\">\r\n              {{ prod.product_name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"h-[550px] overflow-auto border border-gray-200 rounded\">\r\n          <table class=\"w-full text-sm border-collapse bg-white\">\r\n            <thead class=\"bg-gray-50 sticky top-0\">\r\n              <tr>\r\n                <th class=\"border border-gray-200 px-3 py-2 text-left font-medium text-gray-700 text-xs\">BOM코드</th>\r\n                <th class=\"border border-gray-200 px-3 py-2 text-left font-medium text-gray-700 text-xs\">제품코드</th>\r\n                <th class=\"border border-gray-200 px-3 py-2 text-left font-medium text-gray-700 text-xs\">제품명</th>\r\n                <th class=\"border border-gray-200 px-3 py-2 text-left font-medium text-gray-700 text-xs\">규격</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr \r\n                v-for=\"bom in filteredBoms\" \r\n                :key=\"bom.bom_code\" \r\n                @click=\"selectBom(bom)\" \r\n                class=\"hover:bg-blue-50 cursor-pointer transition-colors duration-150\"\r\n              >\r\n                <td class=\"border border-gray-200 px-3 py-2 text-xs\">{{ bom.bom_code }}</td>\r\n                <td class=\"border border-gray-200 px-3 py-2 text-xs\">{{ bom.product_code }}</td>\r\n                <td class=\"border border-gray-200 px-3 py-2 text-xs\">{{ bom.product_name }}</td>\r\n                <td class=\"border border-gray-200 px-3 py-2 text-xs\">{{ bom.product_stand }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 우측: BOM 상세 -->\r\n      <div class=\"flex flex-col bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\r\n        <!-- 기본 정보 -->\r\n        <div class=\"grid grid-cols-3 gap-3 mb-4\">\r\n        <div>\r\n            <label class=\"block text-xs font-medium text-blue-600 mb-2\">BOM 코드</label>\r\n            <input \r\n              v-model=\"form.bom_code\" \r\n              class=\"w-full px-2 py-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-xs bg-gray-100\" \r\n              readonly\r\n            />\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-xs font-medium text-blue-600 mb-2\">제품명</label>\r\n            <div class=\"relative\">\r\n              <select \r\n                v-if=\"!isEditMode\"\r\n                v-model=\"form.product_name\" \r\n                class=\"w-full px-2 py-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 bg-white text-xs\"\r\n                @change=\"onProductNameChange\"\r\n              >\r\n                <option value=\"\">제품명 선택</option>\r\n                <option v-for=\"product in uniqueProductNames\" :key=\"product\" :value=\"product\">\r\n                  {{ product }}\r\n                </option>\r\n              </select>\r\n              <input \r\n                v-else\r\n                v-model=\"form.product_name\" \r\n                class=\"w-full px-2 py-1.5 border border-gray-300 rounded-md bg-gray-100 text-gray-600 text-xs\"\r\n                readonly\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div>\r\n            <label class=\"block text-xs font-medium text-blue-600 mb-2\">규격</label>\r\n            <select \r\n              v-model=\"form.product_stand\" \r\n              class=\"w-full px-2 py-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 bg-white text-xs\"\r\n              @change=\"updateProductCode\"\r\n              :disabled=\"!form.product_name || isEditMode\"\r\n            >\r\n              <option value=\"\">규격 선택</option>\r\n              <option v-for=\"spec in availableSpecs\" :key=\"spec\" :value=\"spec\">\r\n                {{ spec }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 투입 자재 -->\r\n        <div class=\"mb-3 flex flex-col h-60\">\r\n          <div class=\"flex justify-between items-center mb-2\">\r\n            <label class=\"text-xs font-medium text-blue-600\">투입 자재</label>\r\n            <button \r\n              @click=\"removeSelectedMaterials\" \r\n              class=\"px-3 py-1.5 bg-red-500 text-white text-xs rounded hover:bg-red-600 transition-colors duration-150 disabled:opacity-50 disabled:cursor-not-allowed\" \r\n              :disabled=\"!hasSelectedMaterials\"\r\n            >\r\n              제거\r\n            </button>\r\n          </div>\r\n          <div class=\"flex-1 overflow-auto border border-gray-200 rounded\">\r\n            <table class=\"w-full text-xs border-collapse bg-white\">\r\n              <thead class=\"bg-gray-50 sticky top-0\">\r\n                <tr>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-center font-medium text-gray-700\">#</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">자재코드</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">자재명</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">분류</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">규격</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">투입량</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">단위</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(mat, index) in form.materials\" :key=\"mat.material_code || index\" class=\"hover:bg-gray-50\">\r\n                  <td class=\"border border-gray-200 px-2 py-0.5 text-center\">\r\n                    <input type=\"checkbox\" v-model=\"mat.selected\" class=\"rounded w-3 h-3\" />\r\n                  </td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_code }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_name }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_type || '-' }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_stand }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">\r\n                    <input \r\n                    v-model.number=\"mat.usage_qty\" \r\n                    type=\"number\" \r\n                    step=\"0.01\" \r\n                    class=\"w-14 px-1 py-0.5 border border-gray-300 rounded text-xs focus:outline-none focus:ring-1 focus:ring-blue-500\" \r\n                    />\r\n                  </td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_unit }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 자재 검색 및 추가 -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"text-xs font-medium text-blue-600 mb-2 block\">자재 검색 및 추가</label>\r\n          <div class=\"flex gap-2 mb-2\">\r\n            <input \r\n              v-model=\"searchMaterial\" \r\n              placeholder=\"자재코드 또는 자재명\" \r\n              class=\"flex-1 px-2 py-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-xs\" \r\n              @keyup.enter=\"searchMaterials\" \r\n            />\r\n            <button \r\n              @click=\"addMaterialsToBom\" \r\n              class=\"px-3 py-1.5 bg-green-600 text-white rounded text-xs hover:bg-green-700 transition-colors duration-150\"\r\n            >\r\n              추가\r\n            </button>\r\n          </div>\r\n          <div class=\"h-[200px] overflow-y-auto border border-gray-200 rounded\">\r\n            <table class=\"w-full text-xs border-collapse bg-white\">\r\n              <thead class=\"bg-gray-50 sticky top-0\">\r\n                <tr>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-center font-medium text-gray-700\">#</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">자재코드</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">자재명</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">분류</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">규격</th>\r\n                  <th class=\"border border-gray-200 px-2 py-0.5 text-left font-medium text-gray-700\">단위</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"mat in filteredMaterials\" :key=\"mat.material_code\" class=\"hover:bg-gray-50\">\r\n                  <td class=\"border border-gray-200 px-2 py-0.5 text-center\">\r\n                    <input type=\"checkbox\" :value=\"mat\" v-model=\"selectedMaterials\" class=\"rounded w-3 h-3\" />\r\n                  </td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_code }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_name }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_type }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_stand }}</td>\r\n                  <td class=\"border border-gray-200 px-2 py-0.5\">{{ mat.material_unit }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 저장/초기화 버튼 -->\r\n        <div class=\"flex gap-3 justify-center mt-2\">\r\n          <button \r\n            @click=\"saveBom\" \r\n            class=\"px-5 py-1.5 bg-blue-600 text-white rounded text-xs hover:bg-blue-700 transition-colors duration-150 disabled:opacity-50 disabled:cursor-not-allowed font-medium\" \r\n            :disabled=\"!canSave\"\r\n          >\r\n            {{ isEditMode ? '수정' : '저장' }}\r\n          </button>\r\n          <button \r\n            @click=\"resetForm\" \r\n            class=\"px-5 py-1.5 bg-gray-500 text-white rounded text-xs hover:bg-gray-600 transition-colors duration-150 font-medium\"\r\n          >\r\n            초기화\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst bomList = ref([])\r\nconst productOptions = ref([])\r\nconst materialList = ref([])\r\n\r\nconst selectedProduct = ref('')\r\nconst selectedMaterials = ref([])\r\nconst searchMaterial = ref('')\r\nconst isEditMode = ref(false)\r\n\r\nconst form = ref({\r\n  bom_code: '',\r\n  product_code: '',\r\n  product_name: '',\r\n  product_stand: '',\r\n  materials: [],\r\n  deletedMaterials: [], // 삭제할 자재 목록\r\n})\r\n\r\n// BOM 목록을 고유하게 변환 (중복 제거)\r\nconst uniqueBomList = computed(() => {\r\n  const bomMap = new Map()\r\n  bomList.value.forEach(bom => {\r\n    if (!bomMap.has(bom.bom_code)) {\r\n      bomMap.set(bom.bom_code, {\r\n        bom_code: bom.bom_code,\r\n        product_code: bom.product_code,\r\n        product_name: bom.product_name,\r\n        product_stand: bom.product_stand\r\n      })\r\n    }\r\n  })\r\n  return Array.from(bomMap.values())\r\n})\r\n\r\n// 제품명 중복 제거하여 드롭다운 옵션 생성 (왼쪽 필터용)\r\n// 제품코드 기반으로 그룹핑하되 제품명이 표시되도록\r\nconst uniqueProductOptions = computed(() => {\r\n  const productMap = new Map()\r\n  \r\n  productOptions.value.forEach(product => {\r\n    // 제품코드에서 규격 부분(-10, -30, -60) 제거\r\n    const baseProductCode = product.product_code.replace(/-\\d+$/, '')\r\n    \r\n    if (!productMap.has(baseProductCode)) {\r\n      productMap.set(baseProductCode, {\r\n        base_product_code: baseProductCode,\r\n        product_name: product.product_name,\r\n        // 해당 베이스 코드의 모든 규격들\r\n        variants: []\r\n      })\r\n    }\r\n    \r\n    // 각 베이스 코드별로 규격 정보 저장\r\n    productMap.get(baseProductCode).variants.push({\r\n      product_code: product.product_code,\r\n      product_stand: product.product_stand\r\n    })\r\n  })\r\n  \r\n  return Array.from(productMap.values())\r\n})\r\n\r\n// 중복 제거된 제품명 목록 (드롭다운용)\r\nconst uniqueProductNames = computed(() => {\r\n  const productNames = new Set()\r\n  productOptions.value.forEach(product => {\r\n    if (product.product_name) {\r\n      productNames.add(product.product_name)\r\n    }\r\n  })\r\n  return Array.from(productNames).sort()\r\n})\r\n\r\n// 선택된 제품명에 따른 사용 가능한 규격 목록\r\nconst availableSpecs = computed(() => {\r\n  if (!form.value.product_name) return []\r\n  \r\n  const specs = new Set()\r\n  productOptions.value\r\n    .filter(product => product.product_name === form.value.product_name)\r\n    .forEach(product => {\r\n      if (product.product_stand) {\r\n        specs.add(product.product_stand)\r\n      }\r\n    })\r\n  \r\n  return Array.from(specs).sort()\r\n})\r\n\r\n// 선택된 제품명으로 BOM 목록 필터링 (제품코드 기반)\r\nconst filteredBoms = computed(() => {\r\n  if (!selectedProduct.value) return uniqueBomList.value\r\n  \r\n  // 선택된 제품명에 해당하는 제품코드들 찾기\r\n  const matchingProductCodes = productOptions.value\r\n    .filter(product => product.product_name === selectedProduct.value)\r\n    .map(product => product.product_code)\r\n  \r\n  // BOM 목록에서 해당 제품코드들과 일치하는 것들만 필터링\r\n  return uniqueBomList.value.filter(bom => \r\n    matchingProductCodes.includes(bom.product_code)\r\n  )\r\n})\r\n\r\nconst filteredMaterials = computed(() => {\r\n  if (!searchMaterial.value) return materialList.value.slice(0, 50)\r\n  const keyword = searchMaterial.value.toLowerCase()\r\n  return materialList.value.filter(mat => {\r\n    return (\r\n      mat.material_code.toLowerCase().includes(keyword) ||\r\n      mat.material_name.toLowerCase().includes(keyword)\r\n    )\r\n  }).slice(0, 50)\r\n})\r\n\r\nconst hasSelectedMaterials = computed(() => {\r\n  return form.value.materials.some(material => material.selected)\r\n})\r\n\r\nconst canSave = computed(() => {\r\n  return form.value.bom_code && form.value.product_name && form.value.product_stand && form.value.materials.length > 0\r\n})\r\n\r\n// BOM 코드 자동 생성 함수 (BOM-제품코드-YYYYMMDD 형식)\r\nconst generateBomCode = () => {\r\n  if (form.value.product_code) {\r\n    const today = new Date()\r\n    const year = today.getFullYear()\r\n    const month = String(today.getMonth() + 1).padStart(2, '0')\r\n    const day = String(today.getDate()).padStart(2, '0')\r\n    const dateStr = year + month + day\r\n    \r\n    form.value.bom_code = `BOM-${form.value.product_code}-${dateStr}`\r\n  }\r\n}\r\n\r\n// 제품명 선택 시 처리\r\nconst onProductNameChange = () => {\r\n  // 제품명이 변경되면 규격 초기화\r\n  form.value.product_stand = ''\r\n  form.value.product_code = ''\r\n  form.value.bom_code = ''\r\n}\r\n\r\n// 제품명과 규격 기반으로 제품코드 업데이트 및 BOM 코드 자동 생성\r\nconst updateProductCode = async () => {\r\n  if (!isEditMode.value && form.value.product_name && form.value.product_stand) {\r\n    // 제품명과 규격이 일치하는 제품 찾기\r\n    const matchingProduct = productOptions.value.find(product => \r\n      product.product_name === form.value.product_name && \r\n      product.product_stand === form.value.product_stand\r\n    )\r\n    \r\n    if (matchingProduct) {\r\n      form.value.product_code = matchingProduct.product_code\r\n      \r\n      // BOM 코드 자동 생성\r\n      generateBomCode()\r\n      \r\n      // 동일한 제품코드로 기존 BOM이 있는지 확인\r\n      await checkExistingBom(matchingProduct.product_code)\r\n    } else {\r\n      form.value.product_code = ''\r\n      form.value.bom_code = ''\r\n    }\r\n  }\r\n}\r\n\r\n// 기존 BOM 존재 여부 확인\r\nconst checkExistingBom = async (productCode) => {\r\n  try {\r\n    // 기존 BOM 목록에서 동일한 제품코드가 있는지 확인\r\n    const existingBom = uniqueBomList.value.find(bom => bom.product_code === productCode)\r\n    if (existingBom) {\r\n      alert(`${form.value.product_name}의 BOM 코드가 이미 등록되어 있습니다.`)\r\n      form.value.bom_code = ''\r\n      return false\r\n    }\r\n    return true\r\n  } catch (err) {\r\n    return true\r\n  }\r\n}\r\n\r\nconst filterBomList = () => {\r\n  // 필터링은 computed에서 처리되므로 빈 함수\r\n}\r\n\r\nconst selectBom = async (bom) => {\r\n  // 중복 호출 방지\r\n  if (isEditMode.value && form.value.bom_code === bom.bom_code) {\r\n    return\r\n  }\r\n  \r\n  try {\r\n    const res = await axios.get(`/bom/${bom.bom_code}`)\r\n    \r\n    if (res.data && res.data.master) {\r\n      const { master, materials } = res.data\r\n      \r\n      form.value = {\r\n        bom_code: master.bom_code,\r\n        product_code: master.product_code,\r\n        product_name: master.product_name,\r\n        product_stand: master.product_stand,\r\n        materials: materials.map(item => ({\r\n          material_code: item.material_code,\r\n          material_name: item.material_name,\r\n          material_type: item.material_type || '',\r\n          material_unit: item.material_unit,\r\n          material_stand: item.material_stand,\r\n          usage_qty: item.usage_qty,\r\n          bom_unit: item.bom_unit,\r\n          selected: false,\r\n          status: 'existing'\r\n        })),\r\n        deletedMaterials: []\r\n      }\r\n      isEditMode.value = true\r\n    }\r\n  } catch (err) {\r\n    alert('BOM 상세 정보를 불러오는데 실패했습니다.')\r\n  }\r\n}\r\n\r\nconst addMaterialsToBom = () => {\r\n  selectedMaterials.value.forEach(mat => {\r\n    if (!form.value.materials.find(d => d.material_code === mat.material_code)) {\r\n      form.value.materials.push({\r\n        material_code: mat.material_code,\r\n        material_name: mat.material_name,\r\n        material_type: mat.material_type || mat.material_category || '',\r\n        material_unit: mat.material_unit,\r\n        material_stand: mat.material_stand,\r\n        usage_qty: 0,\r\n        bom_unit: mat.material_unit,\r\n        selected: false,\r\n        status: 'new'\r\n      })\r\n    }\r\n  })\r\n  selectedMaterials.value = []\r\n}\r\n\r\nconst removeSelectedMaterials = () => {\r\n  const selectedMaterialsToDelete = form.value.materials.filter(material => material.selected)\r\n  \r\n  if (selectedMaterialsToDelete.length === 0) {\r\n    alert('삭제할 자재를 선택해주세요.')\r\n    return\r\n  }\r\n\r\n  // 기존 자재(DB에 있는 자재)는 삭제 목록에 추가\r\n  const existingMaterialsToDelete = selectedMaterialsToDelete.filter(mat => mat.status === 'existing')\r\n  if (existingMaterialsToDelete.length > 0) {\r\n    form.value.deletedMaterials = form.value.deletedMaterials || []\r\n    existingMaterialsToDelete.forEach(material => {\r\n      form.value.deletedMaterials.push({\r\n        material_code: material.material_code,\r\n        bom_code: form.value.bom_code\r\n      })\r\n    })\r\n  }\r\n  \r\n  // UI에서 선택된 자재들 제거\r\n  form.value.materials = form.value.materials.filter(material => !material.selected)\r\n}\r\n\r\nconst saveBom = async () => {\r\n  if (!canSave.value) {\r\n    alert('BOM 코드, 제품명, 규격, 자재를 모두 입력해주세요.')\r\n    return\r\n  }\r\n\r\n  try {\r\n    let finalProductCode = form.value.product_code\r\n\r\n    // 신규 등록 시 제품코드가 없으면 제품명과 규격으로 찾기\r\n    if (!isEditMode.value && !finalProductCode) {\r\n      const matchingProduct = productOptions.value.find(product => \r\n        product.product_name === form.value.product_name && \r\n        product.product_stand === form.value.product_stand\r\n      )\r\n      \r\n      if (matchingProduct) {\r\n        finalProductCode = matchingProduct.product_code\r\n      } else {\r\n        alert('선택한 제품명과 규격에 해당하는 제품을 찾을 수 없습니다.')\r\n        return\r\n      }\r\n    }\r\n\r\n    // 백엔드 서비스와 동일한 구조로 데이터 구성\r\n    const payload = {\r\n      master: {\r\n        bom_code: form.value.bom_code,\r\n        product_code: finalProductCode,\r\n        product_name: form.value.product_name,\r\n        product_stand: form.value.product_stand\r\n      },\r\n      materials: form.value.materials.map(mat => ({\r\n        material_code: mat.material_code,\r\n        usage_qty: mat.usage_qty,\r\n        bom_unit: mat.bom_unit || mat.material_unit,\r\n        status: mat.status || 'new'\r\n      }))\r\n    }\r\n\r\n    if (isEditMode.value) {\r\n      await axios.put('/bom', payload)\r\n      alert('BOM 수정 완료')\r\n    } else {\r\n      await axios.post('/bom', payload)\r\n      alert('BOM 등록 완료')\r\n    }\r\n    \r\n    await fetchBomList()\r\n    resetForm()\r\n  } catch (err) {\r\n    if (err.response && err.response.data && err.response.data.error) {\r\n      alert(`BOM 저장에 실패했습니다: ${err.response.data.error}`)\r\n    } else {\r\n      alert('BOM 저장에 실패했습니다.')\r\n    }\r\n  }\r\n}\r\n\r\nconst resetForm = () => {\r\n  form.value = { \r\n    bom_code: '', \r\n    product_code: '', \r\n    product_name: '', \r\n    product_stand: '', \r\n    materials: [],\r\n    deletedMaterials: [] // 삭제된 자재 목록 초기화\r\n  }\r\n  isEditMode.value = false\r\n  selectedMaterials.value = []\r\n}\r\n\r\nconst fetchBomList = async () => {\r\n  try {\r\n    const res = await axios.get('/bom/list')\r\n    bomList.value = res.data || []\r\n  } catch (err) {\r\n    // 오류 처리\r\n  }\r\n}\r\n\r\nconst fetchProductList = async () => {\r\n  try {\r\n    const res = await axios.get('/bom/products')\r\n    productOptions.value = res.data || []\r\n  } catch (err) {\r\n    // 오류 처리\r\n  }\r\n}\r\n\r\nconst fetchMaterialList = async () => {\r\n  try {\r\n    const res = await axios.get('/bom/materials')\r\n    materialList.value = res.data || []\r\n  } catch (err) {\r\n    // 오류 처리\r\n  }\r\n}\r\n\r\nconst searchMaterials = () => {\r\n  // Enter 키 입력 시 자동으로 filteredMaterials가 업데이트됨\r\n}\r\n\r\nonMounted(() => {\r\n  fetchBomList()\r\n  fetchProductList()\r\n  fetchMaterialList()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\ninput, select {\r\n  transition: all 0.15s ease-in-out;\r\n}\r\n\r\ninput:focus, select:focus {\r\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n}\r\n\r\n/* 스크롤바 스타일링 */\r\n::-webkit-scrollbar {\r\n  width: 6px;\r\n  height: 6px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #f8fafc;\r\n  border-radius: 3px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #cbd5e1;\r\n  border-radius: 3px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #94a3b8;\r\n}\r\n</style>"],"names":["bomList","ref","productOptions","materialList","selectedProduct","selectedMaterials","searchMaterial","isEditMode","form","uniqueBomList","computed","bomMap","bom","uniqueProductOptions","productMap","product","baseProductCode","uniqueProductNames","productNames","availableSpecs","specs","filteredBoms","matchingProductCodes","filteredMaterials","keyword","mat","hasSelectedMaterials","material","canSave","generateBomCode","today","year","month","day","dateStr","onProductNameChange","updateProductCode","matchingProduct","checkExistingBom","productCode","filterBomList","selectBom","res","axios","master","materials","item","addMaterialsToBom","d","removeSelectedMaterials","selectedMaterialsToDelete","existingMaterialsToDelete","saveBom","finalProductCode","payload","fetchBomList","resetForm","err","fetchProductList","fetchMaterialList","searchMaterials","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_cache","$event","_Fragment","_renderList","prod","_toDisplayString","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_vModelText","_hoisted_15","_hoisted_16","_vModelSelect","spec","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","index","_hoisted_24","_vModelCheckbox","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45"],"mappings":"slEA6NA,MAAMA,EAAUC,EAAI,EAAE,EAChBC,EAAiBD,EAAI,EAAE,EACvBE,EAAeF,EAAI,EAAE,EAErBG,EAAkBH,EAAI,EAAE,EACxBI,EAAoBJ,EAAI,EAAE,EAC1BK,EAAiBL,EAAI,EAAE,EACvBM,EAAaN,EAAI,EAAK,EAEtBO,EAAOP,EAAI,CACf,SAAU,GACV,aAAc,GACd,aAAc,GACd,cAAe,GACf,UAAW,CAAE,EACb,iBAAkB,CAAE,CACtB,CAAC,EAGKQ,EAAgBC,EAAS,IAAM,CACnC,MAAMC,EAAS,IAAI,IACnB,OAAAX,EAAQ,MAAM,QAAQY,GAAO,CACtBD,EAAO,IAAIC,EAAI,QAAQ,GAC1BD,EAAO,IAAIC,EAAI,SAAU,CACvB,SAAUA,EAAI,SACd,aAAcA,EAAI,aAClB,aAAcA,EAAI,aAClB,cAAeA,EAAI,aAC3B,CAAO,CAEP,CAAG,EACM,MAAM,KAAKD,EAAO,OAAM,CAAE,CACnC,CAAC,EAIKE,EAAuBH,EAAS,IAAM,CAC1C,MAAMI,EAAa,IAAI,IAEvB,OAAAZ,EAAe,MAAM,QAAQa,GAAW,CAEtC,MAAMC,EAAkBD,EAAQ,aAAa,QAAQ,QAAS,EAAE,EAE3DD,EAAW,IAAIE,CAAe,GACjCF,EAAW,IAAIE,EAAiB,CAC9B,kBAAmBA,EACnB,aAAcD,EAAQ,aAEtB,SAAU,CAAE,CACpB,CAAO,EAIHD,EAAW,IAAIE,CAAe,EAAE,SAAS,KAAK,CAC5C,aAAcD,EAAQ,aACtB,cAAeA,EAAQ,aAC7B,CAAK,CACL,CAAG,EAEM,MAAM,KAAKD,EAAW,OAAM,CAAE,CACvC,CAAC,EAGKG,EAAqBP,EAAS,IAAM,CACxC,MAAMQ,EAAe,IAAI,IACzB,OAAAhB,EAAe,MAAM,QAAQa,GAAW,CAClCA,EAAQ,cACVG,EAAa,IAAIH,EAAQ,YAAY,CAE3C,CAAG,EACM,MAAM,KAAKG,CAAY,EAAE,KAAM,CACxC,CAAC,EAGKC,EAAiBT,EAAS,IAAM,CACpC,GAAI,CAACF,EAAK,MAAM,aAAc,MAAO,CAAE,EAEvC,MAAMY,EAAQ,IAAI,IAClB,OAAAlB,EAAe,MACZ,OAAOa,GAAWA,EAAQ,eAAiBP,EAAK,MAAM,YAAY,EAClE,QAAQO,GAAW,CACdA,EAAQ,eACVK,EAAM,IAAIL,EAAQ,aAAa,CAEvC,CAAK,EAEI,MAAM,KAAKK,CAAK,EAAE,KAAM,CACjC,CAAC,EAGKC,EAAeX,EAAS,IAAM,CAClC,GAAI,CAACN,EAAgB,MAAO,OAAOK,EAAc,MAGjD,MAAMa,EAAuBpB,EAAe,MACzC,OAAOa,GAAWA,EAAQ,eAAiBX,EAAgB,KAAK,EAChE,IAAIW,GAAWA,EAAQ,YAAY,EAGtC,OAAON,EAAc,MAAM,OAAOG,GAChCU,EAAqB,SAASV,EAAI,YAAY,CAC/C,CACH,CAAC,EAEKW,EAAoBb,EAAS,IAAM,CACvC,GAAI,CAACJ,EAAe,MAAO,OAAOH,EAAa,MAAM,MAAM,EAAG,EAAE,EAChE,MAAMqB,EAAUlB,EAAe,MAAM,YAAa,EAClD,OAAOH,EAAa,MAAM,OAAOsB,GAE7BA,EAAI,cAAc,cAAc,SAASD,CAAO,GAChDC,EAAI,cAAc,cAAc,SAASD,CAAO,CAEnD,EAAE,MAAM,EAAG,EAAE,CAChB,CAAC,EAEKE,EAAuBhB,EAAS,IAC7BF,EAAK,MAAM,UAAU,KAAKmB,GAAYA,EAAS,QAAQ,CAC/D,EAEKC,EAAUlB,EAAS,IAChBF,EAAK,MAAM,UAAYA,EAAK,MAAM,cAAgBA,EAAK,MAAM,eAAiBA,EAAK,MAAM,UAAU,OAAS,CACpH,EAGKqB,EAAkB,IAAM,CAC5B,GAAIrB,EAAK,MAAM,aAAc,CAC3B,MAAMsB,EAAQ,IAAI,KACZC,EAAOD,EAAM,YAAa,EAC1BE,EAAQ,OAAOF,EAAM,SAAQ,EAAK,CAAC,EAAE,SAAS,EAAG,GAAG,EACpDG,EAAM,OAAOH,EAAM,QAAS,CAAA,EAAE,SAAS,EAAG,GAAG,EAC7CI,EAAUH,EAAOC,EAAQC,EAE/BzB,EAAK,MAAM,SAAW,OAAOA,EAAK,MAAM,YAAY,IAAI0B,CAAO,EAChE,CACH,EAGMC,EAAsB,IAAM,CAEhC3B,EAAK,MAAM,cAAgB,GAC3BA,EAAK,MAAM,aAAe,GAC1BA,EAAK,MAAM,SAAW,EACxB,EAGM4B,EAAoB,SAAY,CACpC,GAAI,CAAC7B,EAAW,OAASC,EAAK,MAAM,cAAgBA,EAAK,MAAM,cAAe,CAE5E,MAAM6B,EAAkBnC,EAAe,MAAM,KAAKa,GAChDA,EAAQ,eAAiBP,EAAK,MAAM,cACpCO,EAAQ,gBAAkBP,EAAK,MAAM,aACtC,EAEG6B,GACF7B,EAAK,MAAM,aAAe6B,EAAgB,aAG1CR,EAAiB,EAGjB,MAAMS,EAAiBD,EAAgB,YAAY,IAEnD7B,EAAK,MAAM,aAAe,GAC1BA,EAAK,MAAM,SAAW,GAEzB,CACH,EAGM8B,EAAmB,MAAOC,GAAgB,CAC9C,GAAI,CAGF,OADoB9B,EAAc,MAAM,KAAKG,GAAOA,EAAI,eAAiB2B,CAAW,GAElF,MAAM,GAAG/B,EAAK,MAAM,YAAY,yBAAyB,EACzDA,EAAK,MAAM,SAAW,GACf,IAEF,EACR,MAAa,CACZ,MAAO,EACR,CACH,EAEMgC,EAAgB,IAAM,CAE5B,EAEMC,EAAY,MAAO7B,GAAQ,CAE/B,GAAI,EAAAL,EAAW,OAASC,EAAK,MAAM,WAAaI,EAAI,UAIpD,GAAI,CACF,MAAM8B,EAAM,MAAMC,EAAM,IAAI,QAAQ/B,EAAI,QAAQ,EAAE,EAElD,GAAI8B,EAAI,MAAQA,EAAI,KAAK,OAAQ,CAC/B,KAAM,CAAE,OAAAE,EAAQ,UAAAC,CAAW,EAAGH,EAAI,KAElClC,EAAK,MAAQ,CACX,SAAUoC,EAAO,SACjB,aAAcA,EAAO,aACrB,aAAcA,EAAO,aACrB,cAAeA,EAAO,cACtB,UAAWC,EAAU,IAAIC,IAAS,CAChC,cAAeA,EAAK,cACpB,cAAeA,EAAK,cACpB,cAAeA,EAAK,eAAiB,GACrC,cAAeA,EAAK,cACpB,eAAgBA,EAAK,eACrB,UAAWA,EAAK,UAChB,SAAUA,EAAK,SACf,SAAU,GACV,OAAQ,UAClB,EAAU,EACF,iBAAkB,CAAE,CACrB,EACDvC,EAAW,MAAQ,EACpB,CACF,MAAa,CACZ,MAAM,0BAA0B,CACjC,CACH,EAEMwC,EAAoB,IAAM,CAC9B1C,EAAkB,MAAM,QAAQoB,GAAO,CAChCjB,EAAK,MAAM,UAAU,KAAKwC,GAAKA,EAAE,gBAAkBvB,EAAI,aAAa,GACvEjB,EAAK,MAAM,UAAU,KAAK,CACxB,cAAeiB,EAAI,cACnB,cAAeA,EAAI,cACnB,cAAeA,EAAI,eAAiBA,EAAI,mBAAqB,GAC7D,cAAeA,EAAI,cACnB,eAAgBA,EAAI,eACpB,UAAW,EACX,SAAUA,EAAI,cACd,SAAU,GACV,OAAQ,KAChB,CAAO,CAEP,CAAG,EACDpB,EAAkB,MAAQ,CAAE,CAC9B,EAEM4C,EAA0B,IAAM,CACpC,MAAMC,EAA4B1C,EAAK,MAAM,UAAU,OAAOmB,GAAYA,EAAS,QAAQ,EAE3F,GAAIuB,EAA0B,SAAW,EAAG,CAC1C,MAAM,iBAAiB,EACvB,MACD,CAGD,MAAMC,EAA4BD,EAA0B,OAAOzB,GAAOA,EAAI,SAAW,UAAU,EAC/F0B,EAA0B,OAAS,IACrC3C,EAAK,MAAM,iBAAmBA,EAAK,MAAM,kBAAoB,CAAE,EAC/D2C,EAA0B,QAAQxB,GAAY,CAC5CnB,EAAK,MAAM,iBAAiB,KAAK,CAC/B,cAAemB,EAAS,cACxB,SAAUnB,EAAK,MAAM,QAC7B,CAAO,CACP,CAAK,GAIHA,EAAK,MAAM,UAAYA,EAAK,MAAM,UAAU,OAAOmB,GAAY,CAACA,EAAS,QAAQ,CACnF,EAEMyB,EAAU,SAAY,CAC1B,GAAI,CAACxB,EAAQ,MAAO,CAClB,MAAM,iCAAiC,EACvC,MACD,CAED,GAAI,CACF,IAAIyB,EAAmB7C,EAAK,MAAM,aAGlC,GAAI,CAACD,EAAW,OAAS,CAAC8C,EAAkB,CAC1C,MAAMhB,EAAkBnC,EAAe,MAAM,KAAKa,GAChDA,EAAQ,eAAiBP,EAAK,MAAM,cACpCO,EAAQ,gBAAkBP,EAAK,MAAM,aACtC,EAED,GAAI6B,EACFgB,EAAmBhB,EAAgB,iBAC9B,CACL,MAAM,kCAAkC,EACxC,MACD,CACF,CAGD,MAAMiB,EAAU,CACd,OAAQ,CACN,SAAU9C,EAAK,MAAM,SACrB,aAAc6C,EACd,aAAc7C,EAAK,MAAM,aACzB,cAAeA,EAAK,MAAM,aAC3B,EACD,UAAWA,EAAK,MAAM,UAAU,IAAIiB,IAAQ,CAC1C,cAAeA,EAAI,cACnB,UAAWA,EAAI,UACf,SAAUA,EAAI,UAAYA,EAAI,cAC9B,OAAQA,EAAI,QAAU,KAC9B,EAAQ,CACH,EAEGlB,EAAW,OACb,MAAMoC,EAAM,IAAI,OAAQW,CAAO,EAC/B,MAAM,WAAW,IAEjB,MAAMX,EAAM,KAAK,OAAQW,CAAO,EAChC,MAAM,WAAW,GAGnB,MAAMC,EAAc,EACpBC,EAAW,CACZ,OAAQC,EAAK,CACRA,EAAI,UAAYA,EAAI,SAAS,MAAQA,EAAI,SAAS,KAAK,MACzD,MAAM,mBAAmBA,EAAI,SAAS,KAAK,KAAK,EAAE,EAElD,MAAM,iBAAiB,CAE1B,CACH,EAEMD,EAAY,IAAM,CACtBhD,EAAK,MAAQ,CACX,SAAU,GACV,aAAc,GACd,aAAc,GACd,cAAe,GACf,UAAW,CAAE,EACb,iBAAkB,CAAE,CACrB,EACDD,EAAW,MAAQ,GACnBF,EAAkB,MAAQ,CAAE,CAC9B,EAEMkD,EAAe,SAAY,CAC/B,GAAI,CACF,MAAMb,EAAM,MAAMC,EAAM,IAAI,WAAW,EACvC3C,EAAQ,MAAQ0C,EAAI,MAAQ,CAAE,CAC/B,MAAa,CAEb,CACH,EAEMgB,EAAmB,SAAY,CACnC,GAAI,CACF,MAAMhB,EAAM,MAAMC,EAAM,IAAI,eAAe,EAC3CzC,EAAe,MAAQwC,EAAI,MAAQ,CAAE,CACtC,MAAa,CAEb,CACH,EAEMiB,EAAoB,SAAY,CACpC,GAAI,CACF,MAAMjB,EAAM,MAAMC,EAAM,IAAI,gBAAgB,EAC5CxC,EAAa,MAAQuC,EAAI,MAAQ,CAAE,CACpC,MAAa,CAEb,CACH,EAEMkB,EAAkB,IAAM,CAE9B,EAEA,OAAAC,EAAU,IAAM,CACdN,EAAc,EACdG,EAAkB,EAClBC,EAAmB,CACrB,CAAC,UAnlBCG,EAAA,EAAAC,EAqNM,MArNNC,EAqNM,eAnNJC,EAEM,MAAA,CAFD,MAAM,QAAM,CACfA,EAA6D,KAAzD,CAAA,MAAM,uCAAuC,EAAC,QAAM,QAG1DA,EA8MM,MA9MNC,EA8MM,CA5MJD,EAwCM,MAxCNE,EAwCM,CAvCJF,EAYM,MAZNG,GAYM,CAXJC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAJ,EAAuE,QAAhE,CAAA,MAAM,8CAA8C,EAAC,MAAG,EAAA,KAC/DA,EASS,SAAA,sCARE7D,EAAe,MAAAkE,GACvB,SAAQ9B,EACT,MAAM,oJAEN6B,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAJ,EAAgC,SAAxB,CAAA,MAAM,EAAE,EAAC,SAAM,EAAA,UACvBF,EAESQ,EAAA,KAAAC,EAFc3D,EAAoB,MAA5B4D,QAAfV,EAES,SAAA,CAFqC,IAAKU,EAAK,kBAAoB,MAAOA,EAAK,YACnF,EAAAC,EAAAD,EAAK,YAAY,EAAA,EAAAE,EAAA,oBANbvE,EAAe,KAAA,MAW5B6D,EAwBM,MAxBNW,GAwBM,CAvBJX,EAsBQ,QAtBRY,GAsBQ,aArBNZ,EAOQ,QAAA,CAPD,MAAM,2BAAyB,CACpCA,EAKK,KAAA,KAAA,CAJHA,EAAmG,KAA/F,CAAA,MAAM,8EAA8E,EAAC,OAAK,EAC9FA,EAAkG,KAA9F,CAAA,MAAM,8EAA8E,EAAC,MAAI,EAC7FA,EAAiG,KAA7F,CAAA,MAAM,8EAA8E,EAAC,KAAG,EAC5FA,EAAgG,KAA5F,CAAA,MAAM,8EAA8E,EAAC,IAAE,UAG/FA,EAYQ,QAAA,KAAA,QAXNF,EAUKQ,EAAA,KAAAC,EATWnD,EAAY,MAAnBT,QADTmD,EAUK,KAAA,CARF,IAAKnD,EAAI,SACT,QAAK0D,GAAE7B,EAAU7B,CAAG,EACrB,MAAM,mEAENqD,EAA4E,KAA5Ea,GAAwDJ,EAAA9D,EAAI,QAAQ,EAAA,CAAA,EACpEqD,EAAgF,KAAhFc,GAAwDL,EAAA9D,EAAI,YAAY,EAAA,CAAA,EACxEqD,EAAgF,KAAhFe,GAAwDN,EAAA9D,EAAI,YAAY,EAAA,CAAA,EACxEqD,EAAiF,KAAjFgB,GAAwDP,EAAA9D,EAAI,aAAa,EAAA,CAAA,yBAQnFqD,EAgKM,MAhKNiB,GAgKM,CA9JJjB,EA8CM,MA9CNkB,GA8CM,CA7CNlB,EAOQ,MAAA,KAAA,CANJI,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAJ,EAA0E,QAAnE,CAAA,MAAM,8CAA8C,EAAC,SAAM,EAAA,KAClEA,EAIE,QAAA,CAHS,sBAAAI,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA9D,EAAA,MAAK,SAAQ8D,GACtB,MAAM,qJACN,SAAA,eAFS,CAAAc,EAAA5E,EAAA,MAAK,QAAQ,MAK1ByD,EAqBM,MAAA,KAAA,CApBJI,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAJ,EAAuE,QAAhE,CAAA,MAAM,8CAA8C,EAAC,MAAG,EAAA,GAC/DA,EAkBM,MAlBNoB,GAkBM,CAhBK9E,EAAU,aAUnBwD,EAKE,QAAA,OAHS,sBAAAM,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA9D,EAAA,MAAK,aAAY8D,GAC1B,MAAM,yFACN,SAAA,gBAFS,CAAAc,EAAA5E,EAAA,MAAK,YAAY,WAb5BuD,EAUS,SAAA,OARE,sBAAAM,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA9D,EAAA,MAAK,aAAY8D,GAC1B,MAAM,kJACL,SAAQnC,IAETkC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAJ,EAAgC,SAAxB,CAAA,MAAM,EAAE,EAAC,SAAM,EAAA,UACvBF,EAESQ,EAAA,KAAAC,EAFiBvD,EAAkB,MAA7BF,QAAfgD,EAES,SAAA,CAFsC,IAAKhD,EAAU,MAAOA,KAChEA,CAAO,EAAA,EAAAuE,EAAA,kBANH,CAAAC,EAAA/E,EAAA,MAAK,YAAY,QAkBhCyD,EAaM,MAAA,KAAA,CAZJI,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAJ,EAAsE,QAA/D,CAAA,MAAM,8CAA8C,EAAC,KAAE,EAAA,KAC9DA,EAUS,SAAA,CATE,sBAAAI,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA9D,EAAA,MAAK,cAAa8D,GAC3B,MAAM,kJACL,SAAQlC,EACR,SAAW,CAAA5B,EAAA,MAAK,cAAgBD,EAAU,QAE3C8D,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAJ,EAA+B,SAAvB,CAAA,MAAM,EAAE,EAAC,QAAK,EAAA,UACtBF,EAESQ,EAAA,KAAAC,EAFcrD,EAAc,MAAtBqE,QAAfzB,EAES,SAAA,CAF+B,IAAKyB,EAAO,MAAOA,KACtDA,CAAI,EAAA,EAAAC,EAAA,mBAPA,CAAAF,EAAA/E,EAAA,MAAK,aAAa,QAcjCyD,EA8CM,MA9CNyB,GA8CM,CA7CJzB,EASM,MATN0B,GASM,CARJtB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAJ,EAA8D,QAAvD,CAAA,MAAM,mCAAmC,EAAC,QAAK,EAAA,GACtDA,EAMS,SAAA,CALN,QAAOhB,EACR,MAAM,oJACL,UAAWvB,EAAoB,OACjC,OAED,EAAAkE,EAAA,IAEF3B,EAkCM,MAlCN4B,GAkCM,CAjCJ5B,EAgCQ,QAhCR6B,GAgCQ,eA/BN7B,EAUQ,QAAA,CAVD,MAAM,2BAAyB,CACpCA,EAQK,KAAA,KAAA,CAPHA,EAA2F,KAAvF,CAAA,MAAM,0EAA0E,EAAC,GAAC,EACtFA,EAA4F,KAAxF,CAAA,MAAM,wEAAwE,EAAC,MAAI,EACvFA,EAA2F,KAAvF,CAAA,MAAM,wEAAwE,EAAC,KAAG,EACtFA,EAA0F,KAAtF,CAAA,MAAM,wEAAwE,EAAC,IAAE,EACrFA,EAA0F,KAAtF,CAAA,MAAM,wEAAwE,EAAC,IAAE,EACrFA,EAA2F,KAAvF,CAAA,MAAM,wEAAwE,EAAC,KAAG,EACtFA,EAA0F,KAAtF,CAAA,MAAM,wEAAwE,EAAC,IAAE,UAGzFA,EAmBQ,QAAA,KAAA,EAlBNH,EAAA,EAAA,EAAAC,EAiBKQ,SAjBsB/D,EAAI,MAAC,UAApB,CAAAiB,EAAKsE,SAAjBhC,EAiBK,KAAA,CAjBuC,IAAKtC,EAAI,eAAiBsE,EAAO,MAAM,qBACjF9B,EAEK,KAFL+B,GAEK,GADH/B,EAAwE,QAAA,CAAjE,KAAK,WAAoB,sBAAAK,GAAA7C,EAAI,SAAQ6C,EAAE,MAAM,+BAApB,CAAA2B,EAAAxE,EAAI,QAAQ,MAE9CwC,EAA2E,KAA3EiC,GAAkDxB,EAAAjD,EAAI,aAAa,EAAA,CAAA,EACnEwC,EAA2E,KAA3EkC,GAAkDzB,EAAAjD,EAAI,aAAa,EAAA,CAAA,EACnEwC,EAAkF,KAAlFmC,GAAkD1B,EAAAjD,EAAI,eAAa,GAAA,EAAA,CAAA,EACnEwC,EAA4E,KAA5EoC,GAAkD3B,EAAAjD,EAAI,cAAc,EAAA,CAAA,EACpEwC,EAOK,KAPLqC,GAOK,GANHrC,EAKE,QAAA,CAJc,sBAAAK,GAAA7C,EAAI,UAAS6C,EAC7B,KAAK,SACL,KAAK,OACL,MAAM,8HAHU7C,EAAI,iBAAZ,CAAA,OAAR,EAA8B,OAMhCwC,EAA2E,KAA3EsC,GAAkD7B,EAAAjD,EAAI,aAAa,EAAA,CAAA,oBAQ7EwC,EA0CM,MA1CNuC,GA0CM,CAzCJnC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAJ,EAA8E,QAAvE,CAAA,MAAM,8CAA8C,EAAC,aAAU,EAAA,GACtEA,EAaM,MAbNwC,GAaM,GAZJxC,EAKE,QAAA,sCAJS3D,EAAc,MAAAgE,GACvB,YAAY,cACZ,MAAM,yIACL,UAAaV,EAAe,CAAA,OAAA,CAAA,iBAHpBtD,EAAc,KAAA,IAKzB2D,EAKS,SAAA,CAJN,QAAOlB,EACR,MAAM,yGACP,MAED,IAEFkB,EAyBM,MAzBNyC,GAyBM,CAxBJzC,EAuBQ,QAvBR0C,GAuBQ,eAtBN1C,EASQ,QAAA,CATD,MAAM,2BAAyB,CACpCA,EAOK,KAAA,KAAA,CANHA,EAA2F,KAAvF,CAAA,MAAM,0EAA0E,EAAC,GAAC,EACtFA,EAA4F,KAAxF,CAAA,MAAM,wEAAwE,EAAC,MAAI,EACvFA,EAA2F,KAAvF,CAAA,MAAM,wEAAwE,EAAC,KAAG,EACtFA,EAA0F,KAAtF,CAAA,MAAM,wEAAwE,EAAC,IAAE,EACrFA,EAA0F,KAAtF,CAAA,MAAM,wEAAwE,EAAC,IAAE,EACrFA,EAA0F,KAAtF,CAAA,MAAM,wEAAwE,EAAC,IAAE,UAGzFA,EAWQ,QAAA,KAAA,QAVNF,EASKQ,EAAA,KAAAC,EATajD,EAAiB,MAAxBE,QAAXsC,EASK,KAAA,CATiC,IAAKtC,EAAI,cAAe,MAAM,qBAClEwC,EAEK,KAFL2C,GAEK,GADH3C,EAA0F,QAAA,CAAnF,KAAK,WAAY,MAAOxC,uCAAcpB,EAAiB,MAAAiE,GAAE,MAAM,kCAAzBjE,EAAiB,KAAA,MAEhE4D,EAA2E,KAA3E4C,GAAkDnC,EAAAjD,EAAI,aAAa,EAAA,CAAA,EACnEwC,EAA2E,KAA3E6C,GAAkDpC,EAAAjD,EAAI,aAAa,EAAA,CAAA,EACnEwC,EAA2E,KAA3E8C,GAAkDrC,EAAAjD,EAAI,aAAa,EAAA,CAAA,EACnEwC,EAA4E,KAA5E+C,GAAkDtC,EAAAjD,EAAI,cAAc,EAAA,CAAA,EACpEwC,EAA2E,KAA3EgD,GAAkDvC,EAAAjD,EAAI,aAAa,EAAA,CAAA,oBAQ7EwC,EAcM,MAdNiD,GAcM,CAbJjD,EAMS,SAAA,CALN,QAAOb,EACR,MAAM,kKACL,UAAWxB,EAAO,SAEhBrB,EAAU,MAAA,KAAA,IAAA,EAAA,EAAA4G,EAAA,EAEflD,EAKS,SAAA,CAJN,QAAOT,EACR,MAAM,mHACP,OAED"}